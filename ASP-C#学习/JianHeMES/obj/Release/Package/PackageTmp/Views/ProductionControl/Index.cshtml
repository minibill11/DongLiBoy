
@{
    ViewBag.Title = "生产管控";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table > tbody > tr > th, .table > tbody > tr > td {
        text-align: center;
        vertical-align: middle;
    }

        .rowTitle1 > th:nth-child(-n+4), .rowTitle2 > th:nth-child(-n+2), .table > tbody > tr > td:nth-child(-n+5) {
            border: 1px solid red;
        }

        .rowTitle1 > th:nth-child(n+5), .rowTitle2 > th:nth-child(n+3), .table > tbody > tr > td:nth-child(n+6) {
            border: 1px solid blue;
        }

        .rowTitle1 > th:nth-child(4), .rowTitle2 > th:nth-child(2), .table > tbody > tr > td:nth-child(5) {
            border-right: 1px solid blue;
        }

        .table > tbody > tr > td:nth-child(n+7), .table > tbody > tr > td:nth-child(1) {
            cursor: pointer;
        }
        .table > tbody > tr > td:nth-child(n+15){
            cursor: auto;
        }

    .table > tbody > tr:nth-child(n+3):hover {
        background-color: rgba(77, 72, 72, 0.15);
    }
</style>
<h2 class="text-center">生产管控信息</h2>
<div class="text-center">
    <p class="text-success text-center btn btn-default hidden-xs">
        @Html.ActionLink("历史记录", "ProductionControlHistory")
    </p>
</div>
    <br />
    <div id="app" class="form-group">
        <table class="table table-bordered">
            <colgroup>
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
            </colgroup>
            <tr class="rowTitle1">
                <th rowspan="2">订单号</th>
                <th rowspan="2">订单数量</th>
                <th rowspan="2">平台型号</th>
                <th colspan="2">生产排期</th>
                <th rowspan="2">实际开始生产时间</th>
                <th colspan="2">组装工序</th>
                <th colspan="2">调试老化</th>
                <th colspan="2">校正</th>
                <th colspan="2">包装</th>
                <th rowspan="2">最后包装记录时间</th>
                <th rowspan="2">生产时长</th>
            </tr>
            <tr class="rowTitle2">
                <th>起始日期</th>
                <th>出货时间</th>
                <th>完成率</th>
                <th>合格率</th>
                <th>完成率</th>
                <th>合格率</th>
                <th>完成率</th>
                <th>合格率</th>
                <th>完成率</th>
                <th>合格率</th>
            </tr>
            <tr v-for="(item, index) in marqueeList">
                <td v-on:click="orderDetail(item.OrderNum,item.Id)">{{item.OrderNum}}</td>
                <td>{{item.Quantity}}个</td>
                <td>{{item.PlatformType}}</td>
                <td>{{item.PlanInputTime.split(" ")[0]}}</td>
                <td>{{item.PlanCompleteTime.split(" ")[0]}}</td>
                <td>{{item.ActualProductionTime}}</td>
                <td v-on:click="Detail(item.OrderNum,'Assemble')">{{item.Assemble_Finish_Rate}}<span v-show="item.AssembleRecord_Count"><br />({{item.Assemble_Finish}}/{{item.Quantity}})</span> </td>
                <td v-on:click="Detail(item.OrderNum,'Assemble')">{{item.Assemble_Pass_Rate}}<span v-show="item.AssembleRecord_Count"><br />({{item.Assemble_Finish}}/{{item.AssembleRecord_Count}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Burn_in')">{{item.Burn_in_Finish_Rate}}<span v-show="item.Burn_in_Count"><br />({{item.Burn_in_Finish}}/{{item.Quantity}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Burn_in')">{{item.Burn_in_Pass_Rate}}<span v-show="item.Burn_in_Count"><br />({{item.Burn_in_Finish}}/{{item.Burn_in_Count}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Calibration')">{{item.Calibration_Finish_Rate}}<span v-show="item.Calibration_Count"><br />({{item.Calibration_Finish}}/{{item.Quantity}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Calibration')">{{item.Calibration_Pass_Rate}}<span v-show="item.Calibration_Count"><br />({{item.Calibration_Finish}}/{{item.Calibration_Count}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Appearance')">{{item.Appearances_Finish_Rate}}<span v-show="item.Appearances_Count"><br />({{item.Appearances_Finish}}/{{item.Quantity}})</span></td>
                <td v-on:click="Detail(item.OrderNum,'Appearance')">{{item.Appearances_Pass_Rate}}<span v-show="item.Appearances_Count"><br />({{item.Appearances_Finish}}/{{item.Appearances_Count}})</span></td>
                <td>{{item.ActualFinishTime}}</td>
                <td style="white-space:nowrap;" v-if="item.TotalTime.length==4">{{item.TotalTime[0]+"天"+item.TotalTime[1]+"时"+item.TotalTime[2]+"分"+item.TotalTime[3]+"秒"}}</td>
                <td style="white-space:nowrap;" v-else-if="item.TotalTime.length==3">{{item.TotalTime[0]+"时"+item.TotalTime[1]+"分"+item.TotalTime[2]+"秒"}}</td>
                <td style="white-space:nowrap;" v-else></td>
            </tr>
        </table>
    </div>
    <div id="setForm"></div>

    <script>
        var app = new Vue({
            el: "#app",
            data: {
                //animate: false,
                marqueeList: []
            },
            created: function () {
                //setInterval(this.showMarquee, 5000)
            },
            methods: {
                Detail: function (val, station) {
                    this.$options.methods.postForm("/ProductionControl/" + station, val);
                    //$.ajax({
                    //    type: 'post',
                    //    url: "/ProductionControl/" + station,
                    //    data: {
                    //        OrderNum: val
                    //    },
                    //    success: function (data) {
                    //        console.log(data);
                    //    },
                    //    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    //        console.log("POST失败")
                    //    }
                    //});
                },
                orderDetail: function (val, station) {
                    this.$options.methods.postForm("/OrderMgms/Details/" + station, val);
                },
                postForm: function (url, params) {
                    var newForm = $("<form action=" + url + " target='_blank' method='post' style='display:none' ><input name='OrderNum' value=" + params + " ></form>");
                    $("#setForm").append(newForm);
                    newForm.submit();
                    newForm.remove();
                }
                //showMarquee: function () {
                //    this.animate = true;
                //    setTimeout(() => {
                //        this.marqueeList.push(this.marqueeList[0]);
                //        this.marqueeList.shift();
                //        this.animate = false;
                //    }, 1000);
                //}
            }
        })
    </script>

    @section scripts {
        <script src="~/Scripts/jquery-1.11.3.js"></script>
        <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
        <script src="~/signalr/hubs"></script>
        <script>
            $(function () {
                var mypush = $.connection.ProductionControlIndex;
                mypush.client.sendProductionControlIndex = function (ProductionControlIndex) {
                    console.log(ProductionControlIndex)
                    app.marqueeList = [];
                    console.log(Object.keys(ProductionControlIndex).length)
                    for (index in ProductionControlIndex) {
                        var totalTimeList = [];
                        console.log(ProductionControlIndex[index].TotalTime)
                        if (ProductionControlIndex[index].TotalTime == "") {
                            var totalTime = "";
                        } else {
                            var totalTime = ProductionControlIndex[index].TotalTime.split(".");
                        };
                        if (totalTime.length == 3) {
                            var totalTimenday = totalTime[1].split(":");
                            totalTimeList.push(totalTime[0]);
                            for (item in totalTimenday) {
                                totalTimeList.push(totalTimenday[item]);
                            };
                        } else if (totalTime.length == 2) {
                            var totalTimenday = totalTime[0].split(":");
                            var totalTimenday1 = totalTime[1].split(":");
                            if (totalTimenday.length == 3) {
                                for (item in totalTimenday) {
                                    totalTimeList.push(totalTimenday[item]);
                                };
                            } else if (totalTimenday1.length == 3) {
                                for (item in totalTimenday1) {
                                    totalTimeList.push(totalTimenday1[item]);
                                };
                            }
                        } else {
                            totalTimeList.push(totalTime);
                        };
                        app.marqueeList.push({
                            Id: ProductionControlIndex[index].Id,
                            OrderNum: ProductionControlIndex[index].OrderNum,
                            Quantity: ProductionControlIndex[index].Quantity,
                            PlatformType: ProductionControlIndex[index].PlatformType,
                            PlanInputTime: ProductionControlIndex[index].PlanInputTime,
                            PlanCompleteTime: ProductionControlIndex[index].PlanCompleteTime,
                            ActualFinishTime: ProductionControlIndex[index].ActualFinishTime,
                            TotalTime: totalTimeList,
                            ActualProductionTime: ProductionControlIndex[index].ActualProductionTime,
                            Assemble_Finish_Rate: ProductionControlIndex[index].Assemble_Finish_Rate,
                            Assemble_Pass_Rate: ProductionControlIndex[index].Assemble_Pass_Rate,
                            Burn_in_Finish_Rate: ProductionControlIndex[index].Burn_in_Finish_Rate,
                            Burn_in_Pass_Rate: ProductionControlIndex[index].Burn_in_Pass_Rate,
                            Calibration_Finish_Rate: ProductionControlIndex[index].Calibration_Finish_Rate,
                            Calibration_Pass_Rate: ProductionControlIndex[index].Calibration_Pass_Rate,
                            Appearances_Finish_Rate: ProductionControlIndex[index].Appearances_Finish_Rate,
                            Appearances_Pass_Rate: ProductionControlIndex[index].Appearances_Pass_Rate,
                            Assemble_Finish: ProductionControlIndex[index].Assemble_Finish,
                            AssembleRecord_Count: ProductionControlIndex[index].AssembleRecord_Count,
                            Burn_in_Finish: ProductionControlIndex[index].Burn_in_Finish,
                            Burn_in_Count: ProductionControlIndex[index].Burn_in_Count,
                            Calibration_Finish: ProductionControlIndex[index].Calibration_Finish,
                            Calibration_Count: ProductionControlIndex[index].Calibration_Count,
                            Appearances_Finish: ProductionControlIndex[index].Appearances_Finish,
                            Appearances_Count: ProductionControlIndex[index].Appearances_Count
                        });
                    }
                };
                //启动
                $.connection.hub.start();
            });
        </script>
    }
