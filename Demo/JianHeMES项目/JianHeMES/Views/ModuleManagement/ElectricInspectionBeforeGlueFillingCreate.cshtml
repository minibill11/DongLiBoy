@model JianHeMES.Models.ElectricInspection

@{
    ViewBag.Title = "灌胶前电检工序";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ElectricInspection</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleBarcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleBarcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleBarcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ordernum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ordernum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ordernum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectricInspectionTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ElectricInspectionTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ElectricInspectionTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectricInspectionor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ElectricInspectionor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ElectricInspectionor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Section, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Section, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Section, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectricInspectionResult, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ElectricInspectionResult)
                    @Html.ValidationMessageFor(model => model.ElectricInspectionResult, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ElectricInspectionMessage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ElectricInspectionMessage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ElectricInspectionMessage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="app" class="form-horizontal" v-cloak>
        <h4 class="hidden-xs">@ViewBag.Title</h4>
        <h5 class="visible-xs text-center">@ViewBag.Title</h5>
        <hr class="hidden-xs" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="col-md-4 leftform">
            <div class="form-group">
                <div class="col-md-8  col-md-offset-4">
                    <div class="btn btn-sm" v-on:click="divert=!divert" v-bind:class="{'btn-success': divert,'btn-primary': !divert }">挪用库存</div>
                    <input class="checkbox-inline" type="checkbox" name="isnuo" v-model="divert" value="true" />
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">班组</label>
                <div class="col-md-8">
                    <group-select></group-select>
                </div>
            </div>

            @*挪用订单部分*@
            <div class="form-group" v-show="divert">
                <label for="nuoOrder" class="control-label col-md-4">被挪用订单号</label>
                <div class="col-md-8">
                    @*@Html.DropDownList("nuoOrder", (List<SelectListItem>)ViewBag.OrderList, new { @class = "selectpicker form-control", data_live_search = "true", data_style = "form-control" })*@
                </div>

                <label for="nuoBarCode" class="control-label col-md-4">被挪用条码号</label>
                <div class="col-md-8">
                    @*@Html.DropDownList("nuoBarCode", (List<SelectListItem>)ViewBag.nuoOrderList, new { @class = "selectpicker form-control", data_live_search = "true", data_style = "form-control" })*@
                    <input autocomplete="off" autofocus="autofocus" id="nuoBarCode" name="nuoBarCode" v-model="nuoBarCode" maxlength="15" onkeyup="this.value=this.value.toUpperCase().replace(/\s+/g,'')" type="text" class="form-control text-box single-line">
                    <div v-show="isnuonum" class="text-danger">{{checkmes}}</div>
                </div>
            </div>




            <div class="form-group">
                <div class="col-md-8 col-md-offset-4">
                    <span class="RepertoryStyle">是否有客户条码号：<input id="IsRepertory" type="checkbox"></span>
                </div>
            </div>
            @* 显示条码各工段通过情况 *@
            <div class="form-group" v-show="commonalitylist!=''">
                <label class="control-label col-md-4">各工段情况</label>
                <div class="col-md-8">
                    <table class="table table-bordered">
                        <tr>
                            <th>PQC</th>
                            <th>FQC</th>
                            <th>拼屏</th>
                            <th>老化</th>
                            <th>校正</th>
                            <th>包装</th>
                        </tr>
                        <tr v-for="item in commonalitylist">
                            <td><span v-bind:class="item.Accemble_Record==true?trueclass:falseclass"></span></td>
                            <td><span v-bind:class="item.FQC_Record==true?trueclass:falseclass"></span></td>
                            <td><span v-bind:class="item.MosaiScreen_Record==true?trueclass:falseclass"></span></td>
                            <td><span v-bind:class="item.Burn_in_Record==true?trueclass:falseclass"></span></td>
                            <td><span v-bind:class="item.Calibration_Record==true?trueclass:falseclass"></span></td>
                            <td><span v-bind:class="item.Appearance_Record==true?trueclass:falseclass"></span></td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input id="subm" type="submit" value="开始外观包装" class="btn btn-default" v-bind:disabled="checknuo" />
                    <div class="btn btn-default" v-on:click="qingdan()">条码列表</div>
                    @* 打印功能 *@
                    <div v-show="innerVal.length==15&&printShow" @*&&printMozhu!=''*@>
                        <el-button type="primary" v-on:click.prevent.stop="innerPrint" :loading="loading" size="small" @*v-show="innerVal.length==15&&printMozhu!=''"*@>打印模组内箱条码</el-button>
                        <div>
                            选打印机：
                            <el-select v-model="printSelect" clearable placeholder="选择打印机" size="small" style="width:120px">
                                <el-option v-for="item in printOptions"
                                           :key="item.value"
                                           :label="item.label"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                        </div>
                        <div v-show="printSelect!='0'&&printSelect!=''">
                            打印浓度：
                            <el-slider :max="30"
                                       :min="-30"
                                       v-model="nongDu"></el-slider>
                        </div>
                        <div v-show="printSelect!='0'&&printSelect!=''">
                            打印数量：
                            <el-input-number v-model.trim="pageCount"
                                             size="small"
                                             :min="1"
                                             :max="5"
                                             style="width:120px;"
                                             clearable>
                            </el-input-number>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="form-group">
                    <div id="innerCarton">
                        <div class="textCenter">
                            <b class="mozhu">{{printMozhu}}</b>
                            <div class="innerBarDiv">
                                <svg id="innerBarcode"></svg>
                            </div>
                        </div>
                    </div>
                </div>*@
        </div>
        @* 条码完成情况列表 *@
        <div v-show="qingdanshow" class="col-md-8 " style="padding:0">
            <div class="col-md-4 col-sm-4 frameW text-danger">
                <p>未开始 {{NotDoList.length}} 个<span v-show="divert">（点击可输入）</span></p>
                <div class="barcodeFrame" style="border-color:indianred">
                    <ul>
                        <li v-for="item in NotDoList"
                            v-on:click="nuoClickBar(item)"
                            v-bind:style="{cursor:divert?'pointer':''}">{{item}}</li>
                    </ul>
                </div>
            </div>
            <div class="col-md-4 col-sm-4 frameW text-info">
                <p>未完成 {{NeverFinish.length}} 个</p>
                <div class="barcodeFrame" style="border-color:cornflowerblue">
                    <ul>
                        <li v-for="item in NeverFinish">{{item}}</li>
                    </ul>
                </div>
            </div>
            <div class="col-md-4 col-sm-4 frameW text-success">
                <p>已完成 {{FinishList.length}} 个</p>
                <div class="barcodeFrame" style="border-color:forestgreen">
                    <ul>
                        <li v-for="item in FinishList">{{item}}</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
}

<div class="clearfix"></div>
<div class="row col-md-12">
    @Html.ActionLink("返回", "Index")
</div>
<script src="~/Scripts/Bootstraps/bootstrap-select.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
@*<script src="~/Scripts/printJS/JsBarcode.all.min.js"></script>*@
<script src="~/Scripts/axios.min.js"></script>
@*  引入组件：
    1/_groupSelect，下拉选择框组件
*@
@RenderPage("~/Views/Users/_groupSelect.cshtml")
<script>
    var app = new Vue({
        el: "#app",
        data: {
            NotDoList: [],//未开始列表
            NeverFinish: [],//未完成列表
            FinishList: [],//完成列表
            commonalitylist: [],//各工段通过情况数据
            //绿色√的样式
            trueclass: {
                'glyphicon': true,
                'glyphicon-ok': true,
                'green': true
            },
            //红色×的样式
            falseclass: {
                'glyphicon': true,
                'glyphicon-remove': true,
                'red': true
            },
            divert: false,//挪用开关
            isnuonum: false,//是否挪用
            nuoBarCode: "",//挪用的条码
            checkmes: "",//是否可挪用的显示消息
            qingdanshow: false,//显示清单开关
            checkMozu: ["", ""],//检查条码返回的信息
            innerVal: "",//条码值
            loading: false,//loading开关
            printMozhu: "",//打印时条码对应的模组
            //warntext: "",
            printShow: false,//打印功能显示开关
            pageCount: 1,//打印页数
            printOptions: printIpAddress,//打印机下拉列表
            printSelect: '',//选择的打印机值
            nongDu: 30//浓度，默认30
        },
        computed: {
            //控制‘开始电检’按钮是否可按
            checknuo: function () {
                if (this.checkMozu[0] != 'YES') {
                    return true;
                } else if (this.divert == true) {
                    if (this.nuoBarCode.length == 15 && this.isnuonum == false) {
                        return false;
                    } else {
                        return true;
                    };
                } else {
                    return false;
                };
            }
        },
        methods: {
            //获取订单的条码状态清单
            getInfo: (oNum) => {
                axios.post('/Appearances/AppearanceChecklist', { orderNum: oNum }).then(res => {
                    //console.log(res.data)
                    let allJson = res.data;
                    for (let i in allJson) {
                        let iJson = JSON.parse(allJson[i]);
                        if (i == "NotDoList") {
                            app.NotDoList = [];
                            for (let j in iJson) {
                                app.NotDoList.push(iJson[j]);
                            }
                        };
                        if (i == "NeverFinish") {
                            app.NeverFinish = [];
                            for (let j in iJson) {
                                app.NeverFinish.push(iJson[j]);
                            }
                        };
                        if (i == "FinishList") {
                            app.FinishList = [];
                            for (let j in iJson) {
                                app.FinishList.push(iJson[j]);
                            }
                        };
                    };
                }).catch(err => {
                    alert("获取订单信息失败")
                });
            },
            //当挪用开关切换时，控制表单挪用条码属性
            isnuo: (nuoVal) => {
                if (nuoVal == true) {
                    $("#nuoBarCode").attr("name", "nuoBarCode")
                } else {
                    $("#nuoBarCode").removeAttr("name")
                };
            },
            //检查条码是否合格
            postX: () => {
                app.commonalitylist = [];
                app.checkMozu = ["", ""];
                axios.post('/Appearances/DisplayBarcode', { barcode: app.innerVal }).then(res => {
                    let thisdata = res.data.split(",");
                    app.checkMozu = thisdata;
                }).catch(err => {
                    console.log("连接失败！")
                });
                axios.post('/Commonality/GetBarcode_Each_Section_Prompt', { barcode: app.innerVal }).then(res => {
                    app.commonalitylist = [];
                    app.commonalitylist.push(res.data);
                    if (res.data.Appearance_Record == true) {
                        app.printShow = true;
                    };
                }).catch(err => {
                    //alert("连接失败！")
                });
            },
            //检查挪用条码是否可以挪用
            checkorderbar: (v) => {
                axios.post('/Commonality/CheckBarCodeNumIsRepertory', {
                    ordernum: $("#nuoOrder").val(),
                    barcodenum: v,
                }).then(res => {
                    console.log(res.data)
                    if (res.data == true) {
                        app.checkmes = "";
                        app.isnuonum = false;
                    } else {
                        app.checkmes = res.data;
                        app.isnuonum = true;
                    };
                }).catch(err => {
                    console.log("检查失败")
                });
            },
            //显示条码列表
            qingdan: () => {
                app.getInfo($("#OrderNum").val());
                app.qingdanshow = true;
            },
            //setinnerBarDiv: (v) => {
            //    JsBarcode("#innerBarcode", v.toUpperCase(), {
            //        height: 60, //条形码的高度
            //        fontOptions: "bold",//使文字加粗体或变斜体
            //        format: "CODE128",
            //        font: "monospace",
            //        textAlign: "center",
            //        textMargin: 0,//设置条形码和文本之间的间距
            //        fontSize: 42,//设置文本的大小
            //        lineColor: "#000",//条形码颜色
            //        margin: 0,//设置条形码周围的空白边距
            //        marginTop: 0
            //    });
            //},

            //获取输入的条码对应的模组号
            getmozu: function () {
                //e.preventDefault();
                let inner = this.innerVal;
                if (inner != "" && inner.length == 15) {
                    if ($("#IsRepertory").is(":checked") == true) {
                        $("#CustomerBarCodesNum").focus(); // 设置焦点
                    };
                    this.postX();
                    axios.post('/Packagings/GetModulbarCode',
                        { barcode: inner }
                    ).then(res => {
                        //console.log(res)
                        if (res.data.module != "") {
                            this.printMozhu = res.data.module;
                            //this.mozuwarntext = ""
                        } else {
                            this.printMozhu = "";
                            //alert('此条码箱体号为空');
                        };
                    }).catch(err => {
                        console.warn("获取模组号失败")
                    });
                } else {
                    this.commonalitylist = [];
                };



                //if (this.innerVal.length == 15) {
                //    this.loading = true;
                //    //let jis = 0;
                //    //获取箱体号
                //    axios.post('/Packagings/GetModulbarCode',
                //        { barcode: this.innerVal }
                //    ).then(res => {
                //        //console.log(res)
                //        if (res.data != "") {
                //            this.printMozhu = res.data;
                //            //this.mozuwarntext = ""
                //        } else {
                //            this.printMozhu = "";
                //            alert('此条码箱体号为空');
                //            //this.$message({
                //            //    showClose: true,
                //            //    duration: 5000,
                //            //    message: '此条码箱体号为空',
                //            //    type: 'warning'
                //            //});
                //            //this.mozuwarntext = "此条码箱体号为空"
                //        };
                //        //if (jis == 0) {
                //        //    jis++;
                //        //} else {
                //        //    this.loading = false;
                //        //};
                //        this.loading = false;
                //    }).catch(err => {
                //        console.warn("获取模组号失败")
                //    });
                //    //验证条码号和所选订单是否匹配
                //    //axios.post('/Packagings/IsCheckBarcode',
                //    //    {
                //    //        ordernum: $("#OrderNum").val(),
                //    //        barcode: this.innerVal
                //    //    }
                //    //).then(res => {
                //    //    //console.log(res)
                //    //    if (res.data == true) {
                //    //        this.warntext = "";
                //    //    } else {
                //    //        this.warntext = res.data;
                //    //    };
                //    //    if (jis == 0) {
                //    //        jis++;
                //    //    } else {
                //    //        this.loading = false;
                //    //    };
                //    //}).catch(err => {
                //    //    console.warn("验证失败")
                //    //});
                //};
            },
            //打印条码方法
            innerPrint: () => {
                ////e.preventDefault();
                ////判断iframe是否存在，不存在则创建iframe
                //var iframe = document.getElementById("innerprint-iframe");
                //if (!iframe) {
                //    var el = document.getElementById("innerCarton");
                //    iframe = document.createElement('IFRAME');
                //    var doc = null;
                //    iframe.setAttribute("id", "innerprint-iframe");
                //    iframe.setAttribute('style', 'position:absolute;width:240px;height:120px;left:-1000px;top:-500px;');
                //    document.body.appendChild(iframe);
                //    doc = iframe.contentWindow.document;
                //    //这里可以自定义样式
                //    doc.write("<link href='/Content/styleFile/printStyle.css' rel='stylesheet' />");
                //    doc.write('<div>' + el.innerHTML + '</div>');
                //    doc.close();
                //    iframe.contentWindow.focus();
                //};
                //iframe.onload = function () {
                //    iframe.contentWindow.print();
                //    document.body.removeChild(iframe);
                //};
                let pageNum = app.pageCount;
                let nongDu = app.nongDu;
                if (pageNum < 0 || pageNum > 5 || pageNum == undefined) {
                    alert("打印的数量要在0~5之间！");
                    return;
                };
                localStorage.setItem('printPageCount', pageNum);
                localStorage.setItem('printNongDuCount', nongDu);
                app.loading = true;
                axios.post('/Appearances/InsideBoxLablePrint', {
                    barcode: app.innerVal,
                    modulenum: app.printMozhu,
                    pagecount: pageNum,
                    concentration: nongDu,
                    ip: app.printSelect,//ip地址
                    port: 9101,//端口
                }).then(res => {
                    console.log(res)
                    if (res.data == '打印成功！') {
                        app.$message({
                            showClose: true,
                            message: data.data,
                            type: 'success'
                        });
                        $("#BarCodesNum").select();
                    } else {
                        let r = confirm(`${res.data}`);
                        $("#BarCodesNum").select();
                    };
                    app.loading = false;
                    $("#BarCodesNum").select();
                }).catch(err => {
                    console.warn("获取选择列表失败")
                    app.loading = false;
                });
            },
            nuoClickBar(v) {
                if (this.divert == true) {
                    this.innerVal = v;
                    this.$nextTick(function () {
                        $("#nuoBarCode").select();
                    });
                };
            }
        },
        watch: {
            //监听挪用开关
            divert: (v) => {//挪用
                localStorage.setItem('Divert', v);
                app.isnuo(v);
                if (v == true) {
                    app.qingdan();
                    app.$nextTick(function () {
                        $("#nuoBarCode").select();
                    });
                } else {
                    app.innerVal = "";
                    $("#BarCodesNum").select();
                };
            },
            //监听挪用条码
            nuoBarCode: (v) => {
                if (v.length == 15) {
                    app.checkorderbar(v);
                } else {
                    app.isnuonum = false;
                }
            },
            //监听条码
            innerVal: (val) => {
                app.printShow = false;
                //if (val != "" && val.length == 15) {
                //    app.setinnerBarDiv(val);
                //} else {
                //    $(".innerBarDiv").html('<svg id="innerBarcode"></svg>');
                //};
                ////app.mozuwarntext = "";
                //app.printMozhu = "";
                ////app.warntext = "";
            },
            //监听选择的打印机
            printSelect: (v) => {
                localStorage.setItem('printIP', v);
            }
        },
        mounted: function () {
            //获取浏览器本地存储的打印机ip
            let printIP = localStorage.getItem('printIP');
            if (printIP != null) {
                this.printSelect = printIP;
            };
            //获取浏览器本地存储的订单号
            let localOrder = localStorage.getItem('Order');
            if (localOrder != null) {
                $("#OrderNum").val(localOrder);
                //this.getInfo(localOrder);
            };
            //设置 若订单改变，清空页面其它数据
            $("#OrderNum").change(function (val) {
                localStorage.setItem('Order', val.target.value);
                //app.getInfo(val.target.value);
                app.NotDoList = [];
                app.NeverFinish = [];
                app.FinishList = [];
                app.qingdanshow = false;
                app.commonalitylist = [];
                app.checkMozu = ["", ""];
                app.printShow = false;
                $("#BarCodesNum").select();
            });
            //获取浏览器本地存储的打印页数
            let localpage = localStorage.getItem('printPageCount');
            if (localpage != null) {
                this.pageCount = localpage;
            };
            //获取浏览器本地存储的打印浓度
            let localnongdu = localStorage.getItem('printNongDuCount');
            if (localnongdu != null) {
                this.nongDu = +localnongdu;
            };
            //获取浏览器本地存储的挪用状态
            let localDivert = localStorage.getItem('Divert');
            if (localDivert != null) {
                let localNuo = localDivert == 'true' ? true : false;
                this.divert = localNuo;
                this.isnuo(localNuo);
            };
            //获取浏览器本地存储的挪用订单号
            let localNuoOrder = localStorage.getItem('nuoOrder');
            if (localNuoOrder != null) {
                $("#nuoOrder").val(localNuoOrder);
            };
            //设置 若挪用订单改变，存储挪用订单号到浏览器本地存储
            $("#nuoOrder").change(function (val) {
                localStorage.setItem('nuoOrder', val.target.value);
                if (app.nuoBarCode.length == 15) {
                    app.checkorderbar(app.nuoBarCode);
                } else {
                    app.isnuonum = false;
                };
                $("#nuoBarCode").select();
            });


            //获取浏览器本地存储的是否库存信息
            let localRepertory = localStorage.getItem('isRepertory');
            if (localRepertory == "false" || localRepertory == null) {
                $("#isorder").hide();
                $("#CustomerBarCodesNum").removeAttr("name");
            } else if (localRepertory == "true") {
                $("#IsRepertory").prop('checked', true);
            };
            //设置 若是否库存信息改变，设置表单内值的属性
            $("#IsRepertory").change(function () {
                localStorage.setItem('isRepertory', $(this).is(':checked'));
                if ($(this).is(':checked') == true) {
                    $("#isorder").show();
                    $("#CustomerBarCodesNum").attr("name", "CustomerBarCodesNum");
                    $("#CustomerBarCodesNum").select();
                } else {
                    $("#isorder").hide();
                    $("#CustomerBarCodesNum").removeAttr("name");
                    $("#BarCodesNum").select();
                }
            });
            $("#BarCodesNum").select();

            //设置挪用条码框回车后的焦点跳转
            $("#nuoBarCode").keypress(function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    $("#BarCodesNum").select();
                    //if ($("#IsRepertory").is(":checked") == true) {
                    //    $("#CustomerBarCodesNum").focus(); // 设置焦点
                    //};
                };
            });

            //取消客户号码框回车功能
            $("#CustomerBarCodesNum").keypress(function (e) {
                if (e.which == 13) {
                    return false;
                }
            });

            //取消条码框回车功能
            $("#BarCodesNum").keypress(function (e) {
                if (e.which == 13) {
                    return false;
                }
            });

            $("#BarCodesNum").select();
        }
    })
</script>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="app" class="form-horizontal" v-loading="loading">


        <div class="col-md-4">
            <h3 class="hidden-xs">@ViewBag.Title</h3>
            <h4 class="visible-xs text-center">@ViewBag.Title</h4>
            <hr class="hidden-xs" />
            @* 打印功能 *@
            <div class="form-group">
                <label class="control-label col-md-4 col-xs-5">选择打印机</label>
                <div class="col-md-8 col-xs-7">
                    <el-select v-model="printSelect" clearable placeholder="选择打印机" size="medium" style="width:100%">
                        <el-option v-for="item in printOptions"
                                   :key="item.value"
                                   :label="item.label"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </div>
            </div>
            <div class="form-group" v-show="printSelect!='0'&&printSelect!=''">
                <label class="control-label col-md-4 col-xs-5">打印浓度</label>
                <div class="col-md-8 col-xs-7">
                    <el-slider :max="30"
                               :min="-30"
                               v-model="nongDu"></el-slider>
                </div>
            </div>
            <div class="form-group" v-show="printSelect!='0'&&printSelect!=''">
                <label class="control-label col-md-4 col-xs-5">打印数量</label>
                <div class="col-md-8 col-xs-7">
                    <el-input-number v-model.trim="pageCount"
                                     size="medium"
                                     :min="1"
                                     :max="5"
                                     style="width:100%;"
                                     clearable>
                    </el-input-number>
                </div>
            </div>
            @* 模组号顺序选择开关 *@
            <div class="form-group mozushow" style="display:none">
                <label class="control-label col-md-4 col-xs-5">模组号顺序</label>
                <div class="col-md-8 col-xs-7">
                    <el-switch v-model="reverse"
                               active-text="倒序"
                               inactive-text="正序">
                    </el-switch>
                </div>
            </div>
            @* 读取模组号方式开关 *@
            <div class="form-group mozushow" style="display:none">
                <label class="control-label col-md-4 col-xs-5">读取模组号</label>
                <div class="col-md-8 col-xs-7 mozuswitch">
                    <el-switch v-model="selectModule"
                               active-text="原模组号"
                               inactive-text="规则模组号">
                    </el-switch>
                </div>
            </div>
            @* 模组号框 *@
            <div class="form-group mozushow" style="display:none">
                <label class="control-label col-md-4 col-xs-5">模组号</label>
                <div class="col-md-8 col-xs-7">
                    @*<input id="newmozu" v-model.trim="newmozu" name="ModuleGroupNum" type="text" class="form-control text-box single-line">*@
                    <el-autocomplete id="newmozu"
                                     v-model.trim="newmozu"
                                     :fetch-suggestions="querySearch"
                                     :popper-append-to-body="false"
                                     :trigger-on-focus="false"
                                     :debounce="0"
                                     name="ModuleGroupNum"
                                     placeholder="输入内容可查询"
                                     highlight-first-item
                                     size="medium"
                                     clearable></el-autocomplete>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <button class="btn btn-default" v-on:click.prevent.stop="printPost">结束外观包装</button>
                    <input id="fsubmit" type="submit" value="结束外观包装" class="btn btn-default hidden" />
                </div>
            </div>
            <div class="hidden-xs">
                @Html.ActionLink("返回", "Appearance_B")
            </div>
        </div>
        @* 异常列表 *@
        <div id="AbnormalTable" class="col-md-offset-1 col-md-7">
            <br class="hidden-xs" /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h6 class="panel-title">异常列表</h6>
                </div>
                <div class="panel-body">
                    <div class="col-md-6">
                        <table class="table">
                            <tr><th colspan="4">螺丝</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="2" value="（螺丝）-漏打" v-model="abnormalarea">
                                    <label for="2">漏打</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="3" value="（螺丝）-不到位" v-model="abnormalarea">
                                    <label for="3">不到位</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="4" value="（螺丝）-打滑" v-model="abnormalarea">
                                    <label for="4">打滑</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="5" value="（螺丝）-用错" v-model="abnormalarea">
                                    <label for="5">用错</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="4">标识/铭牌/唛头</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="9" value="（标识/铭牌/唛头）-漏贴" v-model="abnormalarea">
                                    <label for="9">漏贴</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="10" value="（标识/铭牌/唛头）-贴歪" v-model="abnormalarea">
                                    <label for="10">贴歪</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="11" value="（标识/铭牌/唛头）-贴错" v-model="abnormalarea">
                                    <label for="11">贴错</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="48" value="（标识/铭牌/唛头）-翘角" v-model="abnormalarea">
                                    <label for="48">翘角</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="3">R/G/B/W/扫描确认</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="6" value="（R/G/B/W/扫描确认）-扫描不良" v-model="abnormalarea">
                                    <label for="6">扫描不良</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="7" value="（R/G/B/W/扫描确认）-掉灯" v-model="abnormalarea">
                                    <label for="7">掉灯</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="8" value="（R/G/B/W/扫描确认）-瞎灯" v-model="abnormalarea">
                                    <label for="8">瞎灯</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="47" value="（R/G/B/W/扫描确认）-偏色" v-model="abnormalarea">
                                    <label for="47">偏色</label>
                                </td>
                                <td colspan="2">
                                    <input type="checkbox" id="46" value="（R/G/B/W/扫描确认）-暗斑" v-model="abnormalarea">
                                    <label for="46">暗斑</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="100" value="（R/G/B/W/扫描确认）-瞎条" v-model="abnormalarea">
                                    <label for="100">瞎条</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="101" value="（R/G/B/W/扫描确认）-亮点" v-model="abnormalarea">
                                    <label for="101">亮点</label>
                                </td>
                                <td colspan="2">
                                    <input type="checkbox" id="102" value="（R/G/B/W/扫描确认）-亮条" v-model="abnormalarea">
                                    <label for="102">亮条</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="103" value="（R/G/B/W/扫描确认）-色块" v-model="abnormalarea">
                                    <label for="103">色块</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="3">电源线/信号线</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="51" value="（电源线/信号线）-扎线不一致" v-model="abnormalarea">
                                    <label for="51">扎线不一致</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="52" value="（电源线/信号线）-未插到位" v-model="abnormalarea">
                                    <label for="52">未插到位</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="53" value="（电源线/信号线）-破损" v-model="abnormalarea">
                                    <label for="53">破损</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="54" value="（电源线/信号线）-端子脱落" v-model="abnormalarea">
                                    <label for="54">端子脱落</label>
                                </td>
                                <td colspan="2">
                                    <input type="checkbox" id="55" value="（电源线/信号线）-错材" v-model="abnormalarea">
                                    <label for="55">错材</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="3">门锁/箱门</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="33" value="（门锁/箱门）-方向不一致" v-model="abnormalarea">
                                    <label for="33">方向不一致</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="34" value="（门锁/箱门）-锁不牢" v-model="abnormalarea">
                                    <label for="34">锁不牢</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="35" value="（门锁/箱门）-漏装" v-model="abnormalarea">
                                    <label for="35">漏装</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="3">胶条/胶垫</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="37" value="（胶条/胶垫）-没装到位" v-model="abnormalarea">
                                    <label for="37">没装到位</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="38" value="（胶条/胶垫）-错材" v-model="abnormalarea">
                                    <label for="38">错材</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="50" value="（胶条/胶垫）-漏装" v-model="abnormalarea">
                                    <label for="50">漏装</label>
                                </td>
                            </tr>
                        </table>

                        <table class="table">
                            <tr><th colspan="3">LOGO</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="12" value="（LOGO）-刮花" v-model="abnormalarea">
                                    <label for="12">刮花</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="13" value="（LOGO）-丝印错误" v-model="abnormalarea">
                                    <label for="13">丝印错误</label>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="14" value="（LOGO）-丝印不良" v-model="abnormalarea">
                                    <label for="14">丝印不良</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="49" value="（LOGO）-颜色错误" v-model="abnormalarea">
                                    <label for="49">颜色错误</label>
                                </td>
                            </tr>
                        </table>

                        <table class="table">
                            <tr><th colspan="2">清洁</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="31" value="（清洁）-内部异物" v-model="abnormalarea">
                                    <label for="31">内部异物</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="32" value="（清洁）-外部异物" v-model="abnormalarea">
                                    <label for="32">外部异物</label>
                                </td>
                            </tr>
                            <tr><th colspan="2">三防</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="29" value="（三防）-漏刷" v-model="abnormalarea">
                                    <label for="29">漏刷</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="30" value="（三防）-气泡" v-model="abnormalarea">
                                    <label for="30">气泡</label>
                                </td>
                            </tr>

                        </table>
                    </div>
                    <div class="col-md-6">
                        <table class="table">
                            <tr><th colspan="3">电源/系统卡</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="16" value="（电源/系统卡）-错材" v-model="abnormalarea">
                                    <label for="16">错材</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="17" value="（电源/系统卡）-松动" v-model="abnormalarea">
                                    <label for="17">松动</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="15" value="（电源/系统卡）-死卡" v-model="abnormalarea">
                                    <label for="15">死卡</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="3">磁环</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="56" value="（磁环）-漏装" v-model="abnormalarea">
                                    <label for="56">漏装</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="57" value="（磁环）-错材" v-model="abnormalarea">
                                    <label for="57">错材</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="58" value="（磁环）-脱落" v-model="abnormalarea">
                                    <label for="58">脱落</label>
                                </td>
                            </tr>
                            <tr><th colspan="3">指示灯</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="59" value="（指示灯）-不一致" v-model="abnormalarea">
                                    <label for="59">不一致</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="60" value="（指示灯）-破损" v-model="abnormalarea">
                                    <label for="60">破损</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="61" value="（指示灯）-灯扭" v-model="abnormalarea">
                                    <label for="61">灯扭</label>
                                </td>
                            </tr>
                            <tr><th colspan="3">定位销</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="62" value="（定位销）-漏装" v-model="abnormalarea">
                                    <label for="62">漏装</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="63" value="（定位销）-未装到位" v-model="abnormalarea">
                                    <label for="63">未装到位</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="64" value="（定位销）-错材" v-model="abnormalarea">
                                    <label for="64">错材</label>
                                </td>
                            </tr>
                            <tr><th colspan="3">钢丝绳</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="65" value="（钢丝绳）-漏装" v-model="abnormalarea">
                                    <label for="65">漏装</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="66" value="（钢丝绳）-未装到位" v-model="abnormalarea">
                                    <label for="66">未装到位</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="67" value="（钢丝绳）-错材" v-model="abnormalarea">
                                    <label for="67">错材</label>
                                </td>
                            </tr>
                            <tr><th colspan="3">安装板/挡板</th></tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="68" value="（安装板/挡板）-漏装" v-model="abnormalarea">
                                    <label for="68">漏装</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="69" value="（安装板/挡板）-错材" v-model="abnormalarea">
                                    <label for="69">错材</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="70" value="（安装板/挡板）-松动" v-model="abnormalarea">
                                    <label for="70">松动</label>
                                </td>
                            </tr>
                        </table>
                        <table class="table">
                            <tr><th colspan="2">其它</th></tr>
                            <tr>
                                <td colspan="2">
                                    <input type="checkbox" id="71" value="扫码显示箱体编号与实贴箱体编号不符" v-model="abnormalarea">
                                    <label for="71">扫码显示箱体编号与实贴箱体编号不符</label>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <input type="checkbox" id="20" value="组装FQC未完成" v-model="abnormalarea">
                                    <label for="20">组装FQC未完成</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="22" value="灯面防护不良" v-model="abnormalarea">
                                    <label for="22">灯面防护不良</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="26" value="老化未完成" v-model="abnormalarea">
                                    <label for="26">老化未完成</label>
                                </td>

                                <td>
                                    <input type="checkbox" id="24" value="零器件脱落" v-model="abnormalarea">
                                    <label for="24">零器件脱落</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="19" value="校正未完成" v-model="abnormalarea">
                                    <label for="19">校正未完成</label>
                                </td>

                                <td>
                                    <input type="checkbox" id="18" value="内外箱体编号不一致" v-model="abnormalarea">
                                    <label for="18" style="font-size:12px">内外箱体编号不一致</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="72" value="划痕" v-model="abnormalarea">
                                    <label for="72">划痕</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="45" value="高低差/亮暗线/错误超标" v-model="abnormalarea">
                                    <label for="45" style="font-size:12px">高低差/亮暗线/错误超标</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="21" value="模块方向错误" v-model="abnormalarea">
                                    <label for="21">模块方向错误</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="73" value="模组颜色不一致" v-model="abnormalarea">
                                    <label for="73">模组颜色不一致</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="checkbox" id="25" value="后盖压线" v-model="abnormalarea">
                                    <label for="25">后盖压线</label>
                                </td>
                                <td>
                                    <input type="checkbox" id="23" value="模块压线" v-model="abnormalarea">
                                    <label for="23">模块压线</label>
                                </td>
                            </tr>
                        </table>
                        <table></table>
                    </div>

                </div>
            </div>
        </div>
        <div class="visible-xs">
            @Html.ActionLink("返回", "Appearance_B")
        </div>
        @*//防位移*@
        <div class="form-group"><div class="col-md-offset-2 col-md-8"></div></div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var app = new Vue({
            el: "#app",
            data: {
                loading: false,
                abnormalarea: [],//存储选择的异常信息
                selectrepair: "",//存储维修情况的值
                newmozu: "",//模组号值
                printOptions: printIpAddress,//打印地址下拉列表
                printSelect: '',//打印地址值
                pageCount: "2",//打印页数
                nongDu: 30,//打印浓度
                reverse: false,//读取模组规则顺序 开关
                selectModule: false,//读取模组号方式 开关
                moduleList: []//模组号规则列表
            },
            created: function () {
                //维修默认值为正常
                $('#Appearance_OQCCheckAbnormal').attr('value', "正常");
            },
            mounted: function () {
                this.loading = true;
                //获取浏览器本地存储的打印机ip
                let printIP = localStorage.getItem('printIP');
                if (printIP != null) {
                    this.printSelect = printIP;
                };
                //获取浏览器本地存储的模组读取顺序
                let localreverse = localStorage.getItem('getMozureverse');
                if (localreverse != null) {
                    this.reverse = localreverse == 'true' ? true : false;
                };
                //获取浏览器本地存储的读取模组号方式
                let localselectModule = localStorage.getItem('getMozuselectModule');
                if (localselectModule != null) {
                    this.selectModule = localselectModule == 'true' ? true : false;
                };
                //获取浏览器本地存储的打印页数
                let localpage = localStorage.getItem('printPageCount');
                if (localpage != null) {
                    this.pageCount = localpage;
                };
                //获取浏览器本地存储的打印浓度
                let localnongdu = localStorage.getItem('printNongDuCount');
                if (localnongdu != null) {
                    this.nongDu = +localnongdu;
                };
                //执行判断是否显示模组输入框方法，获取模组号数据
                this.showmozu();
            },
            watch: {
                //监听维修情况，显示异常列表清单方法
                selectrepair: function (val) {
                    this.loading = true;
                    if (val == "正常") {
                        $("#AbnormalShow").hide();
                        $("#AbnormalTable").hide();
                        this.abnormalarea = ["正常"];
                        this.showmozu();
                    } else {
                        $("#AbnormalShow").show();
                        $("#AbnormalTable").show();
                        this.abnormalarea = [];
                        $(".mozushow").hide();
                        this.loading = false;
                    };
                },
                //监听异常清单值
                abnormalarea: function (val) {
                    $('#Appearance_OQCCheckAbnormal').attr('value', val);
                },
                //监听打印机地址值
                printSelect: (v) => {
                    localStorage.setItem('printIP', v);
                },
                //监听读取模组规则顺序
                reverse: function (v) {
                    localStorage.setItem('getMozureverse', v);
                    this.showmozu();
                },
                //监听读取模组号方式
                selectModule: function (v) {
                    localStorage.setItem('getMozuselectModule', v);
                    this.showmozu();
                }

            },
            methods: {
                //是否显示模组框，若显示则读取模组号
                showmozu: function () {
                    //判断模组号是否为空
                    //if ($("#ModuleGroupNum").val() == "") {
                    //显示输入框
                    $(".mozushow").show();
                    //读取规则模组号
                    axios.post('/Packagings/SelectModule', {
                        ordenum: $("#OrderNum").val(),
                        barcode: $("#BarCodesNum").val(),
                        reverse: this.reverse,
                        selectModule: this.selectModule,
                    }).then(res => {
                        //console.log(res.data);
                        this.newmozu = res.data.mudule;
                        this.moduleList = res.data.moduleList == null ? [] : res.data.moduleList;
                        this.loading = false;
                        $("#newmozu").select();
                    }).catch(err => {
                        console.warn("失败");
                        this.loading = false;
                        $("#newmozu").select();
                    });
                    //} else {
                    //    this.loading = false;
                    //};
                },
                //判断是否可以结束电检方法
                printPost: function () {
                    //$("#fsubmit").click();
                    this.loading = true;
                    let pageNum = this.pageCount;
                    let nongDu = this.nongDu;
                    if (pageNum < 0 || pageNum > 5 || pageNum == "") {
                        alert("打印的数量要在0~5之间！");
                        this.loading = false;
                        return;
                    };
                    localStorage.setItem('printPageCount', pageNum);
                    localStorage.setItem('printNongDuCount', nongDu);
                    //维修情况
                    let repair = this.selectrepair;
                    //存新箱体号
                    let module = this.newmozu;
                    //if ($("#ModuleGroupNum").val() == "") {
                    if (module == "") {
                        if (!confirm("模组号为空，是否继续？")) {
                            this.loading = false;
                            return;
                        } else {
                            this.print();
                        };
                    } else {
                        if (repair == "正常" || repair == "") {
                            //记录模组号
                            //$("#ModuleGroupNum").val(module);
                            axios.post('/Appearances/AddModuleFromAppearance_F', {
                                barcodes: $("#BarCodesNum").val(),
                                mudule: module,
                            }).then(res => {
                                this.print();
                                //console.log(res.data)
                            }).catch(err => {
                                console.warn("连接失败")
                            });
                        } else {
                            this.print();
                        };
                    };
                    //} else {
                    //    this.print();
                    //};
                },
                //打印方法
                print: function () {
                    //打印和完成
                    let repair = this.selectrepair;
                    let localIP = this.printSelect;
                    if (repair == "正常" || repair == "") {
                        if (localIP != "0" && localIP != "") {  // 已选打印机
                            axios.post('/Appearances/InsideBoxLablePrint', {
                                barcode: $("#BarCodesNum").val(),
                                modulenum: this.newmozu,
                                pagecount: this.pageCount,
                                concentration: this.nongDu,
                                ip: localIP,//ip地址
                                port: 9101,//端口
                            }).then(res => {
                                //console.log(res.data)
                                if (res.data == "打印成功！") {
                                    $("#fsubmit").click();
                                } else {
                                    $("#fsubmit").click();
                                    //let r = confirm(`打印失败,是否继续结束外观包装？\n 错误提示：${res.data}`);
                                    //if (r == true) {
                                    //    $("#fsubmit").click();
                                    //};
                                };
                            }).catch(err => {
                                $("#fsubmit").click();
                                console.warn("连接失败")
                            });
                        } else {    // 未选打印机--可以完成包装但不打印
                            //let r = confirm(`打印失败,是否继续结束外观包装？\n 错误提示：未选择打印机`);
                            //if (r == true) {
                            $("#fsubmit").click();
                            //}
                        };
                    } else {
                        $("#fsubmit").click();
                    };
                },
                //模组号规则的列表搜索方法
                querySearch(queryString, cb) {
                    let restaurants = this.moduleList;
                    let results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;
                    // 调用 callback 返回建议列表的数据
                    cb(results);
                },
                //模组号规则的列表过滤方法
                createFilter(queryString) {
                    return (restaurant) => {
                        return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) > -1);
                    };
                }
            }
        });
        //维修状态值改变则赋值
        $("#RepairCondition").change(function (v) {
            app.selectrepair = $(this).val();
        });

    </script>
}
