@model IEnumerable<JianHeMES.Models.Users>

@{
    ViewBag.Title = "UserManage";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/bootstrap-table-fixed-columns.min.css" rel="stylesheet" />
<link href="~/Scripts/Bootstraps/bootstrap-table.min.css" rel="stylesheet" />
<script src="~/Scripts/vue-resource.min.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-table.min.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-table-locale-all.min.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-table-fixed-columns.min.js"></script>
@*<h2>UserManage</h2>*@
<style>

    .panel-body:hover{
        background-color:#eee;
    }
    .panel-title:hover{
        background-color:#eee;
    }
    /*#table{
        table-layout:fixed;
    }*/
    table tbody tr td {
        text-align: center;
    }

    .no-records-found {
        display: none;
    }

    .th-one:nth-child(1) {
        display: inline-block;
        width: 10%;
    }

    .th-one:nth-child(2) {
        display: inline-block;
        width: 10%;
    }

    .th-one:nth-child(3) {
        display: inline-block;
        width: 6%;
    }

    .th-one:nth-child(4) {
        display: inline-block;
        width: 10%;
    }

    .th-one:nth-child(5) {
        display: inline-block;
        width: 14%;
    }

    .th-one:nth-child(6) {
        display: inline-block;
        width: 50%;
    }
    .th-one1:nth-child(1){
        display: inline-block;
        width: 10%;    }
    .th-one1:nth-child(2){
        display: inline-block;
        width: 10%;
    }
    .th-one1:nth-child(3){
        display: inline-block;
        width: 10%;
    }
    .th-one1:nth-child(4){
        display: inline-block;
        width: 10%;
    }
    .th-one1:nth-child(5){
        display: inline-block;
        width: 16%;
    }
    .th-one1:nth-child(6){
        display: inline-block;
        width: 44%;
    }

    html,
    body {
        height: 100%;
    }

    .checkbox {
        border: none;
        display: inline-flex;
    }
        
        .checkbox input[type="checkbox"] {
            position: static;
        }

    .left {
        width: 14%;
        height: 600px;
        float: left;
    }

    .forkbutton button {
        padding: 2px;
        width: 50%;
        font-size: 15px;
    }

    .left ul li,
    .left ul li a {
        display: inline-block;
        width: 100%;
        height: auto;
        border: none;
        border-radius: 5px;
        text-align: center;
    }

    .ritgh {
        width: 84%;
        height: 500px;
        margin-left: 15px;
        float: right;
    }

    .rigth-top {
        width: 100%;
        height: 40px;
        float: left;
    }

    .rigth-bottom {
        width: 100%;
        height: 560px;
        clear: left;
    }

    .Searchposition div {
        width: 250px;
        margin-left: 45px;
    }

    table thead tr th {
        text-align: center;
    }

    .boxposition div {
        display: inline-block;
        padding: 8px;
        margin: 0px;
    }

    .hide {
        display: none;
    }

    .show1 {
        display: normal;
    }

    /* VUE阶段动画样式 */
    .v-enter {
        opacity: 0;
        transform: translateX(50px);
    }

    .v-leave-to {
        opacity: 0;
        transform: translateX(-50px);
    }

    .v-enter-active,
    .v-leave-active {
        transition: all .2s linear;
    }


    .table-top thead tr th {
        display: inline-block;
        text-align: center;
    }

        .table-top thead tr th:nth-child(1) {
            width: 80px;
        }

        .table-top thead tr th:nth-child(2) {
            margin-left: 37px;
        }

        .table-top thead tr th:nth-child(3) {
            margin-left: 64px;
        }

        .table-top thead tr th:nth-child(4) {
            margin-left: 40px;
        }

        .table-top thead tr th:nth-child(5) {
            margin-left: 96px;
        }

        .table-top thead tr th:nth-child(6) {
            margin-left: 300px;
        }

    .modal-inner {
        width: 50%;
        height: auto;
        min-height: 250px;
        float: left;
    }

        .modal-inner h5 {
            margin-top: 15px;
        }
    .checkbox label{
        padding:0;
    }
</style>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using StackExchange.Profiling;
<div class="container" style="height:750px;margin-top: 50px;">
    <div id="app">
        @*<p style="text-align:center;margin-left:20%">部门: {{first}} ,管理：{{second}}</p>*@
        <div class="left">
            <button type="button" class="btn btn-primary" style="width:145px;font-size:20px;">建和MES</button>
            <div class="btn-group forkbutton" style="width:145px">
                <button v-on:click="forkleft" type="button" class="btn btn-default" v-bind:class="">权限管理</button>
                <button v-on:click="forkrigth" type="button" class="btn btn-default">人员管理</button>
            </div>
            <transition mode="out-in">
                <component v-bind:is="forking" v-bind:navbar="navBarmain" v-bind:navbarinner="navbarmainInner"></component>
            </transition>
        </div>
        <div class="ritgh">
            @*第一个模态框*@
            <div style="top:180px" class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                ×
                            </button>
                        </div>
                        <div class="modal-body">
                            <p><b>部门：{{modalData.dapr}}</b><b style="margin-left:30px;">职位：{{modalData.posi}}</b><b style="margin-left:30px;">名称:{{modalData.user}}</b></p>
                            <div class="modal-inner" style="border-right:1px solid black;padding:10px;margin-top:16px;display:normal;">
                                <h5>已有权限:</h5>
                                <div v-if="modalData.haver!=''" class="checkboxinner" style="display:normal">
                                    <label v-for="its in modalData.haver" style="display:block;">
                                        <input type="checkbox" v-bind:value="its" v-bind:checked="true" class="checkedinput">
                                        <span v-text="its"></span>
                                    </label>
                                </div>
                                <div v-else class="checkbox">
                                    <label>
                                        <span>暂无更多权限</span>
                                    </label>
                                </div>
                            </div>
                            <div class="modal-inner" style="border-left:1px solid black;padding:10px;margin-top:16px;display:normal">
                                <h5>可添加权限:</h5>
                                <div v-if="modalData.canadd!=''" class="checkboxinner" style="display:normal">
                                    <label v-for="itss in modalData.canadd" style="margin-left:5px;">
                                        <input type="checkbox" v-bind:value="itss" v-bind:checked="false" class="cancheckinput">
                                        <span v-text="itss"></span>
                                    </label>
                                </div>
                                <div v-else class="checkbox">
                                    <label>
                                        <span>暂无更多权限</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="closeModalone" type="button" class="btn btn-default" data-dismiss="modal">
                                关闭
                            </button>
                            <button type="button" class="btn btn-primary" v-on:click="postChecked()">
                                提交更改
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            @*第二个模态框*@
            <div>
                <div style="top:180px" class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    ×
                                </button>
                            </div>
                            <div class="modal-body">
                                <p><b>部门：{{first}}</b><b style="margin-left:30px;">管理分组：{{second}}</b><b style="margin-left:30px;">名称:{{user}}</b><b style="margin-left:30px;">职位:{{position}}</b></p>
                                <div class="modal-inner" style="border-right:1px solid black;padding:10px;margin-top:16px;display:normal;">
                                    <h5>已有:</h5>
                                    <div v-if="shitInfo.currentAsign!=''" class="checkboxinner" style="display:block">
                                        <label v-for="its in shitInfo.currentAsign" style="display:block;">
                                            <input type="checkbox" v-bind:value="its" checked class="shitLeft">
                                            <span v-text="its"></span>
                                        </label>
                                    </div>
                                    <div v-else class="checkbox">
                                        <label>
                                            <span>暂无更多权限</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="modal-inner" style="border-left:1px solid black;padding:10px;margin-top:16px;display:normal">
                                    <h5>可添加:</h5>
                                    <div v-if="shitInfo.canAddAsign!=''" class="checkboxinner" style="display:block">
                                        <label v-for="its in shitInfo.canAddAsign" style="margin-left:5px;">
                                            <input type="checkbox" v-bind:value="its" class="shitRigth">
                                            <span v-text="its"></span>
                                        </label>
                                    </div>
                                    <div v-if="shitInfo.canAddAsign==''" class="checkbox">
                                        <label>
                                            <span>暂无更多权限</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal" id="closeModaltwo">
                                    关闭
                                </button>
                                <button type="button" class="btn btn-primary" v-on:click="postShit()">
                                    提交更改
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="rigth-bottom">
                <ol class="breadcrumb">
                    当前位置：
                    <li>
                        {{first}}
                    </li>
                    <li class="active">{{second}}</li>
                    <span style="display:inline-block;float:right;width:400px"><p style="margin-right:25px;display:inline">上表为可操作表：{{topmsg}}</p> <p style="display:inline">下表为可查看表：{{bottommsg}}</p></span>
                </ol>
                <table id="table" class="table table-hover"
                       data-toggle="table"
                       data-classes="table table-hover"
                       data-striped="true"
                       data-height="300">
                    <thead>
                        <tr>
                            <th class="th-one">部门</th>
                            <th class="th-one">职位</th>
                            <th class="th-one">工号</th>
                            <th class="th-one">名称</th>
                            <th class="th-one">时间</th>
                            <th class="th-one">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,i) in canchange" v-bind:key="item.id">
                            <td style="width: 10%;" data-toggle="modal" data-target="#myModal2" v-on:click="getinfoofshit(item)">{{item.department}}</td>
                            <td style="width: 10%;" data-toggle="modal" data-target="#myModal2" v-on:click="getinfoofshit(item)">{{item.position}}</td>
                            <td style="width: 6%;" data-toggle="modal" data-target="#myModal2" v-on:click="getinfoofshit(item)">{{item.userNum}}</td>
                            <td style="width: 10%;" data-toggle="modal" data-target="#myModal2" v-on:click="getinfoofshit(item)">{{item.userName}}</td>
                            <td style="width: 14%;" data-toggle="modal" data-target="#myModal2" v-on:click="getinfoofshit(item)">{{item.Time | timeFormat}}</td>
                            <td style="width: 478px;padding: 0px;height:auto;text-align:left;">
                                <div v-if="item.haveRoleList!=null" class="checkbox" style="display:inline-block;width:100%;padding:0;margin-bottom:0;">
                                    <label v-for="its in item.haveRoleList" style="width:27%;display:inline-block;">
                                        <input type="checkbox" v-bind:value="its" disabled checked>
                                        <span v-text="its"></span>
                                    </label>
                                </div>
                                
                                <div v-if="item.canAddRoleList!=null" class="checkbox" style="display:inline-block;width:100%;padding:0;margin-bottom:0;">
                                    <label v-for="its in item.canAddRoleList" style="width:27%;float:left;display:inline-block;">
                                        <input type="checkbox" v-bind:value="its" disabled>
                                        <span style="width:150%" v-text="its"></span>
                                    </label>
                                </div>
                                <div v-if="item.haveRoleList==null&&item.canAddRoleList==null" class="checkbox">
                                    <label>
                                        <span>暂无更多权限</span>
                                    </label>
                                </div>
                                <button v-on:click="getsingalinfo(item)" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#myModal">
                                    更多操作
                                </button>
                                <button class="btn btn-primary btn-sm" v-on:click="postRs(item)">{{item.isCheckAuthorization}}</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <table id="table" class="table table-hover"
                       data-toggle="table"
                       data-classes="table table-hover"
                       data-striped="true"
                       data-height="450">
                    <thead>
                        <tr>
                            <th class="th-one1" style="width: 10%;">部门</th>
                            <th class="th-one1" style="width: 10%;">职位</th>
                            <th class="th-one1" style="width: 10%;">工号</th>
                            <th class="th-one1" style="width: 10%;">名称</th>
                            <th class="th-one1" style="width: 18%;">时间</th>
                            <th class="th-one1" style="width: 42%;">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,i) in onlyread" v-bind:key="item.id">
                            <td style="width: 10%;">{{item.department}}</td>
                            <td style="width: 10%;">{{item.position}}</td>
                            <td style="width: 10%;">{{item.userNum}}</td>
                            <td style="width: 10%;">{{item.userName}}</td>
                            <td style="width: 18%;">{{item.Time | timeFormat}}</td>
                            <td style="width: 42%;padding: 0px; text-align:left;">
                                <div v-if="item.haveRoleList!=null" class="checkbox">
                                    <label v-for="its in item.haveRoleList">
                                        <input type="checkbox" value="" disabled checked>
                                        <span v-text="its"></span>
                                    </label>
                                </div>
                                <div v-else class="checkbox">
                                    <label>
                                        <span></span>
                                    </label>
                                </div>
                                <div v-if="item.canAddRoleList!=null" class="checkbox">
                                    <label v-for="its in item.canAddRoleList">
                                        <input type="checkbox" value="" disabled>
                                        <span v-text="its"></span>
                                    </label>
                                </div>
                                <div v-if="item.haveRoleList==null&&item.canAddRoleList==null" class="checkbox">
                                    
                                        <span>暂无更多权限</span>
                                   
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- left管理组件 -->
<template id="left">
    <div>
        <div class="panel-group" id="accordion">
            <div class="panel panel-default" v-for="(item,i) in navbar" style="width:90%;margin-top:8px;">
                <div class="panel-heading">
                    <h4 class="panel-title" >
                        <a onclick="firstChoise(this)" data-toggle="collapse" data-parent="#accordion" v-bind:href="'#' + i" style="font-size:14px;text-decoration:none;">
                            {{item}} <span class="caret"></span>
                        </a>
                    </h4>
                </div>
                <div v-bind:id="i" class="panel-collapse collapse">
                    <div class="panel-body active" style="width:100%;padding:5px 15px;" role="button" onclick="secondChoise(this)" v-for="item in navbarinner">
                        {{item}}
                    </div>
                </div>
            </div>
        </div>
   </div>
    @*<div class="btn-group" v-for="item in navbar" style="width:90%;margin-top:15px;">
        <button onclick="firstChoise(this)" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"
                style="width:100%">
            {{item}} <span class="caret"></span>
        </button>*@
    <!-- 修改bootstrap下拉菜单宽度需要设置min-width属性 -->
    @*<ul class="dropdown-menu" role="menu" style="min-width:100%;">
                <li style="margin-top:5px;" v-for="item in navbarinner" data-stopPropagation=”true”><a href="#" onclick="secondChoise(this)">{{item}}</a></li>
            </ul>
        </div>*@
</template>
<!-- rigth管理组件 -->
<template id="rigth">
    <div>
        <div class="btn-group" v-for="item in navBar" style="width:90%;margin-top:15px;">
            <button onclick="firstChoise(this)" class="btn btn-primary dropdown-toggle" data-toggle="dropdown"
                    style="width:100%">
                {{item}} <span class="caret"></span>
            </button>
            <!-- 修改bootstrap下拉菜单宽度需要设置min-width属性 -->
            <ul class="dropdown-menu" role="menu" style="min-width:100%;">
                <li style="margin-top:5px;" v-for="item in navsecond" data-stopPropagation=”true”><a href="#" onclick="secondChoise(this)">{{item}}</a></li>
            </ul>
        </div>
    </div>
</template>
@MiniProfiler.RenderIncludes();
<script>

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        // 获取已激活的标签页的名称
        var activeTab = $(e.target).text();
        // 获取前一个激活的标签页的名称
        var previousTab = $(e.relatedTarget).text();
        $(".active-tab span").html(activeTab);
        $(".previous-tab span").html(previousTab);
    });
    $("body").on('click', '[data-stopPropagation]', function (e) {
        e.stopPropagation();
    }); //bootstrap下拉菜单点击阻止消失

    var left = {
        template: "#left",
        data: function () {
            return {
            }
        },
        props: ["navbar", "navbarinner"],
        created() {
        },
        methods: {
            getDepartmentList() {

            },
        },
    };              //定义侧边导航栏的组件模板对象

    var rigth = {
        template: "#rigth",
        data: function () {
            return {
            }
        }
    }               //定义侧边导航栏的组件模板对象

    Vue.filter("timeFormat", function (val) { //时间格式化
        var theDay = new Date(val);
        var theYear = theDay.getFullYear();
        //padStart是String的方法；所以需要将时间转换为字符串
        var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
        var theWeek = theDay.getDate().toString().padStart(2, "0");
        var theHour = theDay.getHours().toString().padStart(2, "0");
        var theMinue = theDay.getMinutes().toString().padStart(2, "0");
        var theSecond = theDay.getSeconds().toString().padStart(2, "0");
        return theYear + "-" + theMonth + "-" + theWeek + " " + theHour + ":" + theMinue + ":" + theSecond;
    })   //自定义Vue过滤器：过滤输出的时间字符串
    Vue.directive("focus", { //自定义全局指令。inserted指定方法执行的时间段；el指向使用该指令的元素；
        inserted: function (el) {
            el.focus();
        }
    })   //自定义Vue指令：页面刷新时当前元素获取焦点--未使用

    var vm = new Vue({
        el: "#app",
        data: {
            topmsg: "无对应结果",
            bottommsg:"无对应结果",
            searching: "",     //搜索方法的关键字
            first: "",         //存储第一次点击的部门用来获取右页面信息
            second: "",        //存储第一次点击的管理分组用来获取右页面信息
            forking: "",        //存储当前侧边导航的组件
            navBarmain: [],     //存储获取的部门，展示在侧边导航栏
            navbarmainInner: [],//存储获取的部门下面的管理分组，展示在侧边二级导航栏
            datarigth: [],      //存储有页面的全部信息
            canchange: [],      //存储右页面top--可操作的表格里面的数据
            onlyread: [],       //存储右页面bottom--只供展示的表格数据
            modalData: [],      //存储点击“更多操作”后获取的本行的全部信息
            deletecheck: [],    //存储点击“更多操作”后获取的本行的信息中的删除权限操作（在模态框中操作）
            checkedAdd: [],       //存储点击“更多操作”后获取的本行的信息中的添加权限操作（在模态框中操作）
            shitInfo: [],        //存储点击行获取对应数据
            user: [],             //存储本行用户名称
            position: "",           //存储本行操作人职位
            shitLeftInput: [],      //存储模态框2左边可删除的项
            shitRigthInput: []       //存储模态框2右边可添加的项
        },
        methods: {
            search(searching) { //创建新数组，foreach返回符合条件的元素，组成新数组成为搜索的内容；
                var newList = [];
                this.list.forEach(function (item) {
                    if (item.workNum.indexOf(searching) !== -1) {
                        newList.push(item);
                    }
                });
                var sum = 0;
                var result = this.avergrs;
                var rows = this.list.length;
                for (var i = 0; i < rows; i++) {
                    sum += this.list[i].id
                };
                this.avergrs = sum / rows;
                return newList;
            },      //搜索功能方法---目前未引用
            forkleft() {
                this.forking = "left";
                this.$http.post("/Users/displayDepartmentByRole").then(function (res) {
                    this.navBarmain = res.body;
                    console.log(res.bodyText);
                }, function (res) {
                    console.log(res);
                })
            },             //侧边导航切换成“权限管理”组件
            forkrigth() {
                this.forking = "rigth"
            },            //侧边导航切换成“人员管理”组件
            getsingalinfo(indexs) {
                var departments = indexs.department;
                var positions = indexs.position;
                var userName = indexs.userName;
                var userNum = indexs.userNum;
                var rigths = indexs.isCheckAuthorization;
                var haveRoleLists = indexs.haveRoleList;
                var canAddRoleLists = indexs.canAddRoleList;
                this.modalData = { dapr: departments, posi: positions, user: userName, haver: haveRoleLists == null ? '' : haveRoleLists, canadd: canAddRoleLists == null ? '' : canAddRoleLists, id: userNum, rigths: rigths }
                // console.log(positions + '\n' + departments + '\n' + userNums + '\n' + haveRoleLists + '\n' + canAddRoleLists + '\n' + this.modalData)
            },  //点击“更多操作”获取本行信息
            postChecked() {
                getDel();          //执行获取删除项的方法，赋值给data里面的deletecheck
                getAdd();          //执行获取添加项的方法，赋值给data里面的checkedAdd

                //var postJson = { posittion: this.modalData.posi, depar: this.modalData.dapr, user: this.modalData.user, add: this.checkedAdd, Delete: this.deletecheck };
                var postJson = { username: this.modalData.user, userid: this.modalData.id, department: this.modalData.dapr, position: this.modalData.posi, add: this.checkedAdd, Delete: this.deletecheck, rolename: this.second }
                this.$http.post("/Users/ChangeUserRole", { json: JSON.stringify(postJson) }, { emulateJSON: true }).then(
                    res => {
                        alert('提交保存成功！');
                        postMain();
                        $("#closeModalone").click();
                    },
                    res => {
                        alert('提交保存失败！')
                    }
                    );
                
            },          //点击模态框中的“提交修改”上传数据 ---“操作更多”按钮上的模态框
            postShit() {
                getShitLeft();
                getShitRigth();
                var shitData = { posittion: this.position, depa: this.first, add: this.shitLeftInput, 'delete': this.shitRigthInput }
                console.log(JSON.stringify(shitData));
                var datasss = JSON.stringify(shitData)
                this.$http.post("/Users/ChangeManageRole", { json: datasss }, { emulateJSON: true }).then(
                    res => {
                        alert("提交保存成功！");
                        postMain();
                        $("#closeModaltwo").click()
                    },
                    res => {
                        alert("提交保存失败！")
                    }
                    )
            },             //点击模态框中的“提交修改”上传数据 ---点击行出现的模态框
            getinfoofshit(indexs) {
                var users = indexs.userName;
                var positions = indexs.position;
                this.user = users;
                this.position = positions;
                this.$http.post("/Users/displayRoleTree", { department: this.first, groupRoleName: this.second, user: positions }, { emulateJSON: true }).then(
                    res => {
                        if (res.bodyText != "没有记录") {
                            this.shitInfo = res.body;
                            console.log(res.bodyText)
                        } else {
                            alert(res.bodyText)
                        }
                    },
                    res => {
                        alert("获取本行信息失败！")
                    }
                    )
            },  //获取点击行出现的模态框里面的数据
            postRs(indexs) {
                this.getsingalinfo(indexs);
                console.log(this.modalData.rigths)
                if (this.modalData.rigths === "已授权") {
                    this.$http.post("/Users/DelteAuthorization", { userposition: this.modalData.posi, department: this.modalData.dapr }, { emulateJSON: true }).then(
                    res => {
                        alert("取消授权成功");
                        postMain();
                        console.log(123)
                    }, res => {
                        alert("连接服务器失败！")
                        console.log(456)
                    }
                    )
                } else if (this.modalData.rigths === "未授权") {
                    this.$http.post("/Users/Authorization", { userposition: this.modalData.posi, department: this.modalData.dapr }, { emulateJSON: true }).then(
                    res => {
                        alert("授权成功");
                        postMain();
                        console.log(123)
                    }, res => {
                        alert("连接服务器失败！")
                        console.log(456)
                    }
                    )
                }
                
            },                //提交授权
        },
        watch: {
            first() {
                if (this.first != "") {
                    this.$http.post("/Users/displayRoleGroupList", { department: this.first }, { emulateJSON: true }).then(function (res) {
                        this.navbarmainInner = res.body;
                        //console.log(res.bodyText);
                    }, function (res) {
                        console.log(res);
                    })
                };
                this.second = "";
                this.canchange = [];
                this.onlyread = [];
            },    //侧边导航点击部门获取该部门下对应的管理分组
            second() {
                postMain();

            }    //侧边导航点击部门且点击管理分组之后获取页面右部的数据
        },
        components: {
            left,           // 侧边导航的左边组件
            rigth           //侧边导航的右边组件
            }   //注册组件

    })
        
        function postMain() {
        if (vm.second != "" && vm.first != "") {
            vm.$http.post("/Users/displayUserList", { department: vm.first, groupRoleName: vm.second }, { emulateJSON: true }).then(function (res) {
                vm.datarigth = res.body;
                vm.canchange = vm.datarigth.canChageUser;
                if (vm.canchange == null) { vm.topmsg = "无对应结果" } else { vm.topmsg = "可操作" }
                vm.onlyread = vm.datarigth.justReadUser
                if (vm.onlyread == null) { vm.bottommsg = "无对应结果" } else { vm.bottommsg = "可操作" }
                console.log(JSON.parse(res.bodyText));
                if (JSON.parse(res.bodyText).justReadUser[0].haveRoleList == null) {
                    console.log(JSON.parse(res.bodyText).justReadUser[0].haveRoleList);
                }

                console.log(vm.canchange.canAddRoleList)
            })
        }
    }    //获取部门跟管理分组后的总的post方法

        function firstChoise(element) {
          console.log(element.innerText);
          vm.first = element.innerText;
            };  //首次进入页面获取部门

        function secondChoise(element) {
            console.log(element.innerText);
            vm.second = element.innerText;
            }; //首次进入页面获取部门下面的管理分组

        function getDel() {
            var checkbox = $(".checkedinput");
            var deletes =[];
            for (let i = 0; i < checkbox.length; i++) {
                if (checkbox[i].checked == false) {
                    deletes.push(checkbox[i].value)
            }
            };
            console.log(deletes)
            vm.deletecheck = deletes;
            }   //获取模态框里面左边的删除权限的项

        function getAdd() {
            var checkbox = $(".cancheckinput");
            var checkedadd =[];
            for (let i = 0; i < checkbox.length; i++) {
                if (checkbox[i].checked == true) {
                    checkedadd.push(checkbox[i].value);
            }
            };
            console.log(checkedadd)
            vm.checkedAdd = checkedadd;
            }   //获取模态框里面右边的添加权限的项

        function getShitLeft() {
            var checkbox = $(".shitLeft");
            var checkedadd =[];
            for (let i = 0; i < checkbox.length; i++) {
                if (checkbox[i].checked == false) {
                    checkedadd.push(checkbox[i].value);
                }
            };
            console.log(checkedadd)
            vm.shitLeftInput = checkedadd;
        }  //点击行获取的数据里面的选择框获取--左边删除

        function getShitRigth() {
        var checkbox = $(".shitRigth");
        var checkedadd = [];
        for (let i = 0; i < checkbox.length; i++) {
            if (checkbox[i].checked == true) {
                checkedadd.push(checkbox[i].value);
            }
        };
        console.log(checkedadd)
        vm.shitRigthInput = checkedadd;
    } //点击行获取的数据里面的选择框获取--右边增加
</script>

