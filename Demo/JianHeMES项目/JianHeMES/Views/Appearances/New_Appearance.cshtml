@*  <summary>
    1.开始外观电检页面
    2.页面主要功能是为条码记录电检开始时间
    3.选择订单后可查看该订单所有条码的状态，包括 未开始/未完成/已完成 三种状态
    4.挪用库存功能，可选择挪用订单号和条码号
    5.扫码或输入条码回车后，会展现此条码模组号，和此条码各工段通过情况，同时验证此条码能否进行开始电检
    6.若条码合格且处于未开始/未完成状态，则可以开始电检
    7.若条码合格但条码处于已完成状态，则出现打印条码相应的功能按钮，（可选打印机，调打印浓度，设置打印数量）
    </summary>*@
@model JianHeMES.Models.Appearance

@{
    ViewBag.Title = "外观电检工作";
}
@* css放置处 *@
@section cssStyle {
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet/less" type="text/css" href="~/Content/styleFile/moduleManagement/module.less" />
    <style>
        input, textarea, select {
            max-width: 220px;
        }

        .barcodeFrame {
            width: 200px;
            height: 200px;
            border: 1px solid #555;
            overflow: auto;
            padding: 5px;
        }

            .barcodeFrame ul {
                list-style: none;
                padding: 0;
            }

        .frameW p {
            margin: 10px 0;
        }

        .selectComponent .el-input__inner {
            width: 215px;
        }

        @@media screen and (min-width:992px) {
            .leftform {
                border-right: 1px solid #555;
                padding: 40px 40px 0 0;
                min-height: 500px;
            }

            .barcodeFrame {
                height: 400px;
            }
        }

        @@media screen and (min-width:768px) {
            .frameW {
                text-align: center;
                padding-right: 0;
            }

            .barcodeFrame {
                margin: 0 auto;
            }
        }

        .table {
            margin-bottom: 0;
            max-width: 215px;
        }

            .table > tbody > tr > td, .table > tbody > tr > th {
                padding: 1px;
                text-align: center;
                vertical-align: middle;
                font-size: 13px;
                height: 22px;
            }

        .table-bordered > tbody > tr > th, .table-bordered > tbody > tr > td {
            border: 1px solid #000;
        }

        .green {
            color: green;
        }

        .red {
            color: red;
        }

        @@media screen and (max-width:768px) {
            .el-message, .el-notification, .el-message-box {
                min-width: 90%;
                max-width: 90%;
            }

            .form-group, .control-label {
                margin-bottom: 0px;
            }

            h5 {
                margin-top: 5px;
                margin-bottom: 0px;
            }

            .frameW p {
                margin: 5px 0 0;
            }

            .barcodeFrame {
                height: 150px;
            }

            #isorder {
                margin-bottom: 10px;
            }
        }

        .form-group {
            margin-bottom: 8px;
        }

        #innerCarton {
            margin: 15px auto 10px;
            padding: 20px 0 10px;
            max-width: 400px
        }

        .textCenter {
            text-align: center;
        }

        .mozhu {
            font-size: 60px;
            line-height: 30px;
        }
        /*内箱条码样式*/
        #innerBarcode {
            width: 200px;
            height: 75px;
        }

        .red {
            color: #ff110c;
        }


        .flex-item > div {
            min-width: 220px;
        }
    </style>
}
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            @*菜单*@
            <h1>@ViewBag.Title</h1>
        </el-header>
        <el-main class="main">
            <el-col :span="10">
                <div class="flex-item">
                    <label>挪用库存</label>
                    <div>
                        <el-switch v-model="divert"
                                   name="isnuo"
                                   active-text="挪用"
                                   inactive-text="不挪用">
                        </el-switch>
                    </div>
                </div>

                <div class="flex-item">
                    <label>班组</label>
                    <div>
                        <group-select></group-select>
                    </div>
                </div>
                @*挪用订单部分*@
                <template v-if="divert">
                    <div class="flex-item">
                        <label>被挪用订单号</label>
                        <div>
                            <select-input id="nuoOrder" name="nuoOrder" v-model.trim="ordernum.nuo" @@select-val="changenuo" :disabled="false" :appendbody="false" :options="ordernum.options" :isfocus="true" size="small"></select-input>
                        </div>
                    </div>
                    <div class="flex-item">
                        <label>被挪用条码号</label>
                        <div>
                            <input autocomplete="off" autofocus="autofocus" id="nuoBarCode" name="nuoBarCode" v-model="nuoBarCode" onkeyup="this.value=this.value.toUpperCase().replace(/\s+/g,'')" type="text" class="form-control text-box single-line">
                            <div v-show="isnuonum" class="text-danger">{{checkmes}}</div>
                        </div>
                    </div>
                </template>
                @* 订单号 *@
                <div class="flex-item">
                    <label>订单号</label>
                    <div>
                        <select-input id="OrderNum" name="OrderNum" v-model.trim="ordernum.value" @@select-val="changeorder" :disabled="false" :appendbody="false" :options="ordernum.options" :isfocus="true" size="small"></select-input>
                    </div>
                </div>
                @* 条码框 *@
                <div class="flex-item">
                    <label>条码号</label>
                    <div>
                        <input autocomplete="off" autofocus="autofocus" v-model.trim="innerVal" v-on:keyup.enter.prevent.stop="getmozu" placeholder="请输入条码号" id="BarCodesNum" name="BarCodesNum" onkeyup="this.value=this.value.toUpperCase().replace(/\s+/g,'')" type="text" class="form-control text-box single-line">
                        <div>{{checkMozu[1]}}</div>
                    </div>
                </div>

                <div class="flex-item">
                    <label>是否有客户条码号</label>
                    <div>
                        <input id="IsRepertory" type="checkbox">
                    </div>
                </div>
                <div class="flex-item">
                    <label>是否打印</label>
                    <div>
                        <el-switch v-model="isPrint"
                                   active-text="不打印"
                                   inactive-text="打印">
                        </el-switch>
                    </div>
                </div>


                @* 客户条码 *@
                <div class="flex-item" id="isorder">
                    <label>客户条码号</label>
                    <div>
                        @Html.EditorFor(model => model.CustomerBarCodesNum, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                    </div>
                </div>

                @* 显示条码各工段通过情况 *@
                <div class="flex-item" v-show="commonalitylist!=''">
                    <label>各工段情况</label>
                    <div>
                        <table class="table table-bordered">
                            <tr>
                                <th>PQC</th>
                                <th>FQC</th>
                                <th>拼屏</th>
                                <th>老化</th>
                                <th>校正</th>
                                <th>包装</th>
                            </tr>
                            <tr v-for="item in commonalitylist">
                                <td><span v-bind:class="item.Accemble_Record==true?trueclass:falseclass"></span></td>
                                <td><span v-bind:class="item.FQC_Record==true?trueclass:falseclass"></span></td>
                                <td><span v-bind:class="item.MosaiScreen_Record==true?trueclass:falseclass"></span></td>
                                <td><span v-bind:class="item.Burn_in_Record==true?trueclass:falseclass"></span></td>
                                <td><span v-bind:class="item.Calibration_Record==true?trueclass:falseclass"></span></td>
                                <td><span v-bind:class="item.Appearance_Record==true?trueclass:falseclass"></span></td>
                            </tr>
                        </table>
                    </div>
                </div>


                <div class="flex-item">
                    <div>
                        <input id="subm" type="submit" value="开始外观包装" class="btn btn-default" v-bind:disabled="checknuo" />
                        <div class="btn btn-default" v-on:click="qingdan()">条码列表</div>
                    </div>
                </div>

                @* 打印功能 *@
                <div v-show="innerVal.length==15&&printShow">
                    <el-button type="primary" v-on:click.prevent.stop="innerPrint" :loading="loading" size="small">打印模组内箱条码</el-button>
                    <div>
                        选打印机：
                        <el-select v-model="printSelect" clearable placeholder="选择打印机" size="small" style="width:120px">
                            <el-option v-for="item in printOptions"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </div>
                    <div v-show="printSelect!='0'&&printSelect!=''">
                        打印浓度：
                        <el-slider :max="30"
                                   :min="-30"
                                   v-model="nongDu"></el-slider>
                    </div>
                    <div v-show="printSelect!='0'&&printSelect!=''">
                        打印数量：
                        <el-input-number v-model.trim="pageCount"
                                         size="small"
                                         :min="1"
                                         :max="5"
                                         style="width:120px;"
                                         clearable>
                        </el-input-number>
                    </div>
                </div>
                <a href="/Appearances/New_Index">返回</a>
            </el-col>
            <el-col :span="14">
                @* 条码完成情况列表 *@
                <div v-show="qingdanshow" class="col-md-8 " style="padding:0">
                    <div class="col-md-4 col-sm-4 frameW text-danger">
                        <p>未开始 {{NotDoList.length}} 个<span v-show="divert">（点击可输入）</span></p>
                        <div class="barcodeFrame" style="border-color:indianred">
                            <ul>
                                <li v-for="item in NotDoList"
                                    v-on:click="nuoClickBar(item)"
                                    v-bind:style="{cursor:divert?'pointer':''}">{{item}}</li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-4 frameW text-info">
                        <p>未完成 {{NeverFinish.length}} 个</p>
                        <div class="barcodeFrame" style="border-color:cornflowerblue">
                            <ul>
                                <li v-for="item in NeverFinish">{{item}}</li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-4 frameW text-success">
                        <p>已完成 {{FinishList.length}} 个</p>
                        <div class="barcodeFrame" style="border-color:forestgreen">
                            <ul>
                                <li v-for="item in FinishList">{{item}}</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </el-col>
        </el-main>
    </el-container>
</div>
@* 分部页放置处 *@
@section renderPage {
    @RenderPage("~/Views/Users/_groupSelect.cshtml")
    @RenderPage("~/Views/Shared/_SelectInput.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script src="~/Scripts/jquery-1.11.3.min.js"></script>
    <script src="~/Content/styleFile/moduleManagement/module.js"></script>
    <script>
        const app = {
            data: function () {
                return {
                    NotDoList: [],//未开始列表
                    NeverFinish: [],//未完成列表
                    FinishList: [],//完成列表
                    commonalitylist: [],//各工段通过情况数据
                    //绿色√的样式
                    trueclass: {
                        'glyphicon': true,
                        'glyphicon-ok': true,
                        'green': true
                    },
                    //红色×的样式
                    falseclass: {
                        'glyphicon': true,
                        'glyphicon-remove': true,
                        'red': true
                    },
                    divert: false,//挪用开关
                    isnuonum: false,//是否挪用
                    nuoBarCode: "",//挪用的条码
                    checkmes: "",//是否可挪用的显示消息
                    qingdanshow: false,//显示清单开关
                    checkMozu: ["", ""],//检查条码返回的信息
                    innerVal: "",//条码值
                    loading: false,//loading开关
                    printMozhu: "",//打印时条码对应的模组
                    //warntext: "",
                    printShow: false,//打印功能显示开关
                    pageCount: 1,//打印页数
                    printOptions: printIpAddress,//打印机下拉列表
                    printSelect: '',//选择的打印机值
                    nongDu: 30,//浓度，默认30
                    isPrint: false,
                    ordernum: {
                        nuo: '',
                        value: '',
                        options: []
                    },
                }
            },
            mixins: [setModuleManagement],
            computed: {
                //控制‘开始电检’按钮是否可按
                checknuo: function () {
                    if (this.checkMozu[0] != 'YES') {
                        return true;
                    } else if (this.divert == true) {
                        if (this.nuoBarCode.length != 0 && this.isnuonum == false) {
                            return false;
                        } else {
                            return true;
                        };
                    } else {
                        return false;
                    };
                }
            },
            created: function () {
            },
            mounted: function () {
                axios.post('/OrderMgms/GetOrderList').then(res => {
                    this.ordernum.options = res.data;
                });
                let localisprint = localStorage.getItem('isPrint');
                if (localisprint != null) {
                    if (localisprint == "true") {
                        this.isPrint = true;
                    } else {
                        this.isPrint = false;
                    };
                };
                //获取浏览器本地存储的打印机ip
                let printIP = localStorage.getItem('printIP');
                if (printIP != null) {
                    this.printSelect = printIP;
                };
                //获取浏览器本地存储的订单号
                let localOrder = localStorage.getItem('Order');
                if (localOrder != null) {
                    this.ordernum.value = localOrder;
                };
                //获取浏览器本地存储的打印页数
                let localpage = localStorage.getItem('printPageCount');
                if (localpage != null) {
                    this.pageCount = localpage;
                };
                //获取浏览器本地存储的打印浓度
                let localnongdu = localStorage.getItem('printNongDuCount');
                if (localnongdu != null) {
                    this.nongDu = +localnongdu;
                };
                //获取浏览器本地存储的挪用状态
                let localDivert = localStorage.getItem('Divert');
                if (localDivert != null) {
                    let localNuo = localDivert == 'true' ? true : false;
                    this.divert = localNuo;
                    this.isnuo(localNuo);
                };
                //获取浏览器本地存储的挪用订单号
                let localNuoOrder = localStorage.getItem('nuoOrder');
                if (localNuoOrder != null) {
                    this.ordernum.nuo = localNuoOrder;
                };

                //获取浏览器本地存储的是否库存信息
                let localRepertory = localStorage.getItem('isRepertory');
                if (localRepertory == "false" || localRepertory == null) {
                    $("#isorder").hide();
                    $("#CustomerBarCodesNum").removeAttr("name");
                } else if (localRepertory == "true") {
                    $("#IsRepertory").prop('checked', true);
                };
                //设置 若是否库存信息改变，设置表单内值的属性
                $("#IsRepertory").change(function () {
                    localStorage.setItem('isRepertory', $(this).is(':checked'));
                    if ($(this).is(':checked') == true) {
                        $("#isorder").show();
                        $("#CustomerBarCodesNum").attr("name", "CustomerBarCodesNum");
                        $("#CustomerBarCodesNum").select();
                    } else {
                        $("#isorder").hide();
                        $("#CustomerBarCodesNum").removeAttr("name");
                        $("#BarCodesNum").select();
                    }
                });
                $("#BarCodesNum").select();

                //设置挪用条码框回车后的焦点跳转
                $("#nuoBarCode").keypress(function (e) {
                    if (e.keyCode == 13) {
                        e.preventDefault();
                        $("#BarCodesNum").select();
                        //if ($("#IsRepertory").is(":checked") == true) {
                        //    $("#CustomerBarCodesNum").focus(); // 设置焦点
                        //};
                    };
                });

                //取消客户号码框回车功能
                $("#CustomerBarCodesNum").keypress(function (e) {
                    if (e.which == 13) {
                        return false;
                    }
                });

                //取消条码框回车功能
                $("#BarCodesNum").keypress(function (e) {
                    if (e.which == 13) {
                        return false;
                    }
                });

                $("#BarCodesNum").select();
            },
            methods: {
                //获取订单的条码状态清单
                getInfo(oNum) {
                    axios.post('/Appearances/AppearanceChecklist', { orderNum: oNum }).then(res => {
                        //console.log(res.data)
                        let allJson = res.data;
                        for (let i in allJson) {
                            let iJson = JSON.parse(allJson[i]);
                            if (i == "NotDoList") {
                                this.NotDoList = [];
                                for (let j in iJson) {
                                    this.NotDoList.push(iJson[j]);
                                }
                            };
                            if (i == "NeverFinish") {
                                this.NeverFinish = [];
                                for (let j in iJson) {
                                    this.NeverFinish.push(iJson[j]);
                                }
                            };
                            if (i == "FinishList") {
                                this.FinishList = [];
                                for (let j in iJson) {
                                    this.FinishList.push(iJson[j]);
                                }
                            };
                        };
                    }).catch(err => {
                        alert("获取订单信息失败")
                    });
                },
                //当挪用开关切换时，控制表单挪用条码属性
                isnuo: (nuoVal) => {
                    if (nuoVal == true) {
                        $("#nuoBarCode").attr("name", "nuoBarCode")
                    } else {
                        $("#nuoBarCode").removeAttr("name")
                    };
                },
                //检查条码是否合格
                postX() {
                    this.commonalitylist = [];
                    this.checkMozu = ["", ""];
                    axios.post('/Appearances/DisplayBarcode', { barcode: this.innerVal }).then(res => {
                        let thisdata = res.data.split(",");
                        this.checkMozu = thisdata;
                    }).catch(err => {
                        console.log("连接失败！")
                    });
                    axios.post('/Commonality/GetBarcode_Each_Section_Prompt', { barcode: this.innerVal }).then(res => {
                        this.commonalitylist = [];
                        this.commonalitylist.push(res.data);
                        if (res.data.Appearance_Record == true) {
                            this.printShow = true;
                        };
                    }).catch(err => {
                        //alert("连接失败！")
                    });
                },
                //检查挪用条码是否可以挪用
                checkorderbar(v) {
                    axios.post('/Commonality/CheckBarCodeNumIsRepertory', {
                        ordernum: this.ordernum.nuo,
                        barcodenum: v,
                    }).then(res => {
                        if (res.data == true) {
                            this.checkmes = "";
                            this.isnuonum = false;
                        } else {
                            this.checkmes = res.data;
                            this.isnuonum = true;
                        };
                    }).catch(err => {
                        console.log("检查失败")
                    });
                },
                //显示条码列表
                qingdan() {
                    this.getInfo(this.ordernum.value);
                    this.qingdanshow = true;
                },
                //获取输入的条码对应的模组号
                getmozu: function () {
                    //e.preventDefault();
                    let inner = this.innerVal;
                    if (inner != "" && inner.length != 0) {
                        if ($("#IsRepertory").is(":checked") == true) {
                            $("#CustomerBarCodesNum").focus(); // 设置焦点
                        };
                        this.postX();
                        axios.post('/Packagings/GetModulbarCode',
                            { barcode: inner }
                        ).then(res => {
                            //console.log(res)
                            if (res.data.module != "") {
                                this.printMozhu = res.data.module;
                                //this.mozuwarntext = ""
                            } else {
                                this.printMozhu = "";
                                //alert('此条码箱体号为空');
                            };
                        }).catch(err => {
                            console.warn("获取模组号失败")
                        });
                    } else {
                        this.commonalitylist = [];
                    };
                },
                //打印条码方法
                innerPrint() {
                    if (this.isPrint) {
                        return
                    };
                    let pageNum = this.pageCount;
                    let nongDu = this.nongDu;
                    if (pageNum < 0 || pageNum > 5 || pageNum == undefined) {
                        alert("打印的数量要在0~5之间！");
                        return;
                    };
                    localStorage.setItem('printPageCount', pageNum);
                    localStorage.setItem('printNongDuCount', nongDu);
                    this.loading = true;
                    axios.post('/Appearances/InsideBoxLablePrint', {
                        barcode: this.innerVal,
                        modulenum: this.printMozhu,
                        pagecount: pageNum,
                        concentration: nongDu,
                        ip: this.printSelect,//ip地址
                        port: 9101,//端口
                    }).then(res => {
                        console.log(res)
                        if (res.data == '打印成功！') {
                            this.$message({
                                showClose: true,
                                message: data.data,
                                type: 'success'
                            });
                            $("#BarCodesNum").select();
                        } else {
                            let r = confirm(`${res.data}`);
                            $("#BarCodesNum").select();
                        };
                        this.loading = false;
                        $("#BarCodesNum").select();
                    }).catch(err => {
                        console.warn("获取选择列表失败")
                        this.loading = false;
                    });
                },
                nuoClickBar(v) {
                    if (this.divert == true) {
                        this.innerVal = v;
                        this.$nextTick(function () {
                            $("#nuoBarCode").select();
                        });
                    };
                },
                changeorder(val) {
                    if (val != '' && val != null) {
                        localStorage.setItem('Order', val);
                        this.NotDoList = [];
                        this.NeverFinish = [];
                        this.FinishList = [];
                        this.qingdanshow = false;
                        this.commonalitylist = [];
                        this.checkMozu = ["", ""];
                        this.printShow = false;
                        $("#BarCodesNum").select();
                    }
                },
                changenuo(val) {
                    if (val != '' && val != null) {
                        localStorage.setItem('nuoOrder', val);
                        if (this.nuoBarCode.length != 0) {
                            this.checkorderbar(this.nuoBarCode);
                        } else {
                            this.isnuonum = false;
                        };
                        $("#nuoBarCode").select();
                    }
                },
            },
            watch: {
                //监听挪用开关
                divert(v) {//挪用
                    localStorage.setItem('Divert', v);
                    this.isnuo(v);
                    if (v == true) {
                        this.qingdan();
                        this.$nextTick(function () {
                            $("#nuoBarCode").select();
                        });
                    } else {
                        this.innerVal = "";
                        $("#BarCodesNum").select();
                    };
                },
                //监听挪用条码
                nuoBarCode(v) {
                    if (v.length != 0) {
                        this.checkorderbar(v);
                    } else {
                        this.isnuonum = false;
                    }
                },
                //监听条码
                innerVal(val) {
                    this.printShow = false;
                },
                //监听选择的打印机
                printSelect: (v) => {
                    localStorage.setItem('printIP', v);
                },
                //监听是否打印
                isPrint(v) {
                    localStorage.setItem('isPrint', v);
                },
            },
        };
    </script>
}