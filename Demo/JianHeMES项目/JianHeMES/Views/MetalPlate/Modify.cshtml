@{
    ViewBag.Title = "修改录入信息";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}
@* css放置处 *@
@section cssStyle {
    <link rel="stylesheet/less" type="text/css" href="~/Content/tableStyle/StockAmount.less" />
    <style>
    </style>
}
<el-container id="app" v-cloak>
    <el-header class="text-center">
        <mp-header :active="active"></mp-header>
    </el-header>
    <el-main>
        <div class="text-center">
            <label>订单号</label>
            <el-select v-model="orderNum"
                       clearable
                       allow-create filterable
                       placeholder="请选择订单号" id="selectBox" size="small">
                <el-option v-for="item in orderNumOptions"
                           :key="item.value"
                           :value="item.value">
                </el-option>
            </el-select>
        </div>        
        <el-table v-bind:data="tableData"
                  style="width: 1072px;font-size: 13px;margin:auto;margin-top:10px" border max-height="200">
            <el-table-column prop=""
                             label="基本信息修改"
                             width="">

                <el-table-column prop="OrderNum"
                                 label="订单号"
                                 width="115">
                </el-table-column>
                <el-table-column prop="Quantity"
                                 label="数量"
                                 width="90">
                    <template scope="scope">
                        <el-input v-model="scope.row.Quantity" placeholder="数量" type="text" size="mini" v-bind:disabled="scope.row.Remark=='大于'"></el-input>
                    </template>
                </el-table-column>
                <el-table-column prop="ProductionType"
                                 label="生产类型"
                                 width="90">
                </el-table-column>

                <el-table-column prop=""
                                 label="生产排期起始时间"
                                 width="215">
                    <template scope="scope">
                        <el-date-picker v-model="scope.row.ProductScheduleStartTime"
                                        type="datetime"
                                        placeholder="生产排期起始时间"
                                        style="width:195px" size="mini" v-bind:disabled="scope.row.Remark=='大于'">
                        </el-date-picker>
                    </template>
                </el-table-column>
                <el-table-column prop=""
                                 label="部门交货时间"
                                 width="215">
                    <template scope="scope">
                        <el-date-picker v-model="scope.row.DepartmentalDeliveryTime"
                                        type="datetime"
                                        placeholder="部门交货时间"
                                        style="width:195px" size="mini" v-bind:disabled="scope.row.Remark=='大于'">
                        </el-date-picker>
                    </template>
                </el-table-column>
                <el-table-column prop=""
                                 label="生产开始时间"
                                 width="215">
                    <template scope="scope">
                        <el-date-picker v-model="scope.row.ProductionStartTime"
                                        type="datetime"
                                        placeholder="选择生产开始时间"
                                        style="width:195px" v-bind:disabled="scope.row.Remark=='大于'" size="mini">
                        </el-date-picker>
                    </template>
                </el-table-column>
                <el-table-column prop=""
                                 label="操作">
                    <template scope="scope">
                        <div style="display:inline-flex">
                            <el-button class="btn" v-on:click="saveBasicInfo(scope.row)" size="mini" type="primary" v-show="modifyBasic" v-bind:disabled="scope.row.Remark=='大于'">保存</el-button>
                            <el-button class="btn" v-on:click="delBasicInfo(scope.row)" size="mini" type="danger" v-show="delproduc" v-bind:disabled="scope.row.Remark=='大于'">删除</el-button>
                        </div>
                    </template>
                </el-table-column>
            </el-table-column>
        </el-table>
        <br />
        <el-table v-bind:data="productionData"
                  style="width: 1072px;font-size: 13px;margin:auto" border max-height="450">
            <el-table-column prop=""
                             label="生产信息修改">
                <el-table-column prop="OrderNum"
                                 label="订单号"
                                 width="150">
                </el-table-column>
                <el-table-column prop="ProductionType"
                                 label="生产类型"
                                 width="115">
                </el-table-column>
                <el-table-column prop="Section"
                                 label="工段"
                                 width="205">
                </el-table-column>
                <el-table-column prop="NormalQuantity"
                                 label="正常数"
                                 width="95">
                    <template scope="scope">
                        <el-input v-model="scope.row.NormalQuantity" placeholder="" type="text" size="mini" v-bind:disabled="scope.row.Remark=='大于'"></el-input>
                    </template>
                </el-table-column>
                <el-table-column prop="AbnormaQuantity"
                                 label="异常数"
                                 width="95">
                    <template scope="scope">
                        <el-input v-model="scope.row.AbnormaQuantity" placeholder="" type="text" size="mini" v-bind:disabled="scope.row.Remark=='大于'"></el-input>
                    </template>
                </el-table-column>
                <el-table-column prop=""
                                 label="生产开始时间/入库完成时间"
                                 width="230">
                    <template scope="scope">
                        <el-date-picker v-model="scope.row.InputTime"
                                        type="datetime"
                                        placeholder="选择生产开始时间"
                                        style="width:195px" v-bind:disabled="scope.row.Section!='图纸编程'&&scope.row.Section!='入库'||scope.row.Remark=='大于'" size="mini">
                        </el-date-picker>
                    </template>
                </el-table-column>
                <el-table-column prop=""
                                 label="操作" >
                    <template scope="scope">
                        <div style="display:inline-flex">
                            <el-button class="btn" v-on:click="saveProduction(scope.row)" size="mini" type="primary" v-show="modifyproduc" v-bind:disabled="scope.row.Remark=='大于'">保存</el-button>
                            <el-button class="btn" v-on:click="delProduction(scope.row)" size="mini" type="danger" v-show="delproduc" v-bind:disabled="scope.row.Remark=='大于'">删除</el-button>
                        </div>
                    </template>
                </el-table-column>
            </el-table-column>
        </el-table>

    </el-main>
</el-container>
@* 分部页放置处 *@
@section renderPage {
    @RenderPage("~/Views/MetalPlate/_MP_Header.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script>
        const app = {
            data: function () {
                return {
                    active: '修改录入信息',
                    orderNum: '',
                    orderNumOptions: [],
                    tableData: [],
                    productionData: [],
                    modifyBasic: false,
                    delbasic: false,
                    modifyproduc: false,
                    delproduc: false,
                }
            },
            mounted() {
                axios.post('/MetalPlate/GetOrderNumList').then(res => {
                    this.orderNumOptions = res.data;
                    console.log(res.data)
                }).catch(err => {
                    console.warn("获取选择列表失败")
                });
                if (this.islimit('钣金基本信息修改')) {
                    this.modifyBasic = true
                };
                if (this.islimit('钣金基本信息删除')) {
                    this.delbasic = true
                };
                if (this.islimit( '钣金生产信息修改')) {
                    this.modifyproduc = true
                };
                if (this.islimit('钣金生产信息删除')) {
                    this.delproduc = true
                };
            },
            methods: {
                getData() {
                    axios.post('/MetalPlate/getBasicInfo', {
                        ordernum: this.orderNum,
                    }).then(res => {
                        console.log(res.data)
                        this.tableData = res.data
                    })
                },
                getProduction() {
                    axios.post('/MetalPlate/getProduction', {
                        ordernum: this.orderNum,
                    }).then(res => {
                        console.log(res.data)
                        this.productionData = res.data
                    })
                },
                saveBasicInfo(row) {
                    let obj = {
                        Id: row.Id, OrderNum: row.OrderNum, Quantity: row.Quantity, ProductionType: row.ProductionType, ProductScheduleStartTime: row.ProductScheduleStartTime,
                        DepartmentalDeliveryTime: row.DepartmentalDeliveryTime, ProductionStartTime: row.ProductionStartTime, CompletionState: row.CompletionState, Remark: null,
                        PracticalDeliveryTime: row.PracticalDeliveryTime, AdjustDeliveryTime: row.AdjustDeliveryTime, WarehouseTime: row.WarehouseTime
                    }
                    axios.post('/MetalPlate/MetalPlateBasicInfo_modify', {
                        newList: obj,
                    }).then(res => {
                        if (res.data == "修改成功！") {
                            this.$message({
                                message: "修改成功!",
                                type: "success"
                            });
                            this.getData()
                        } else {
                            this.$message({
                                message: res.data,
                                type: "warning"
                            })
                        }
                    }).catch(err => {
                        console.log("请求失败")
                    })
                },
                saveProduction(row) {
                    console.log(row)
                    let obj = {
                        Id: row.Id, OrderNum: row.OrderNum, Section: row.Section, ProductionType: row.ProductionType, NormalQuantity: row.NormalQuantity, AbnormaQuantity: row.AbnormaQuantity,
                        InputTime: row.InputTime, InputPerson: row.InputPerson, Department: row.Department, Group: row.Group, Remark: null
                    }
                    axios.post('/MetalPlate/MetalPlateProduction_modify', {
                        newList: obj,
                    }).then(res => {
                        if (res.data == "修改成功！") {
                            this.$message({
                                message: "修改成功!",
                                type: "success"
                            });
                            this.getProduction()
                        } else if (res.data == "修改失败,录入数量大于订单总数！") {
                            this.$message({
                                message: res.data,
                                type: "warning"
                            })
                            this.getProduction()
                        }
                        else {
                            this.$message({
                                message: res.data,
                                type: "warning"
                            })
                        }
                    }).catch(err => {
                        console.log("请求失败")
                    })
                },
                delBasicInfo(row) {
                    console.log(row)
                    axios.post('/MetalPlate/delteBasicInfo', {
                        record: row
                    }).then(res => {
                        console.log(res.data)
                        if (res.data == "删除成功！") {
                            this.$message({
                                message: "删除成功!",
                                type: "success"
                            });
                            this.getData()
                        } else {
                            this.$message({
                                message: res.data,
                                type: "warning"
                            })
                        }
                    }).catch(err => {
                        console.log("请求失败")
                    })

                },
                delProduction(row) {
                    console.log(row)
                    axios.post('/MetalPlate/delteProduction', {
                        record: row
                    }).then(res => {
                        console.log(res.data)
                        if (res.data == "删除成功！") {
                            this.$message({
                                message: "删除成功!",
                                type: "success"
                            });
                            this.getProduction()
                        } else {
                            this.$message({
                                message: res.data,
                                type: "warning"
                            })
                        }
                    }).catch(err => {
                        console.log("请求失败")
                    })
                }
            },
            watch: {
                orderNum() {
                    if (this.ordernum != '') {
                        this.getProduction()
                        this.getData()
                    } else {
                        this.productionData = this.tableData = []
                    }
                }
            }
        };
    </script>
}