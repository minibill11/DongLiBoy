@model JianHeMES.Models.IQCReport
@{
    ViewBag.Title = "新建IQC报告";
}
@*<script src="~/Scripts/jquery-1.11.3.js"></script>*@
<style>
   
    .testDeman td input{
        padding:2px;
        width:100%;
    }
    .forSize input, .sr input, .sg input, .sb input{
        display:inline-block;
        float:left;
        padding:2px;
        width:55.8px;
    }
    tr {
        height: 22px;
        font-size: 14px;
        text-align: center;
    }
    input {
        max-width: none;
    }
    td {
        border: 1px solid black;
    }
    #C3, #C4, #C5, #C6, #C7, #C8,
    #D3, #D4, #D5, #D6, #D7, #D8,
    #E3, #E4, #E5, #E6, #E7, #E8,
    #F3, #F4, #F5, #F6, #F7, #F8 {
        width: 65%;
        height: 21px;
        float: right;
    }
    .Dthree input {
        width: 33.3%;
        float: left;
    }
    label {
        font-weight: normal;
    }

    #RoHS_REACH, #SamplingPlan, #NGD, #NGHandle,#EquipmentNum,#SRJson,#SGJson,#SBJson,#S11,#S21,#S31 {
        display: none;
    }
    textarea{
        border:none;
        width:100%;
        max-width:initial;
        resize: none;
    }
    textarea.form-control{
        line-height:14px;
        font-size:14px;
        padding:3px 6px;
    }
    /*.sr input,.sg input,.sb input,.s1 input,.s2 input,.s3 input {
        width: 10%;
        float: left;
    }*/
    #EquipmentNumShow{
        text-align:left;
        padding:0;
        line-height:13px;
        font-size:13px;
        color:#555;
    }
    #C2,#D2,#E2,#F2,#P0,#R0,#AM0,#P1,#P2,#P3,#AM1,#AM2,#AM3,#AM4,#E1,#F1,input[class*=sr],input[class*=sg],input[class*=sb],#S1,#S2,#S3{
        padding:0 5px;
    }
    #C1,#D1,#ModelNumber,#R1,#R2,#R3,#BatchNum{
        padding:0;
        font-size:13px;
    }
    #SR,#SG,#SB{
        text-align:right;
    }
</style>

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <table id="tableApp" style="margin:0 auto;border-collapse:collapse;">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <colgroup>
                <col width="100 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="160 ">
            </colgroup>
            <thead>
                <tr>
                    <td colspan="8" style="border-left: none;border-right: none;border-bottom:none"><b style="font-size:28px">进料检验报告</b><b>--通用</b></td>
                </tr>
                <tr>
                    <td colspan="1" style="border:none;">物料编号：</td>
                    <td colspan="3" style="border:none;">
                        @Html.TextAreaFor(model => model.Material_SN,  new { @class = "form-control", placeholder = "请输入物料编号"  })
                        @Html.ValidationMessageFor(model => model.Material_SN, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" style="border:none;text-align:right">订单号：</td>
                    <td colspan="2" style="border:none;text-align:right ">
                        @Html.TextAreaFor(model => model.OrderNumber, new { @class = "form-control", placeholder = "请输入" })
                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="height:60px">
                    <td colspan="4" style="border:none" class="form-group">
                        <span style="float: left">
                            物料需要符合RoHS、REACH要求：
                            <label><input type="checkbox" name="RoHS_REACHcheck" value="是">是&nbsp;</label>
                            <label><input type="checkbox" name="RoHS_REACHcheck" value="否">否</label>
                        </span>
                        @Html.EditorFor(model => model.RoHS_REACH)
                        @Html.ValidationMessageFor(model => model.RoHS_REACH, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" style="border:none;text-align:right ">测试设备编号：</td>
                    <td colspan="2" style="border:none;">
                        <div id="EquipmentNumShow">请选择物料</div>
                        @Html.EditorFor(model => model.EquipmentNum, new { htmlAttributes = new { @class = "form-control", placeholder = "请选择物料", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.EquipmentNum, "", new { @class = "text-danger" })
                    </td>

                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>供应商</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.Provider, new { htmlAttributes = new { @class = "form-control", placeholder = "请输入" } })
                        @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
                    </td>
                    <td>物料名称</td>
                    <td colspan="2" class="form-group">
                        @*@Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.MaterialName,
           ViewBag.Material as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.MaterialName, "", new { @class = "text-danger" })
                    </td>
                    <td>型号</td>
                    <td colspan="1" class="form-group">
                        @Html.TextAreaFor(model => model.ModelNumber,  new { @class = "form-control", placeholder = "请输入"  })
                        @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>规格</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.Specification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
                    </td>
                    <td>来料数量</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.MaterialQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialQuantity, "", new { @class = "text-danger" })
                    </td>
                    <td>来料日期</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.IncomingDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomingDate, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>请购单号</td>
                    <td colspan="2" class="form-group">
                        @Html.TextAreaFor(model => model.ApplyPurchaseOrderNum,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.ApplyPurchaseOrderNum, "", new { @class = "text-danger" })
                    </td>
                    <td>批号</td>
                    <td colspan="2" class="form-group">
                        @Html.TextAreaFor(model => model.BatchNum,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.BatchNum, "", new { @class = "text-danger" })
                    </td>
                    <td>检验日期</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="height: 40px">
                    <td>抽样方案</td>
                    <td colspan="4" class="form-group">
                        <label><input type="checkbox" name="SamplingPlancheck" value="全检">全检 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="加严">加严 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="正常">正常 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="放宽">放宽</label>
                        @Html.EditorFor(model => model.SamplingPlan, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SamplingPlan, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2">承认书或图纸号/版本</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.MaterialVersion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialVersion, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">检验内容</td>
                    <td rowspan="2">检验水平</td>
                    <td rowspan="2">抽样数量</td>
                    <td colspan="3">判定标准</td>
                    <td colspan="2" rowspan="2">检验判定</td>
                </tr>
                <tr>
                    <td>严重缺陷<br>AQL：0</td>
                    <td>一般缺陷<br>AQL：0.4</td>
                    <td>轻微缺陷<br>AQL：0.65</td>
                </tr>
                <tr>
                    <td rowspan="2">标识</td>
                    <td rowspan="2" class="form-group">
                        @*<select class="form-control"  id="C1" name="C1">
                            <option value="一般Ⅲ级">一般Ⅲ级</option>
                            <option value="一般Ⅱ级">一般Ⅱ级</option>
                        </select>*@
                        @Html.DropDownListFor(model => model.C1,
           ViewBag.Level as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.C1, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.C1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.C2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.C9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">包装、外观</td>
                    <td rowspan="2" class="form-group">
                        @*<select class="form-control" id="D1" name="D1">
                            <option value="一般Ⅲ级">一般Ⅲ级</option>
                            <option value="一般Ⅱ级">一般Ⅱ级</option>
                        </select>*@
                        @Html.DropDownListFor(model => model.D1,
           ViewBag.Level as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.D1, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.D1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.D2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.D9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">尺寸</td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E8, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.E8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">性能/参数</td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>不良项目<br>(检测项目)</td>
                    <td>规格要求</td>
                    <td colspan="6">检验结果描述</td>
                </tr>
                <tr class="s0show sizes">
                    <td><input class="form-control sizeinput" type="text" value="尺寸"></td>
                    <td><input class="form-control sizeinput" style="width:100%;padding:0;" type="text"></td>
                    <td colspan="6" class="s1 forSize">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text">
                        <input class="form-control sizeinput" type="text"></td>
                </tr>
                <tr class="s0show">
                    <td colspan="8">
                        <input onclick="appenTr(this)" type="button" value="增加一行" />
                        <input onclick="deleteTr(this)" type="button" value="删除末行" style="display:none;" />
                    </td>
                </tr>

                <tr class="testDeman testSdantar">
                    <td><input class="form-control testSdantarInput" type="text" value="供应商标准值"></td>
                    <td class="forSize"><input class="form-control testSdantarInput" type="text"></td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control testSdantarInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control testSdantarInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control testSdantarInput" type="text">
                    </td>
                </tr>
                <tr>
                    <td colspan="8">
                        <input onclick="appenTr(this)" type="button" value="增加一行" />
                        <input onclick="deleteTr(this)" type="button" value="删除末行" style="display:none;" />
                    </td>
                </tr>
                <tr class="s0show testDeman ourStandart">
                    <td><input class="form-control ourStandartInput" type="text" value="我司测试要求"></td>
                    <td class="forSize"><input class="form-control ourStandartInput" type="text"></td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control ourStandartInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control ourStandartInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control ourStandartInput" type="text">
                    </td>
                </tr>
                <tr class="s0show">
                    <td colspan="8">
                        <input onclick="appenTr(this)" type="button" value="增加一行" />
                        <input onclick="deleteTr(this)" type="button" value="删除末行" style="display:none;" />
                    </td>
                </tr>
               
                <tr>
                    <td></td>
                    <td></td>
                    <td colspan="6" class="form-group">
                        @Html.EditorFor(model => model.AM, new { htmlAttributes = new { @class = "form-control" ,@style= "text-align:center" } })
                        @Html.ValidationMessageFor(model => model.AM, "", new { @class = "text-danger" })
                    </td>
                </tr>

                <tr class="testDeman actualValues">
                    <td><input class="form-control actualValuesInput" type="text" value="我司实测值"></td>
                    <td class="forSize"><input class="form-control actualValuesInput" type="text"></td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control actualValuesInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control actualValuesInput" type="text">
                    </td>
                    <td colspan="2" class="s1 forSize">
                        <input class="form-control actualValuesInput" type="text">
                    </td>
                </tr>
                <tr>
                    <td colspan="8">
                        <input onclick="appenTr(this)" type="button" value="增加一行" />
                        <input onclick="deleteTr(this)" type="button" value="删除末行" style="display:none;" />
                    </td>
                </tr>
               
                <tr class="sRshow">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SR, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SR, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sr" type="text">
                        @Html.TextAreaFor(model => model.SRJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SRJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td></td>
                    <td></td>
                    <td colspan="6"></td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SG, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SG, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sg" type="text">
                        @Html.TextAreaFor(model => model.SGJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SGJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td></td>
                    <td></td>
                    <td colspan="6"></td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SB, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sb" type="text">
                        @Html.TextAreaFor(model => model.SBJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SBJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                
                <tr>
                    <td rowspan="3">总不良数</td>
                    <td>严重缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG1, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="5" rowspan="3" class="form-group">
                        最终判定：
                        <label>&nbsp;<input type="checkbox" name="NGDcheck" value="允收">允收（AC） </label>
                        <label>&nbsp;<input type="checkbox" name="NGDcheck" value="拒收">拒收（Re）</label>
                        @Html.EditorFor(model => model.NGD)
                        @Html.ValidationMessageFor(model => model.NGD, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>一般缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG2, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>轻微缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG3, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td colspan="8" class="form-group">
                        不合格批处理：
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="退货">退货； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="挑选">挑选； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="特采">特采； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="维修">维修； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="其他">其他； </label>
                        @Html.EditorFor(model => model.NGHandle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NGHandle, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="text-align: left;height: 40px">
                    <td style="text-align:center;border-right: none">备注：</td>
                    <td colspan="7" style="border-left:none" class="form-group">
                        @Html.TextAreaFor(model => model.ReportRemark,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.ReportRemark, "", new { @class = "text-danger" })
                        @*<textarea style="" rows="3" ></textarea>*@
                        <span style="display:none;">
                            @Html.TextAreaFor(model => model.S1, new { @class = "form-control testPost" })
                            @Html.ValidationMessageFor(model => model.S1, "", new { @class = "text-danger" })
                        </span>
                    </td>
                </tr>
                <tr style="text-align: left;">
                    <td style="text-align:center;border-right: none">批准：</td>
                    <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                        @Html.EditorFor(model => model.Approve, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Approve, "", new { @class = "text-danger" })
                    </td>
                    <td style="text-align:center;border-left: none;border-right: none">审核：</td>
                    <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                        @Html.EditorFor(model => model.Assessor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Assessor, "", new { @class = "text-danger" })
                    </td>
                    <td style="text-align:center;border-left: none;border-right: none">检验：</td>
                    <td style="border-left: none" class="form-group">
                        @Html.EditorFor(model => model.Inspector, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </tbody>
            <tfoot>
                <tr>
                    <td style="border:none">
                        <div class="form-group">
                            <input type="submit" value="保存IQC报告" style="display:none;" class="btn btn-default" />
                            <input type="button" value="保存IQC报告" class="btn btn-default" onclick="boferSubmit(this)" />
                        </div>
                    </td>
                    <td colspan="7" style="text-align: right;border: none">表单编号：QD-007-B</td>
                </tr>
                <tr>
                    <td colspan="8" style="border: none;text-align:left">
                        @Html.ActionLink("返回", "Index")
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
}


<script>
    var trs = 0;
    window.onload = function () {
        test();
    }
    function appenTr(item) {
        var thisTr = $(item).parent().parent();
        var thisTrPrev = thisTr.prev();
        var thisTrPrevs = thisTrPrev.clone()
        
        if (thisTrPrevs.length >= 1) {    //克隆行存在时显示删除按钮
            $(item).next().show();
            trs += thisTrPrevs.length;
        }
        $(thisTrPrevs).children().children().val("")
        thisTrPrevs.insertAfter($(thisTrPrev))
        test();
        //console.log(thisTr)
    }   //增加一行方法
    function deleteTr(item) {
        //console.log(trs)
        if (trs >= 1) {
            var thisTr = $(item).parent().parent();
            var thisTrPrev = thisTr.prev();
            thisTrPrev.remove();
            trs--
        } else {
            $(item).hide()
        }
    }   //删除末行方法
    $("#E1,#F1").val("特殊S-4");
    $("#S0").val("尺寸");
    $("#R0").val("我司测试要求");
    $("#P0").val("供应商标准值");
    $("#AM0").val("我司实测值");
    $("#P1").val("亮度 IV");
    $("#P2").val("波长 WD");
    $("#P3").val("电压 VF");
    $("#AM1").val("亮度 IV");
    $("#AM2").val("倍率");
    $("#AM3").val("波长 WD");
    $("#AM4").val("电压 VF");
    $("#SR").val("尺寸    R：");
    $("#SG").val("G：");
    $("#SB").val("B：");
    

    var s1 = $(".s1 input");
    var s2 = $(".s2 input");
    var s3 = $(".s3 input");
    var s1json = new Array(s1.length);
    var s2json = new Array(s2.length);
    var s3json = new Array(s3.length);
    s1.keyup(function () {
        $(this).val($(this).val().replace(/''/g, ''))
        s1.each(function (i) {
                    s1json[i] = "\"" + $(this).val() + "\"";
        })
        $("#S11").val("{\"S1\"" + ":" + "[" + s1json + "]}");
        //console.log($("#S11").val())
        //console.log(JSON.parse($("#S11").val()))
    });
    s2.keyup(function () {
        $(this).val($(this).val().replace(/[^\d.]/g, ''))
        s2.each(function (i) {
            s2json[i] = "\"" + $(this).val() + "\"";
        })
        $("#S21").val("{\"S2\"" + ":" + "[" + s2json + "]}");
        //console.log($("#S21").val())
    });
    s3.keyup(function () {
        $(this).val($(this).val().replace(/[^\d.]/g, ''))
        s3.each(function (i) {
            s3json[i] = "\"" + $(this).val() + "\"";
        })
        $("#S31").val("{\"S3\"" + ":" + "[" + s3json + "]}");
        //console.log($("#S31").val())
    });


    var sR = $("input.sr,.sr input");
    var sG = $("input.sg,.sg input");
    var sB = $("input.sb,.sb input");
    var srjson = new Array(sR.length);
    var sgjson = new Array(sG.length);
    var sbjson = new Array(sB.length);
    sR.keyup(function () {
        //$(this).val($(this).val().replace(/[^\d.]/g, ''))
        sR.each(function (i) {
            if (i % 11 == 0) {
                srjson[i] = "[\"" + $(this).val() + "\"";
            } else {
                if ((i + 1) % 11 == 0) {
                    srjson[i] = "\"" + $(this).val() + "\"]";
                } else {
                    srjson[i] = "\"" + $(this).val() + "\"";
                }
            }
        })
        //$("#SRJson").val("{\"" + $("#SR").val() + "\"" + ":" + "[" + srjson + "]}");
        $("#SRJson").val("{\"SR\"" + ":" + "[" + srjson + "]}");
        //console.log($("#SRJson").val())
    });
    sG.keyup(function () {
        //$(this).val($(this).val().replace(/[^\d.]/g, ''))
        sG.each(function (i) {
            if (i % 11 == 0) {
                sgjson[i] = "[\"" + $(this).val() + "\"";
            } else {
                if ((i + 1) % 11 == 0) {
                    sgjson[i] = "\"" + $(this).val() + "\"]";
                } else {
                    sgjson[i] = "\"" + $(this).val() + "\"";
                }
            }
        })
        $("#SGJson").val("{\"SG\"" + ":" + "[" + sgjson + "]}");
        //console.log($("#SGJson").val())
    });
    sB.keyup(function () {
        //$(this).val($(this).val().replace(/[^\d.]/g, ''))
        sB.each(function (i) {
            if (i % 11 == 0) {
                sbjson[i] = "[\"" + $(this).val() + "\"";
            } else {
                if ((i + 1) % 11 == 0) {
                    sbjson[i] = "\"" + $(this).val() + "\"]";
                } else {
                    sbjson[i] = "\"" + $(this).val() + "\"";
                }
            }
        })
        $("#SBJson").val("{\"SB\"" + ":" + "[" + sbjson + "]}");
        //console.log($("#SBJson").val())
    });

    $("#MaterialName").change(function () {
        if ($("#MaterialName").val() == "三合一贴片灯" || $("#MaterialName").val() == "四合一贴片灯") {
            $("#AM").val("我司测试条件R=G=B=8mA")
            $("#EquipmentNum").val("① QD050023 高精度快速光谱辐射计,② QD050031 可编程LED测试电源");
            $("#EquipmentNumShow").html("① QD050023 高精度快速光谱辐射计" + "<br>" + "② QD050031 可编程LED测试电源");
            $(".s0show").show(); $(".sRshow").hide();
        } else if ($("#MaterialName").val() == "LED插件灯") {
            $("#AM").val("我司测试条件R=20mA.G=15mA.B=10mA")
            $("#EquipmentNum").val("① QD050005 LED光强测试仪,② QD050002 LED光色电综合测量系统,③ QD050003 积分球,④ QD050036 LED光强分布测试仪");
            $("#EquipmentNumShow").html("① QD050005 LED光强测试仪" + "<br>" + "② QD050002 LED光色电综合测量系统" + "<br>" + "③ QD050003 积分球" + "<br>" + "④ QD050036 LED光强分布测试仪");
            $(".s0show").hide(); $(".sRshow").show();
        } else {
            $("#EquipmentNum").val("");
            $("#EquipmentNumShow").html("请选择物料");
            $(".s0show").hide(); $(".sRshow").hide();
        }
    });

    $('#tableApp').find('input[name=RoHS_REACHcheck]').bind('click', function () {
        $('#tableApp').find('input[name=RoHS_REACHcheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            if ($(this).val() == '是') {
                $("#RoHS_REACH").val("true");
            } else {
                $("#RoHS_REACH").val("false");
            }
        } else {
            $("#RoHS_REACH").val("");
        }
        
    });
    $('#tableApp').find('input[name=SamplingPlancheck]').bind('click', function () {
        $('#tableApp').find('input[name=SamplingPlancheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            $("#SamplingPlan").val($(this).val());
        } else {
            $("#SamplingPlan").val("");
        }
    });
    $('#tableApp').find('input[name=NGDcheck]').bind('click', function () {
        $('#tableApp').find('input[name=NGDcheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            if ($(this).val() == '允收') {
                $("#NGD").val("true");
            } else {
                $("#NGD").val("false");
            }
        } else {
            $("#NGD").val("");
        }
        
    });
    $('#tableApp').find('input[name=NGHandlecheck]').bind('click', function () {
        $('#tableApp').find('input[name=NGHandlecheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            $("#NGHandle").val($(this).val());
        } else {
            $("#NGHandle").val("");
        }
    });
    
    //调用：new tabTableInput("tblGrid","text");
    function test() {
        $("input:not(:disabled):not(:hidden):not([readonly])[type=text]").keypress(function (e) {
            if (e.which == 13) {// 判断所按是否回车键  
                var inputs = $("input:not(:disabled):not(:hidden):not([readonly])[type=text]"); // 获取表单中的所有输入框  
                var idx = inputs.index(this); // 获取当前焦点输入框所处的位置  
                if (idx == inputs.length - 1) {// 判断是否是最后一个输入框  
                    //if (confirm("最后一个输入框已经输入,是否提交?")) // 用户确认  
                    $("form[novalidate='novalidate']").submit(); // 提交表单  
                } else {
                    inputs[idx + 1].focus(); // 设置焦点  
                    inputs[idx + 1].select(); // 选中文字  
                }
                return false;// 取消默认的提交行为  
            }
        });
       // $(".s0show,.sRshow").hide();

        var rowInputs = [];
        var trs = $("#tableApp").find("tr");
        var inputRowIndex = 0;
        $.each(trs, function (i, obj) {
            if ($(obj).find("th").length > 0) { //跳过表头
                return true;
            }
            var rowArray = [];
            var thisRowInputs = $(obj).find("input:not(:disabled):not(:hidden):not([readonly])[type=text]");
            if (thisRowInputs.length == 0)
                return true;
            thisRowInputs.each(function (j) {
                $(this).attr("_r_", inputRowIndex).attr("_c_", j);
                rowArray.push({ "c": j, "input": this });
                $(this).keydown(function (evt) {
                    var r = $(this).attr("_r_");
                    var c = $(this).attr("_c_");

                    if (evt.which < 37 || evt.which > 40) {
                        return;
                    }
                    var tRow;
                    if (evt.which == 38) { //上
                        if (r == 0)
                            return;
                        r--; //向上一行
                        tRow = rowInputs[r];
                        if (c > tRow.length - 1) {
                            c = tRow.length - 1;
                        }
                    } else if (evt.which == 40) { //下
                        if (r == rowInputs.length - 1) { //已经是最后一行
                            return;
                        }
                        r++;
                        tRow = rowInputs[r];
                        if (c > tRow.length - 1) {
                            c = tRow.length - 1;
                        }
                    } else if (evt.which == 37) { //左
                        if (r == 0 && c == 0) {  //第一行第一个,则不执行操作
                            return;
                        }
                        if (c == 0) { //某行的第一个,则要跳到上一行的最后一个,此处保证了r大于0
                            r--;
                            tRow = rowInputs[r];
                            c = tRow.length - 1;
                        } else { //否则只需向左走一个
                            c--;
                        }
                    } else if (evt.which == 39) { //右
                        tRow = rowInputs[r];
                        if (r == rowInputs.length - 1 && c == tRow.length - 1) { //最后一个不执行操作
                            return;
                        }

                        if (c == tRow.length - 1) { //当前行的最后一个,跳入下一行的第一个
                            r++;
                            c = 0;
                        } else {
                            c++;
                        }
                    }
                    $(rowInputs[r].data[c].input).focus().select();
                });
            });
            rowInputs.push({ "length": thisRowInputs.length, "rowindex": inputRowIndex, "data": rowArray });
            inputRowIndex++;
        });
    };

    function boferSubmit(item) {
        var sizeTr = $(".sizes");
        var testSdandarTr = $(".testSdantar");
        var ourStandartTr = $(".ourStandart");
        var actualValuesTr = $(".actualValues");
        var sizeval = [];
        var testSdandarVal = [];
        var ourStandartVal = [];
        var actaulValuesVal = [];
        for (let i = 0; i < sizeTr.length; i++) {
            var inputs = $(sizeTr[i]).children().children(".sizeinput")
            for (let j = 0; j < inputs.length; j++) {
                sizeval.push(inputs[j].value)
            }
        }
        for (let i = 0; i < testSdandarTr.length; i++) {
            var inputs = $(testSdandarTr[i]).children().children(".testSdantarInput")
            for (let j = 0; j < inputs.length; j++) {
                testSdandarVal.push(inputs[j].value)
            }
        }
        for (let i = 0; i < ourStandartTr.length; i++) {
            var inputs = $(ourStandartTr[i]).children().children(".ourStandartInput")
            for (let j = 0; j < inputs.length; j++) {
                ourStandartVal.push(inputs[j].value)
            }
        }
        for (let i = 0; i < actualValuesTr.length; i++) {
            var inputs = $(actualValuesTr[i]).children().children(".actualValuesInput")
            for (let j = 0; j < inputs.length; j++) {
                actaulValuesVal.push(inputs[j].value)
            }
        }
        var sizeValJoin = sizeval.join(",");    //三合一贴片灯--尺寸类目下所有输入框的值--string
        var testSdandarValJoin = testSdandarVal.join(",");
        var ourStandartValJoin = ourStandartVal.join(",");
        var actaulValuesValJoin = actaulValuesVal.join(",");
        if ($("#MaterialName").val() == "三合一贴片灯" || $("#MaterialName").val() == "四合一贴片灯") {
            $(".testPost").text(sizeValJoin + 's' + testSdandarValJoin + 's' + ourStandartValJoin + 's' + actaulValuesValJoin)
            console.log(sizeValJoin + testSdandarValJoin + ourStandartValJoin + actaulValuesValJoin)
            //location.reload(true);    //强制清除缓存重新加载页面
        } else if ($("#MaterialName").val() == "LED插件灯") {
            $(".testPost").text(testSdandarValJoin + 's' + actaulValuesValJoin)
            console.log(testSdandarValJoin + 's' + actaulValuesValJoin)
        }
        $(item).prev().click();     //表单提交到ReportRemark  --正常提交
    }
</script>