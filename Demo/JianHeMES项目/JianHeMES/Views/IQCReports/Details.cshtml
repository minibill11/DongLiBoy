@model JianHeMES.Models.IQCReport
@{
    ViewBag.Title = "IQC报告详细内容";
}
<script src="~/Scripts/jquery-1.11.3.js"></script>
<script src="~/Scripts/jsPdf.debug.js"></script>
<script src="~/Scripts/html2canvas_0.5.0-beta4.js"></script>
@*<script src="https://cdn.bootcss.com/html2canvas/0.5.0-beta4/html2canvas.js"></script>
    <script src="https://cdn.bootcss.com/jspdf/1.3.4/jspdf.debug.js"></script>*@
<style>
    .forsplierSdandartClone span, .forOurSdandartClone span, .forActualValueClone span {
        display: inline-block;
        float: left;
        width: 33.3%;
    }

    .forSizeClone span {
        display: inline-block;
        float: left;
        width: 10%;
    }

    tr {
        height: 22px;
        font-size: 14px;
        text-align: center;
    }

    input {
        max-width: none;
    }

    td {
        border: 1px solid black;
    }

    #C3, #C4, #C5, #C6, #C7, #C8,
    #D3, #D4, #D5, #D6, #D7, #D8,
    #E3, #E4, #E5, #E6, #E7, #E8,
    #F3, #F4, #F5, #F6, #F7, #F8 {
        width: 65%;
        height: 21px;
        float: right;
    }


    .Dthree span {
        width: 33.3%;
        float: left;
    }

    label {
        font-weight: normal;
    }



    #RoHS_REACH, #SamplingPlan, #NGD, #NGHandle, #ApprovePass, #AssessorPass, #SRJson, #SGJson, #SBJson, #S11, #S21, #S31 {
        display: none;
    }

    textarea {
        border: none;
        width: 100%;
        max-width: initial;
        line-height: 14px;
        font-size: 14px;
        padding: 3px 6px;
        resize: none;
    }

    .sr span, .sg span, .sb span, .s1 span, .s2 span, .s3 span {
        display: block;
        float: left;
        width: 10%;
    }

    #EquipmentNumShow {
        text-align: left;
        padding: 0;
        line-height: 13px;
        font-size: 13px;
        color: #555;
    }

    #ModelNumber, #BatchNum {
        padding: 0;
        font-size: 13px;
    }
</style>

<div class="printhide">
    <h3>@ViewBag.Title</h3>
    <button class="btn btn-default" id="printpdf" style="margin-left:200px;margin-bottom:5px">保存为PDF</button>
    <button id="copy" class="btn btn-primary">打印pdf</button>
    <form action="/IQCReports/DownloadPdf" method="post" style="display:inline-block;margin-bottom:5px" id="export-form">
        <textarea class="form-control" style="resize:both;display:none" name="pdfData" id="pdfData"></textarea>
        <input type="submit" value="导出PDF" class="btn btn-success" />
    </form>
</div>

<div id="tableContent">
    <table id="tableApp" name="htmlText" style="margin:0 auto;border-collapse:collapse;">
        <colgroup>
            <col width="100 " />
            <col width="80 " />
            <col width="80 " />
            <col width="80 " />
            <col width="80 " />
            <col width="80 " />
            <col width="80 " />
            <col width="160 " />
        </colgroup>
        <tbody>
            <tr>
                <td colspan="8" style="border-left: none;border-right: none;border-bottom:none"><b style="font-size:28px">进料检验报告</b><b>--通用</b></td>
            </tr>
            <tr>
                <td colspan="1" style="border:none;">物料编号：</td>
                <td colspan="3" style="border:none;">
                    @Html.TextAreaFor(model => model.Material_SN, new { @readonly = "readonly" })
                </td>
                <td colspan="2" style="border:none;text-align:right">订单号：</td>
                <td colspan="2" style="border:none;text-align:right">
                    @Html.TextAreaFor(model => model.OrderNumber, new { @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                </td>

            </tr>
            <tr style="height:60px">
                <td colspan="4" style="border:none" class="form-group">
                    <span style="float: left">
                        物料需要符合RoHS、REACH要求：
                        <label><input type="checkbox" name="RoHS_REACHcheck" value="是">是&nbsp;</label>
                        <label><input type="checkbox" name="RoHS_REACHcheck" value="否">否</label>
                    </span>
                    @Html.EditorFor(model => model.RoHS_REACH)
                    @Html.ValidationMessageFor(model => model.RoHS_REACH, "", new { @class = "text-danger" })
                </td>
                <td colspan="2" style="border:none;text-align:right">测试设备编号：</td>
                <td colspan="2" style="border:none;">
                    <div id="EquipmentNumShow">
                        @Html.DisplayFor(model => model.EquipmentNum)
                    </div>
                </td>
            </tr>
            <tr>
                <td>供应商</td>
                <td colspan="2" class="form-group">
                    @Html.DisplayFor(model => model.Provider)
                </td>
                <td>物料名称</td>
                <td colspan="2" class="form-group" id="MaterialName">
                    @Html.DisplayFor(model => model.MaterialName)
                    @*@Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control" } })*@
                </td>
                <td>型号</td>
                <td colspan="1" class="form-group">
                    @Html.TextAreaFor(model => model.ModelNumber, new { @readonly = "readonly" })
                </td>
            </tr>
            <tr>
                <td>规格</td>
                <td colspan="2" class="form-group">
                    @Html.DisplayFor(model => model.Specification)
                </td>
                <td>来料数量</td>
                <td colspan="2" class="form-group">
                    @Html.DisplayFor(model => model.MaterialQuantity)
                </td>
                <td>来料日期</td>
                <td colspan="1" class="form-group">
                    @Html.DisplayFor(model => model.IncomingDate)
                </td>
            </tr>
            <tr>
                <td>请购单号</td>
                <td colspan="2" class="form-group">
                    @Html.TextAreaFor(model => model.ApplyPurchaseOrderNum, new { @readonly = "readonly" })
                </td>
                <td>批号</td>
                <td colspan="2" class="form-group">
                    @Html.TextAreaFor(model => model.BatchNum, new { @readonly = "readonly" })
                </td>
                <td>检验日期</td>
                <td colspan="1" class="form-group">
                    @Html.DisplayFor(model => model.InspectionDate)
                </td>
            </tr>
            <tr style="height: 40px">
                <td>抽样方案</td>
                <td colspan="4" class="form-group">
                    <label><input type="checkbox" name="SamplingPlancheck" value="全检">全检 &nbsp;</label>
                    <label><input type="checkbox" name="SamplingPlancheck" value="加严">加严 &nbsp;</label>
                    <label><input type="checkbox" name="SamplingPlancheck" value="正常">正常 &nbsp;</label>
                    <label><input type="checkbox" name="SamplingPlancheck" value="放宽">放宽</label>
                    @Html.EditorFor(model => model.SamplingPlan)
                </td>
                <td colspan="2">承认书或图纸号/版本</td>
                <td colspan="1" class="form-group">
                    @Html.DisplayFor(model => model.MaterialVersion)
                </td>
            </tr>
            <tr>
                <td rowspan="2">检验内容</td>
                <td rowspan="2">检验水平</td>
                <td rowspan="2">抽样数量</td>
                <td colspan="3">判定标准</td>
                <td colspan="2" rowspan="2">检验判定</td>
            </tr>
            <tr>
                <td>严重缺陷<br />AQL：0</td>
                <td>一般缺陷<br />AQL：0.4</td>
                <td>轻微缺陷<br />AQL：0.65</td>
            </tr>
            <tr>
                <td rowspan="2">标识</td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.C1)
                </td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.C2)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.C3)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.C5)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.C7)
                </td>
                <td colspan="2" rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.C9)
                </td>
            </tr>
            <tr>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.C4)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.C6)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.C8)
                </td>
            </tr>
            <tr>
                <td rowspan="2">包装、外观</td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.D1)
                </td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.D2)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.D3)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.D5)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.D7)
                </td>
                <td colspan="2" rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.D9)
                </td>
            </tr>
            <tr>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.D4)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.D6)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.D8)
                </td>
            </tr>
            <tr>
                <td rowspan="2">尺寸</td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.E1)
                </td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.E2)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.E3)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.E5)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.E7)
                </td>
                <td colspan="2" rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.E9)
                </td>
            </tr>
            <tr>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.E4)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.E6)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.E8)
                </td>
            </tr>
            <tr>
                <td rowspan="2">性能/参数</td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.F1)
                </td>
                <td rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.F2)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.F3)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.F5)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">AC：</span>
                    @Html.DisplayFor(model => model.F7)
                </td>
                <td colspan="2" rowspan="2" class="form-group">
                    @Html.DisplayFor(model => model.F9)
                </td>
            </tr>
            <tr>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.F4)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.F6)
                </td>
                <td class="form-group">
                    <span style="width:30%;float:left">Re：</span>
                    @Html.DisplayFor(model => model.F8)
                </td>
            </tr>
            <tr>
                <td>不良项目<br />(检测项目)</td>
                <td>规格要求</td>
                <td colspan="6">检验结果描述</td>
            </tr>

            <tr class="forSizeClone" style="display:none;">
                <td></td>
                <td></td>
                <td colspan="6">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sizeTarget">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            
            <tr class="ourTarget">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            <tr class="spulierTarget">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>

            @*我司测试条件*@
            <tr class="targetTr">
                <td></td>
                <td></td>
                <td colspan="6" class="form-group" style="text-align:center">
                    @Html.DisplayFor(model => model.AM)
                    <span class="allinfos" style="display:none;">@Html.TextAreaFor(model => model.S1)</span>
                </td>
            </tr>
            
            <tr class="avtualTarget">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            <tr class="forsplierSdandartClone" style="display:none;">
                <td></td>
                <td></td>
                <td colspan="6">
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>

            <tr class="forOurSdandartClone" style="display:none;">
                <td></td>
                <td></td>
                <td colspan="6">
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>

            <tr class="forActualValueClone showoff" style="display:none;">
                <td></td>
                <td></td>
                <td colspan="6">
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>



            <tr class="sRshow">
                <td class="form-group">
                    @Html.DisplayFor(model => model.SR, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td>
                    <span class="form-control sr"></span>
                    @Html.TextAreaFor(model => model.SRJson, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td colspan="6" class="sr">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sr"></span>
                </td>
                <td colspan="6" class="sr">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sr"></span>
                </td>
                <td colspan="6" class="sr">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sr"></span>
                </td>
                <td colspan="6" class="sr">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sr"></span>
                </td>
                <td colspan="6" class="sr">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            <tr class="sRshow">
                <td class="form-group">
                    @Html.DisplayFor(model => model.SG, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td>
                    <span class="form-control sg"></span>
                    @Html.TextAreaFor(model => model.SGJson, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td colspan="6" class="sg">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sg"></span>
                </td>
                <td colspan="6" class="sg">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sg"></span>
                </td>
                <td colspan="6" class="sg">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sg"></span>
                </td>
                <td colspan="6" class="sg">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sg"></span>
                </td>
                <td colspan="6" class="sg">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            <tr class="sRshow">
                <td class="form-group">
                    @Html.DisplayFor(model => model.SB, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td>
                    <span class="form-control sb"></span>
                    @Html.TextAreaFor(model => model.SBJson, new { @class = "form-control", @readonly = "readonly" })
                </td>
                <td colspan="6" class="sb">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sb"></span>
                </td>
                <td colspan="6" class="sb">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sb"></span>
                </td>
                <td colspan="6" class="sb">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sb"></span>
                </td>
                <td colspan="6" class="sb">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td class="form-group"></td>
                <td>
                    <span class="form-control sb"></span>
                </td>
                <td colspan="6" class="sb">
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                </td>
            </tr>
            <tr class="sRshow">
                <td></td>
                <td></td>
                <td colspan="6"></td>
            </tr>
            <tr>
                <td rowspan="3">总不良数</td>
                <td>严重缺陷</td>
                <td class="form-group">
                    @Html.DisplayFor(model => model.NG1)
                </td>
                <td colspan="5" rowspan="3" class="form-group">
                    最终判定：
                    <label>&nbsp;<input type="checkbox" name="NGDcheck" value="允收">允收（AC） </label>
                    <label>&nbsp;<input type="checkbox" name="NGDcheck" value="拒收">拒收（Re）</label>
                    @Html.EditorFor(model => model.NGD)
                </td>
            </tr>
            <tr>
                <td>一般缺陷</td>
                <td class="form-group">
                    @Html.DisplayFor(model => model.NG2)
                </td>
            </tr>
            <tr>
                <td>轻微缺陷</td>
                <td class="form-group">
                    @Html.DisplayFor(model => model.NG3)
                </td>
            </tr>
            <tr>
                <td colspan="8" class="form-group">
                    不合格批处理：
                    <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="退货">退货； </label>
                    <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="挑选">挑选； </label>
                    <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="特采">特采； </label>
                    <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="维修">维修； </label>
                    <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="其他">其他； </label>
                    @Html.EditorFor(model => model.NGHandle)
                </td>
            </tr>
            <tr style="text-align: left;height: 40px">
                <td style="text-align:center;border-right: none">备注：</td>
                <td colspan="7" style="border-left:none;word-break:break-all;" class="form-group">
                    @Html.DisplayFor(model => model.ReportRemark)
                </td>
            </tr>
            <tr style="text-align: left;">
                <td style="text-align:center;border-right: none">批准：</td>
                <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                    @Html.EditorFor(model => model.ApprovePass)
                    <select class="list-box tri-state" id="ApprovePassSelect" disabled="disabled">
                        <option value="">未批准</option>
                        <option value="true">通过</option>
                        <option value="false">未通过</option>
                    </select>
                    @Html.DisplayFor(model => model.Approve)
                </td>
                <td style="text-align:center;border-left: none;border-right: none">审核：</td>
                <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                    @Html.EditorFor(model => model.AssessorPass)
                    <select class="list-box tri-state" id="AssessorPassSelect" disabled="disabled">
                        <option value="">未审核</option>
                        <option value="true">通过</option>
                        <option value="false">未通过</option>
                    </select>
                    @Html.DisplayFor(model => model.Assessor)
                </td>
                <td style="text-align:center;border-left: none;border-right: none">检验：</td>
                <td style="border-left: none" class="form-group">
                    @Html.DisplayFor(model => model.Inspector)
                </td>
            </tr>
            <tr>
                <td colspan="8" style="text-align: right;border: none">表单编号：QD-007-B</td>
            </tr>
        </tbody>
    </table>
</div>

<div style="margin-left:200px" class="printhide">
    @{var UserRole = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Role; }

    @if (UserRole == "IQC检验员" || UserRole == "系统管理员" || ViewBag.checkIQC == "edit" && Model.AssessorPass == null)
    {
        <span class="text-success text-center btn btn-default">
            @Html.ActionLink("编辑", "IQCReportEdit", new { id = Model.Id })
        </span>
    }
    @if (UserRole == "IQC组长" || UserRole == "系统管理员" || ViewBag.checkIQC == "examine" && Model.AssessorPass == null)
    {
        <span class="text-success text-center btn btn-default">
            @Html.ActionLink("审核", "IQCReportAssessor", new { id = Model.Id })
        </span>
    }
    @if (UserRole == "品质部经理" || UserRole == "系统管理员" || ViewBag.checkIQC == "pass" && Model.AssessorPass != null && Model.ApprovePass == null)
    {
        <span class="text-success text-center btn btn-default">
            @Html.ActionLink("批准", "IQCReportApprove", new { id = Model.Id })
        </span>
    }
    <span class="text-success text-center btn btn-default">
        @Html.ActionLink("返回IQC首页", "Index")
    </span>
</div>
<script>
    $(function () {
        var pdfContent = document.getElementById("tableContent").innerHTML;
        //var pdfContent1 = document.getElementById("test").innerHTML;
        var pdfContentFormat = pdfContent.replace(/(<col)( .*)(">)/g, "$1$2\"/>").replace(/(<input)( .*)(">)/g, "$1$2\"/>").replace(/<br>/g, "<br/>").replace(/[\r\n]/g, "").replace(/\s+/g, ' ').replace(/\</g, "&lt").replace(/\>/g, "&gt");
        $("#pdfData").val(pdfContentFormat);

        $("#copy").click(function () {
            var copytable = $("#tableContent");
            $("body").css("padding", "0")
            copytable.parent().prev().hide();
            copytable.siblings("footer,hr").hide();
            $(".printhide").hide();
            window.print();
        });
    });
</script>
<script>
    if ($("#MaterialName").text().trim() == "三合一贴片灯" || $("#MaterialName").text().trim() == "四合一贴片灯") {
        $(".s0show").show(); $(".sRshow").hide(); $(".showoff").show();
    } else if ($("#MaterialName").text().trim() == "LED插件灯") {
        $(".s0show").hide(); $(".sRshow").show(); $(".showoff").hide()
        console.log($("#MaterialName").text().trim())
    } else {
        $(".s0show").hide(); $(".sRshow").hide(); $(".showoff").hide()
    }


    if ($("#MaterialName").text().trim() == "三合一贴片灯" || $("#MaterialName").text().trim() == "四合一贴片灯") {
    var infos = $(".allinfos").text();
    console.log(infos)
    var sizesArr = (infos.split("s")[0]).split(",");
    var splierSdandartArr = (infos.split("s")[1]).split(",");
    var ourSdandartArr = (infos.split("s")[2]).split(",");
    var actualValueArr = (infos.split("s")[3]).split(",");
    //console.log(sizesArr)
    //console.log(splierSdandartArr)
    //console.log(infos)
    //console.log(actualValueArr)

    var trOfActualValue = [];
    var trOfActualValueArr = [];
    for (let i = 0; i < (actualValueArr.length / 5) ; i++) {
        var ourSdandartTrs = $(".forOurSdandartClone").clone(true);
        var n = 0 + i * 5;
        var m = 5 + i * 5;
        var test = actualValueArr.slice(n, m);
        trOfActualValue.push(ourSdandartTrs)
        trOfActualValueArr.push(test)
    }
    for (let i = 0; i < trOfActualValue.length; i++) {
        trOfActualValue[i].insertBefore($(`.avtualTarget`));
        trOfActualValue[i].show();
    }
    //trOfActualValueArr.reverse();
    for (let i = 0; i < trOfActualValue.length; i++) {
        trOfActualValue[i].children("td")[0].innerHTML = trOfActualValueArr[i][0];
        trOfActualValue[i].children("td")[1].innerHTML = trOfActualValueArr[i][1];
        trOfActualValue[i].children("td")[2].children[0].innerHTML = trOfActualValueArr[i][2];
        trOfActualValue[i].children("td")[2].children[1].innerHTML = trOfActualValueArr[i][3];
        trOfActualValue[i].children("td")[2].children[2].innerHTML = trOfActualValueArr[i][4];
    }


    var trOfOurSdandart = [];    //总的clone行数---我司要求值克隆
    var trOfOurSdandartArr = [];
    for (let i = 0; i < (ourSdandartArr.length / 5) ; i++) {
        var ourSdandartTr = $(".forActualValueClone").clone(true);
        var n = 0 + i * 5;
        var m = 5 + i * 5;
        var test = ourSdandartArr.slice(n, m);
        trOfOurSdandart.push(ourSdandartTr)
        trOfOurSdandartArr.push(test)
    }
    for (let i = 0; i < trOfOurSdandart.length; i++) {
        trOfOurSdandart[i].insertBefore($(`.ourTarget`));
        trOfOurSdandart[i].show();
    }
    //console.log(trOfOurSdandartArr)
    //trOfOurSdandartArr.reverse();
    for (let i = 0; i < trOfOurSdandart.length; i++) {
        trOfOurSdandart[i].children("td")[0].innerHTML = trOfOurSdandartArr[i][0];
        trOfOurSdandart[i].children("td")[1].innerHTML = trOfOurSdandartArr[i][1];
        trOfOurSdandart[i].children("td")[2].children[0].innerHTML = trOfOurSdandartArr[i][2];
        trOfOurSdandart[i].children("td")[2].children[1].innerHTML = trOfOurSdandartArr[i][3];
        trOfOurSdandart[i].children("td")[2].children[2].innerHTML = trOfOurSdandartArr[i][4];
    }

    var trOfspliersdandart = [];  //总的clone行数---供应商测试标准克隆
    var trOfspliersdandartArr = [];
    for (let i = 0; i < (splierSdandartArr.length / 5) ; i++) {
        var splierTr = $(".forsplierSdandartClone").clone(true);
        var n = 0 + i * 5;
        var m = 5 + i * 5;
        var test = splierSdandartArr.slice(n, m);
        trOfspliersdandart.push(splierTr)
        trOfspliersdandartArr.push(test)
    }

    for (let i = 0; i < trOfspliersdandart.length; i++) {
        trOfspliersdandart[i].insertBefore($(`.spulierTarget`));
        trOfspliersdandart[i].show();
    }
    //trOfspliersdandartArr.reverse();
    for (let i = 0; i < trOfspliersdandart.length; i++) {
        trOfspliersdandart[i].children("td")[0].innerHTML = trOfspliersdandartArr[i][0];
        trOfspliersdandart[i].children("td")[1].innerHTML = trOfspliersdandartArr[i][1];
        trOfspliersdandart[i].children("td")[2].children[0].innerHTML = trOfspliersdandartArr[i][2];
        trOfspliersdandart[i].children("td")[2].children[1].innerHTML = trOfspliersdandartArr[i][3];
        trOfspliersdandart[i].children("td")[2].children[2].innerHTML = trOfspliersdandartArr[i][4];
    }



    var trss = []    //总的clone行数---尺寸克隆
    var trssValArr = []
    for (let i = 0; i < (sizesArr.length / 12) ; i++) {
        var sizeTr = $(".forSizeClone").clone(true);
        var n = 0 + i * 12;
        var m = 12 + i * 12;
        var test = sizesArr.slice(n, m);
        trss.push(sizeTr)
        trssValArr.push(test)
    }

    //console.log(trssValArr)
    for (let i = 0; i < trss.length; i++) {
        trss[i].insertBefore($(`.sizeTarget`));
        trss[i].show();
    }
    for (let i = 0; i < trss.length; i++) {
        trss[i].children("td")[0].innerHTML = trssValArr[i][0];
        trss[i].children("td")[1].innerHTML = trssValArr[i][1];
        trss[i].children("td")[2].children[0].innerHTML = trssValArr[i][2];
        trss[i].children("td")[2].children[1].innerHTML = trssValArr[i][3];
        trss[i].children("td")[2].children[2].innerHTML = trssValArr[i][4];
        trss[i].children("td")[2].children[3].innerHTML = trssValArr[i][5];
        trss[i].children("td")[2].children[4].innerHTML = trssValArr[i][6];
        trss[i].children("td")[2].children[5].innerHTML = trssValArr[i][7];
        trss[i].children("td")[2].children[6].innerHTML = trssValArr[i][8];
        trss[i].children("td")[2].children[7].innerHTML = trssValArr[i][9];
        trss[i].children("td")[2].children[8].innerHTML = trssValArr[i][10];
        trss[i].children("td")[2].children[9].innerHTML = trssValArr[i][11];
    }
    //var allSizesTrs = $(`.forSizeClone`);         //清空无数据的行--解决数组中的元素插入同一个节点元素之前所产生的空行问题
    //if (allSizesTrs.length>trss.length) {
            
    //    for (item in allSizesTrs) {
    //        //console.log(allSizesTrs[item].children[1].innerHTML)
    //        if (allSizesTrs[item].children[1].innerHTML == "") {
    //            allSizesTrs[item].remove();
    //        }
    //    }
    //}
    //var allSizesTrss = $(`.forsplierSdandartClone`);
    //if (allSizesTrss.length > trOfspliersdandart.length) {
    //    for (item in allSizesTrss) {
    //        //console.log(allSizesTrs[item].children[1].innerHTML)
    //        if (allSizesTrss[item].children[1].innerHTML == "") {
    //            allSizesTrss[item].remove();
    //        }
    //    }

    //}
    } else if ($("#MaterialName").text().trim() == "LED插件灯") {
        
        var infos = $(".allinfos").text();
        var splierSdandartArr = (infos.split("s")[0]).split(",");
        var ourSdandartArr = (infos.split("s")[1]).split(",");

        var trOfOurSdandart = [];    //总的clone行数---我司要求值克隆
        var trOfOurSdandartArr = [];
        for (let i = 0; i < (ourSdandartArr.length / 5) ; i++) {
            var ourSdandartTr = $(".forActualValueClone").clone(true);
            var n = 0 + i * 5;
            var m = 5 + i * 5;
            var test = ourSdandartArr.slice(n, m);
            trOfOurSdandart.push(ourSdandartTr)
            trOfOurSdandartArr.push(test)
        }
        for (let i = 0; i < trOfOurSdandart.length; i++) {
            trOfOurSdandart[i].insertAfter($(`.targetTr`));
            trOfOurSdandart[i].show();
        }
        //console.log(trOfOurSdandartArr)
        trOfOurSdandartArr.reverse();
        for (let i = 0; i < trOfOurSdandart.length; i++) {
            trOfOurSdandart[i].children("td")[0].innerHTML = trOfOurSdandartArr[i][0];
            trOfOurSdandart[i].children("td")[1].innerHTML = trOfOurSdandartArr[i][1];
            trOfOurSdandart[i].children("td")[2].children[0].innerHTML = trOfOurSdandartArr[i][2];
            trOfOurSdandart[i].children("td")[2].children[1].innerHTML = trOfOurSdandartArr[i][3];
            trOfOurSdandart[i].children("td")[2].children[2].innerHTML = trOfOurSdandartArr[i][4];
        }
        var trOfspliersdandart = [];  //总的clone行数---供应商测试标准克隆
        var trOfspliersdandartArr = [];
        for (let i = 0; i < (splierSdandartArr.length / 5) ; i++) {
            var splierTr = $(".forsplierSdandartClone").clone(true);
            var n = 0 + i * 5;
            var m = 5 + i * 5;
            var test = splierSdandartArr.slice(n, m);
            trOfspliersdandart.push(splierTr)
            trOfspliersdandartArr.push(test)
        }

        for (let i = 0; i < trOfspliersdandart.length; i++) {
            trOfspliersdandart[i].insertBefore($(`.sizeTarget`));
            trOfspliersdandart[i].show();
        }
        //trOfspliersdandartArr.reverse();
        for (let i = 0; i < trOfspliersdandart.length; i++) {
            trOfspliersdandart[i].children("td")[0].innerHTML = trOfspliersdandartArr[i][0];
            trOfspliersdandart[i].children("td")[1].innerHTML = trOfspliersdandartArr[i][1];
            trOfspliersdandart[i].children("td")[2].children[0].innerHTML = trOfspliersdandartArr[i][2];
            trOfspliersdandart[i].children("td")[2].children[1].innerHTML = trOfspliersdandartArr[i][3];
            trOfspliersdandart[i].children("td")[2].children[2].innerHTML = trOfspliersdandartArr[i][4];
        }
        $('.forSizeClone').hide();
        console.log(ourSdandartArr)
    }
    
    


    $(document).ready(function () {
        var s1 = $(".s1 span");
        var s2 = $(".s2 span");
        var s3 = $(".s3 span");
        var sR = $("span.sr,.sr span");
        var sG = $("span.sg,.sg span");
        var sB = $("span.sb,.sb span");
        function isJsonFormat(str) {
            try {
                $.parseJSON(str);
            } catch (e) {
                return false;
            }
            return true;
        }
        if (isJsonFormat($("#S11").val())) {
            var s1JSON = JSON.parse($("#S11").val())
            //console.log(s1JSON)
            s1.each(function (i) {
                try {
                    $(this).text(s1JSON.S1[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#S21").val())) {
            var s2JSON = JSON.parse($("#S21").val())
            //console.log(s2JSON)
            s2.each(function (i) {
                try {
                    $(this).text(s2JSON.S2[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#S31").val())) {
            var s3JSON = JSON.parse($("#S31").val())
            //console.log(s3JSON)
            s3.each(function (i) {
                try {
                    $(this).text(s3JSON.S3[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }



        if (isJsonFormat($("#SRJson").val())) {
            var rJSON = JSON.parse($("#SRJson").val())
            //console.log(rgbJSON)
            for (var i = 0; i < sR.length / 11; i++) {
                //console.log(i)
                sR.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).text(rJSON.SR[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                    //console.log(index + ":" + index / 11);
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#SGJson").val())) {
            var gJSON = JSON.parse($("#SGJson").val())
            for (var i = 0; i < sG.length / 11; i++) {
                //console.log(i)
                sG.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).text(gJSON.SG[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#SBJson").val())) {
            var bJSON = JSON.parse($("#SBJson").val())
            for (var i = 0; i < sB.length / 11; i++) {
                //console.log(i)
                sB.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).text(bJSON.SB[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }

        $("#EquipmentNumShow").html($("#EquipmentNumShow").text().replace(/,/g, "<br/>"))
        if ($("#ApprovePass").val() == "" || $("#AssessorPass").val() == "") {
            $("#printpdf").hide();
        }
        if ($("#ApprovePass").val() == "true") {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        } else if ($("#ApprovePass").val() == "false") {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        } else {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        }
        if ($("#AssessorPass").val() == "true") {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        } else if ($("#AssessorPass").val() == "false") {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        } else {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        }
        if ($("#RoHS_REACH").val() == "true") {
            $("input[name=RoHS_REACHcheck]:eq(0)").attr("checked", true)
        } else {
            $("input[name=RoHS_REACHcheck]:eq(1)").attr("checked", true)
        };
        if ($("#SamplingPlan").val() == "全检") {
            $("input[name=SamplingPlancheck]:eq(0)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "加严") {
            $("input[name=SamplingPlancheck]:eq(1)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "正常") {
            $("input[name=SamplingPlancheck]:eq(2)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "放宽") {
            $("input[name=SamplingPlancheck]:eq(3)").attr("checked", true)
        };
        if ($("#NGD").val() == "true") {
            $("input[name=NGDcheck]:eq(0)").attr("checked", true)
        } else {
            $("input[name=NGDcheck]:eq(1)").attr("checked", true)
        };
        if ($("#NGHandle").val() == "退货") {
            $("input[name=NGHandlecheck]:eq(0)").attr("checked", true)
        } else if ($("#NGHandle").val() == "挑选") {
            $("input[name=NGHandlecheck]:eq(1)").attr("checked", true)
        } else if ($("#NGHandle").val() == "特采") {
            $("input[name=NGHandlecheck]:eq(2)").attr("checked", true)
        } else if ($("#NGHandle").val() == "维修") {
            $("input[name=NGHandlecheck]:eq(3)").attr("checked", true)
        } else if ($("#NGHandle").val() == "其他") {
            $("input[name=NGHandlecheck]:eq(4)").attr("checked", true)
        }
        $(':checkbox').bind('click', function () {
            return false;
        });
        $(':checkbox,label').css('cursor', "not-allowed");
    });
</script>

@*保存为pdf*@
<script>
    $("#printpdf").click(function () {
        var Table = document.getElementById("tableApp");//需要截图的包裹的DOM 元素
        Table.style.background = "#FFFFFF";
        var width = Table.offsetWidth; //获取dom 宽度
        var height = Table.offsetHeight; //获取dom 高度
        var canvas2 = document.createElement("canvas"); //创建一个canvas节点
        var scale = 2; //定义任意放大倍数 支持小数
        canvas2.width = width * scale; //定义canvas 宽度 * 缩放
        canvas2.height = height * scale; //定义canvas高度 *缩放
        canvas2.style.width = width + "px";
        canvas2.style.height = height + "px";
        canvas2.getContext("2d").scale(scale, scale); //获取context,设置scale
        var opts = {
            scale: scale, // 添加的scale 参数
            canvas: canvas2, //自定义 canvas
            logging: false, //日志开关
            width: width, //dom 原始宽度
            height: height //dom 原始高度
        };
        //两个参数：所需要截图的元素id，截图后要执行的函数， canvas为截图后返回的最后一个canvas
        html2canvas(Table, { opts}).then(function (canvas) {
            //document.querySelector("#printpdf").appendChild(canvas);

            //返回图片URL，参数：图片格式和清晰度(0-1)
            var pageData = canvas.toDataURL('image/jpeg', 1.0);
            //方向默认竖直，尺寸ponits，格式a4【595.28,841.89]
            var pdf = new jsPDF('', 'pt', [595.28, 555.28 / canvas.width * canvas.height]);

            //需要dataUrl格式
            pdf.addImage(pageData, 'JPEG', 20, 0, 555.28, 555.28 / canvas.width * canvas.height);

            pdf.save('进料检验报告.pdf');
        });
    })

    //window.onload = function () {
    //    var Table = document.getElementById("tableApp");
    //    Table.style.background = "#FFFFFF";
    //        html2canvas(Table, {
    //            onrendered: function (canvas) {
    //                //document.getElementById("show").appendChild(canvas)
    //                var contentWidth = canvas.width;
    //                var contentHeight = canvas.height;
    //                //一页pdf显示html页面生成的canvas高度;
    //                var pageHeight = contentWidth / 592.28 * 841.89;
    //                //未生成pdf的html页面高度
    //                var leftHeight = contentHeight;
    //                //页面偏移
    //                var position = 0;
    //                //a4纸的尺寸[595.28,841.89]，html页面生成的canvas在pdf中图片的宽高
    //                //var imgWidth = 595.28;
    //                //var imgHeight = 592.28 / contentWidth * contentHeight;
    //                var imgWidth = 555.28;
    //                var imgHeight = 555.28 / contentWidth * contentHeight;
    //                var pageData = canvas.toDataURL('image/jpeg', 1.0);
    //                var pdf = new jsPDF('', 'pt', 'a4');

    //                //有两个高度需要区分，一个是html页面的实际高度，和生成pdf的页面高度(841.89)
    //                //当内容未超过pdf一页显示的范围，无需分页
    //                if (leftHeight < pageHeight) {
    //                    //pdf.addImage(pageData, 'JPEG', 0, 0, imgWidth, imgHeight);
    //                    pdf.addImage(pageData, 'JPEG', 20, 0, imgWidth, imgHeight);
    //                } else {
    //                    while (leftHeight > 0) {
    //                        //pdf.addImage(pageData, 'JPEG', 0, position, imgWidth, imgHeight)
    //                        pdf.addImage(pageData, 'JPEG', 20, position, imgWidth, imgHeight);
    //                        leftHeight -= pageHeight;
    //                        position -= 841.89;
    //                        //避免添加空白页
    //                        if (leftHeight > 0) {
    //                            pdf.addPage();
    //                        }
    //                    }
    //                }
    //                $("#printpdf").click(function () {
    //                    pdf.save('content.pdf');
    //                })
    //            }
    //        });
    //}
</script>
