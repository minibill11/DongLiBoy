@{
    ViewBag.Title = "校正工作";
}
@* css放置处 *@
@section cssStyle {
    <link rel="stylesheet/less" type="text/css" href="~/Content/styleFile/moduleManagement/module.less" />
    <style>
        .mian-line {
            border-top: 1px solid #d4e9ff;
            box-sizing: border-box;
            overflow-x: hidden;
        }

        .main input, .main textarea, .main select, .main .el-input-number, .main .el-input, .main .el-slider {
            width: 100%;
        }

        .con-box {
            text-align: center;
            display: flex;
            align-items: center;
            flex-direction: column;
            margin-bottom: 8px;
        }
        .con-title {
            width: 100%;
            text-align: center;
            font-size: 14px;
            padding: 10px;
            box-sizing: border-box;
        }

        .con-content {
            font-size: 14px;
           
        }
        .con-content-item {
            padding: 8px 4px;
            overflow: auto;
        }

        .indianred-title {
            color: indianred;
        }

        .indianred-border {
            border: 1px solid indianred;
        }

        .cornflowerblue-title {
            color: cornflowerblue;
        }

        .cornflowerblue-border {
            border: 1px solid cornflowerblue;
        }

        .forestgreen-title {
            color: forestgreen;
        }

        .forestgreen-border {
            border: 1px solid forestgreen;
        }

        @@media screen and (min-width:992px) {

            .row-style {
                padding: 16px 50px;
            }

            .con-content-item {
                height: 520px;
                width: 220px;
            }
        }

        @@media screen and (min-width:768px) {

            .row-style {
                padding: 16px;
            }

            .con-content-item {
                height: 520px;
                width: 220px;
            }
        }


        @@media screen and (max-width:768px) {

            .row-style {
                padding: 16px;
            }

            .con-content-item {
                min-height: 50px;
                max-height: 200px;
                overflow: auto;
                width: 220px;
            }
        }

        .finish-cal {
            padding: 20px;
            display: flex;
            justify-content: center;
        }

        .tip {
            text-align: center;
            font-size: 14px;
            color: #8ea0b8;
        }

        .el-card__body {
            padding: 0;
        }
    </style>
}
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            @*菜单*@
            <h1>{{isTurn?'完成校正':'开始校正'}}</h1>
        </el-header>
        <el-main class="main mian-line">
            <el-row class="row-style" v-if="!isTurn">
                <el-col :xs="24" :sm="24" :md="24" :lg="6" :xl="5">
                    <el-form size="small" label-position="right" label-width="120px">
                        <el-form-item label="班组">
                            <el-select v-model="group" placeholder="请选择班组">
                                <el-option v-for="item in group_options"
                                           :key="item.value"
                                           :label="item.label"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="订单号">
                            <el-select v-model="orderNumber" filterable clearable placeholder="请选择" @@change="setOrderNumber">
                                <el-option v-for="item in order_options"
                                           :key="item.value"
                                           :label="item.label"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="条码">
                            <div class="el-input el-input--medium el-input--suffix" style="max-width:215px;">
                                <input v-model.trim="code"
                                       v-on:keyup.enter="scanKeyup($event)"
                                       autocomplete="off"
                                       placeholder="输入条码"
                                       class="el-input__inner">
                            </div>
                            @*<el-input v-model.trim="code" clearable placeholder="请输入内容" style="max-width:215px;"></el-input>*@
                        </el-form-item>
                        <el-form-item label="模组号获取顺序">
                            <el-switch v-model="sequence" style="margin-left:20px;" @@change="setSequence"
                                       inactive-text="倒序"
                                       active-text="顺序">
                            </el-switch>
                        </el-form-item>
                        <el-form-item label="是否重复校正">
                            <el-checkbox v-model="isRepeat" :disabled="true"></el-checkbox>
                        </el-form-item>
                        <el-form-item label="重复原因" v-if="isRepeat">
                            <el-input type="textarea"
                                      :rows="4"
                                      placeholder="请输入内容"
                                      v-model="reason">
                            </el-input>
                        </el-form-item>
                        <el-form-item>
                            <el-button :disabled="comfirm" type="primary" @@click="onStartCheck">开始校正</el-button>
                        </el-form-item>
                    </el-form>
                </el-col>
                <el-col :xs="24" :sm="24" :md="8" :lg="6" :xl="5">

                    <div class="con-box">
                        <el-card class="con-content indianred-border indianred-title">
                            <div class="con-title" style="border-bottom: 1px solid indianred;">未开始{{NotDoList.length+AbnormalFinish.length}}个</div>
                            <div class="con-content-item">
                                <div v-for="item in NotDoList">{{item}}</div>
                                <div v-for="item in AbnormalFinish" style="color:#FF9900;">{{item}}</div>
                            </div>
                        </el-card>
                    </div>
                    <div class="tip">红色表示未开始，橙色表示异常</div>

                </el-col>
                <el-col :xs="24" :sm="24" :md="8" :lg="6" :xl="5">
                    <div class="con-box">
                        <el-card class="con-content cornflowerblue-border cornflowerblue-title">
                            <div class="con-title" style="border-bottom: 1px solid cornflowerblue;">未完成{{NeverFinish.length}}个</div>
                            <div class="con-content-item">
                                <div v-for="item in NeverFinish" style="text-align:left;padding-left:15px;">{{item}}</div>
                            </div>
                        </el-card>
                    </div>
                </el-col>

                <el-col :xs="24" :sm="24" :md="8" :lg="6" :xl="5">
                    <div class="con-box">
                        <el-card class="con-content forestgreen-border forestgreen-title">
                            <div class="con-title" style="border-bottom: 1px solid forestgreen;">已完成{{FinishList.length}}个</div>
                            <div class="con-content-item">
                                <div v-for="item in FinishList" style="text-align:left;padding-left:15px;">{{item}}</div>
                            </div>
                        </el-card>
                    </div>
                </el-col>
            </el-row>
            <template v-if="isTurn">
                <finish-cal-component :forminfo="formInfo"></finish-cal-component>
            </template>

        </el-main>
    </el-container>
</div>
@* 分部页放置处 *@
@section renderPage {
    @RenderPage("_Finish_Cal.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script>
        const app = {
            data: function () {
                return {
                    id: '',
                    department: '',
                    group: '',
                    orderNumber: '',
                    code: '',
                    sequence:true,
                    isRepeat: false,
                    reason: '',
                    group_options: [],
                    order_options: [],
                    FinishList: [],
                    NeverFinish: [],
                    NotDoList: [],
                    AbnormalFinish: [],
                    //是否校正
                    isTurn: false,
                    comfirm: false,
                    formInfo: {
                    },
                }
            },
            created() {
            },
            mounted() {
                if (this.urlSearchParam.orderNum != undefined) {
                    this.orderNumber = this.urlSearchParam.orderNum;
                } if (this.urlSearchParam.sequence != undefined) {
                    if (this.urlSearchParam.sequence == 'true') {
                        this.sequence = true;
                    } else {
                        this.sequence = false;
                    }
                }
                this.getInitData();
            },
            watch: {
                orderNumber(val) {
                    if (val != '' && val.length >= 10) {
                        //console.log(000);
                        this.getList();
                    } else {
                        this.FinishList = [];
                        this.NeverFinish = [];
                        this.NotDoList = [];
                        this.AbnormalFinish = [];
                    }
                },
                isRepeat(val) {
                    if (val) {
                        this.comfirm = true;
                    } else {
                        this.comfirm = false;
                    }
                },
                reason(val) {
                    if (this.isRepeat && val != '') {
                        this.comfirm = false;
                    } else {
                        this.comfirm = true
                    }
                }
            },
            methods: {
                //扫码
                scanKeyup(v) {
                    if (v.target.value == "") {
                        v.target.focus();
                        this.isRepeat = false;
                        return;
                    } else {
                        v.target.select();
                        this.onStartCheck();
                    }
                },
                //获取初始化数据
                getInitData() {
                    //班组
                    axios.post("/Users/DisplayGroup").then(res => {
                        //console.log(res.data);
                        let arr = [];
                        res.data.Group.forEach(item => {
                            let obj = {
                                label: item,
                                value: item
                            }
                            arr.push(obj);
                        })
                        this.group_options = arr;
                        this.department = res.data.department;
                        this.group = res.data.Group[0];
                    });
                    //订单号
                    axios.post("/api/Common_Api/OrderList").then(res => {
                        //console.log(res.data)
                        this.order_options = res.data.Data
                    });
                },
                //获取三个列表
                getList() {
                    axios.post("/api/CalibrationRecordsAPI/CalibrationChecklist", { orderNum: this.orderNumber, }).then(res => {
                        //console.log(res.data)
                        let allData = res.data.Data;
                        this.NotDoList = [];
                        this.NeverFinish = [];
                        this.FinishList = [];
                        this.AbnormalFinish = [];
                        for (var i in allData) {
                            if (allData[i] != "[]") {
                                var iJson = JSON.parse(allData[i]);
                                if (i == "NotDoList") {
                                    for (var j in iJson) {
                                        this.NotDoList.push(iJson[j]);
                                    }
                                };
                                if (i == "NeverFinish") {
                                    for (var j in iJson) {
                                        this.NeverFinish.push(iJson[j]);
                                    }
                                };
                                if (i == "FinishList") {
                                    for (var j in iJson) {
                                        this.FinishList.push(iJson[j]);
                                    }
                                }; if (i == "AbnormalFinish") {
                                    for (var j in iJson) {
                                        this.AbnormalFinish.push(iJson[j]);
                                    }
                                };
                            }
                        }
                        //console.log(this.NotDoList)
                        //console.log(this.NeverFinish)
                        //console.log(this.FinishList)
                        //console.log(this.AbnormalFinish)
                    });
                },
                //选择订单号设置导航
                setOrderNumber(val) {
                    //console.log(val)
                    let param = window.location.search;
                    if (param == '') {
                        window.location.href = '/CalibrationRecords/New_CalibrationRecord?orderNum=' + val + '&sequence='+this.sequence;
                    }
                },
                setSequence(val) {
                    //console.log(val)
                    window.location.href = '/CalibrationRecords/New_CalibrationRecord?orderNum=' + this.orderNumber + '&sequence=' + val;
                },
                //开始校正
                onStartCheck() {
                    if (this.group != '' && this.orderNum != '' && this.code != '') {
                        axios.post("/CalibrationRecords/CheckFinish", { barcode: this.code }).then(res => {
                            //console.log(res.data)
                            if (res.data == 'True') {
                                if (this.isRepeat && this.reason != '') {
                                    this.onToCheck();
                                } else {
                                    this.isRepeat = true;
                                    this.$message.warning("该条码已经通过校正，重复校正请先填写原因！")
                                }
                            } else {
                                this.onToCheck();
                            }
                        })
                    } else {
                        this.$message.warning("请补全信息！")
                    }
                },
                //校正
                onToCheck() {
                    axios.post("/api/CalibrationRecordsAPI/CreateCal1", {
                        Department: this.department,
                        Group: this.group,
                        OrderNum: this.orderNumber,
                        BarCodesNum: this.code.replace(/\s+/g, ""),
                        RepetitionCalibration: this.isRepeat,
                        sequence: this.sequence,
                        RepetitionCalibrationCause: this.reason,
                        UserName: this.userName
                    }).then(res => {
                        //console.log(res.data.Data,2222);
                        let result = res.data.Data;
                        if (result.pass) {
                            this.formInfo = {
                                id: result.id,
                                OrderNum: this.orderNumber,
                                BarCodesNum: this.code,
                                ModuleGroupNum: result.moduleNum,
                                isNormal: true,
                                sequence: this.sequence,
                                AbnormalDescription: '',
                                UserName: this.userName
                            }
                            //console.log(this.formInfo,555);
                            this.isTurn = true;
                            this.$message.success(result.mes);
                            this.isRepeat = false;
                            this.reason = '';
                        } else {
                            this.$message.warning(result.mes);
                        }
                    })
                }
            },

        };
    </script>
}