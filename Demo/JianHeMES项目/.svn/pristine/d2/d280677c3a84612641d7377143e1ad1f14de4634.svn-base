@model IEnumerable<JianHeMES.Models.Burn_in_MosaicScreen>

@{
    ViewBag.Title = "老化拼屏查询";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<style>
    * {
        margin: 0;
        padding: 0;
    }

    .grid-card {
        margin-bottom: 10px;
    }

    .el-card {
        border: 1px solid #9C9791;
    }

    .el-main, .el-aside {
        padding: 8px 15px;
    }

    .el-header {
        padding: 0 15px;
        height: 32px !important;
    }

    .el-card__header {
        text-align: center;
        border-bottom: 1px solid #9C9791;
        padding: 8px 15px;
    }

    .cardbody {
        border: 1px solid #D2CFCF;
        margin: -1px;
    }

    .el-card__body {
        height: 250px;
        overflow-y: auto;
        overflow-x: hidden;
        padding: 0px;
    }

    .cardbody-right {
        padding: 5px;
        text-align: center
    }

    .cardbody-left {
        padding: 5px 0px;
        border-right: 1px solid #D2CFCF;
        text-align: center;
        vertical-align: middle;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .barcodeSpan {
        /*cursor: pointer;*/
        padding: 1px 3px;
        display: inline-block;
        border-radius: 6px;
    }

        .barcodeSpan:hover {
            background-color: #efe2c5;
        }
</style>

<div id="app" v-cloak>
    <h2 class="text-center" style="margin-bottom:0">@ViewBag.Title</h2>
    <el-container>
        <el-header>
            <el-row>
                <div style="position:relative;">
                    <a href="/Burn_in_MosaicScreen/mosaicScreen_B"><el-button size="mini">开始拼屏</el-button></a>
                    <a href="/Burn_in_MosaicScreen/mosaicScreen_ShelfQueryHistory"><el-button size="mini">历史记录</el-button></a>
                    @*<el-button size="small">@Html.ActionLink("结束拼屏", "mosaicScreen_F")</el-button>*@
                    <div style="position:absolute;right:0;bottom:0">
                        <span style="display: inline-block; background: green;width: 10px;height: 10px;"></span> 正常&nbsp;
                        <span style="display: inline-block; background: red;width: 10px;height: 10px;"></span> 异常&nbsp;
                        <span style="display: inline-block; background: black;width: 10px;height: 10px;"></span> 未开始老化
                    </div>
                </div>
                
            </el-row>
        </el-header>
        <el-main v-loading="loading" style="min-height:600px;">
            <el-row :gutter="10">
                <template v-for="item in dataList">
                    <el-col :xs="24" :sm="12" :md="8" :lg="6" :xl="6">
                        <el-card shadow="hover" class="grid-card">
                            <div slot="header">
                                <span>{{'老化架号:'+item.ShelfNum+' (总数:'+ shelfCount(item.content)+')'}}</span>
                            </div>
                            <div v-for="order in item.content">
                                <el-container class="cardbody">
                                    <el-aside style="width:100px;" class="cardbody-left">{{order.ordernum}}<br />(数量:{{Object.keys(order.barcodelist).length}})</el-aside>
                                    <el-main class="cardbody-right">
                                        <template v-for="i in order.barcodelist">
                                            <el-popover placement="right"
                                                        title="条码异常信息"
                                                        trigger="hover"
                                                        v-bind:disabled="i.status=='2'?false:true">
                                                <div>{{i.Abnormal}}</div>
                                                <div class="barcodeSpan" slot="reference" v-bind:style="(i.status=='1')?({color:'green'}):(i.status=='2')?({color:'red'}):''">{{i.barcode}}</div>
                                            </el-popover>
                                        </template>
                                    </el-main>
                                </el-container>
                            </div>
                        </el-card>
                    </el-col>
                </template>
            </el-row>
        </el-main>
    </el-container>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            dataList: {},
            loading: true
        },
        methods: {
            request: () => {
                axios.post("/Burn_in_MosaicScreen/mosaicScreen_ShelfQueryData").then(response => {
                    //console.log(response.data)
                    app.dataList = response.data;
                    app.loading = false;
                }).catch(error => {
                    console.warn("读取数据失败" + error)
                });
            },
            shelfCount: function (v) {
                let vCount = 0;
                for (let s in v) {
                    vCount += Object.keys(v[s].barcodelist).length;
                };
                return vCount;
            },
        },
        created: function () {
            this.request();
            setInterval(function () {
                app.request();
            }, 10000)
        }
    });
</script>