using JianHeMES.Models;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace JianHeMES.Controllers
{
    public class VersionManagementController : Controller
    {
        private ApplicationDbContext db = new ApplicationDbContext();
        // GET: Menu
        public ActionResult Index()
        {
            return View();
        }
        //显示
        public ActionResult DisplayVersion()
        {
            var info = db.VersionInfo.Where(c => c.MESVersion != "Next").ToList();
            JArray result = new JArray();
            foreach (var item in info)
            {
                JObject obj = new JObject();
                obj.Add("id", item.Id);
                obj.Add("MESVersion", item.MESVersion);
                obj.Add("Section", item.Section);
                obj.Add("UpdateMes", item.UpdateMes);
                obj.Add("UpdateTime", item.UpdateTime);
                obj.Add("SNVVersion", item.SNVVersion);
                result.Add(obj);
            }
            return Content(JsonConvert.SerializeObject(result));
        }
        //新增
        public ActionResult AddVersion(List<VersionInfo> version)
        {
            version.ForEach(c => { c.MESVersion = "Next"; c.UpdateTime = DateTime.Now; });
            db.VersionInfo.AddRange(version);
            db.SaveChanges();
            JObject result = new JObject();
            result.Add("mes", "新增成功");
            result.Add("pass", true);
            return Content(JsonConvert.SerializeObject(result));
        }

        //更新
        public ActionResult UpdateVersion(int id,string Section, string UpdateMes,string SNVVersion)
        {
            var info = db.VersionInfo.Find(id);
            info.Section = Section;
            info.UpdateMes = UpdateMes;
            info.SNVVersion = SNVVersion;
            info.UpdateTime = DateTime.Now;
            db.SaveChanges();
            JObject result = new JObject();
            result.Add("mes", "更新成功");
            result.Add("pass", true);
            return Content(JsonConvert.SerializeObject(result));
        }

        //删除
        public ActionResult DeleteVersion(int id)
        {
            JObject result = new JObject();
            var info = db.VersionInfo.Find(id);
            db.VersionInfo.Remove(info);
            db.SaveChanges();
            result.Add("mes", "删除成功");
            result.Add("pass", true);
            return Content(JsonConvert.SerializeObject(result));
        }

        //拿到工段列表
        public ActionResult GetSectionList()
        {
            var orders = db.Version_SectionList.OrderByDescending(m => m.Id).Select(m => m.Section).Distinct().ToList();    //增加.Distinct()后会重新按OrderNum升序排序
            JArray result = new JArray();
            foreach (var item in orders)
            {
                JObject List = new JObject();
                List.Add("value", item);

                result.Add(List);
            }
            return Content(JsonConvert.SerializeObject(result));
        }

        //新增工段
        public ActionResult AddSection(string section)
        {
            Version_SectionList sectionList = new Version_SectionList() { Section = section, Createor = ((Users)Session["User"]).UserName, CreateTime = DateTime.Now };
            db.Version_SectionList.Add(sectionList);
            db.SaveChanges();
            JObject result = new JObject();
            result.Add("mes", "新增成功");
            result.Add("pass", true);
            return Content(JsonConvert.SerializeObject(result));
        }
    }
}