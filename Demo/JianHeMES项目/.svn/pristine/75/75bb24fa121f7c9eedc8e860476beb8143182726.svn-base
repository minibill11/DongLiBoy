
@{
    ViewBag.Title = "物料基本信息录入";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*  <summary>
    1.该页面的主要功能是：批量导入物料基本信息；覆盖数据库表中已有的信息
    1.1.将excel表中数据复制，粘贴到页面“表格粘贴处...”,届时表格下方会显示“上传”、“清空”的按钮，通过点击上传按钮即可将数据导入到数据库 
    1.2.可将表中已有信息覆盖（如需将上次导入的数据修改，可从新将数据上传，后端会通过订单号及物料号找出记录，直接覆盖原先上传的数据）
    </summary>*@

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<script src="~/Scripts/axios.min.js"></script>

<style>
    textarea {
        height: 36px;
        width: 150px;
        margin-top: 15px;
    }

    .table .cell,
    .el-table th,
    .el-table td {
        text-align: center;
        padding: 8px;
        font-size: 13px;
    }

    @@media screen and (max-width:850px) {
        .onediv {
            display: inline-flex;
            margin-bottom: 5px
        }
        .bt {
            margin: 0;
            word-break: keep-all;
        }
        .upload-demo {
            display: inline-flex;
            word-break: keep-all
        }
    }

    @@media screen and (min-width:1125px) {
        .onediv {
            display: inline-flex;
            margin-left: 72px !important;
            margin-bottom: 5px
        }
        .bt {
            margin-left: 465px;
            margin-top: 28px;
            margin-bottom: 10px;
        }
        .upload-demo {
            margin-top: 2px;
            margin-left:365px;
        }
        .el-upload-list {
            max-width: 200px;
            margin-top:2px;
        }
        .elbt {
            margin-top: 5px
        }
        .el-upload-list__item:first-child {
            margin-top: 0px;
        }
    }
    .el-upload__input {
        display: none !important;
    }
    
</style>
<div id="app">
    <div style="display:flex">
        <h2 class="bt">@ViewBag.Title</h2>
        <el-upload class="upload-demo"
                   v-bind:on-change="testchange"
                   ref="upload"
                   action="Create"
                   accept=".xlsx,.xls"
                   v-bind:on-preview="handlePreview"
                   v-bind:on-remove="handleRemove"
                   v-bind:file-list="fileList"
                   v-bind:limit="1"
                   v-bind:on-exceed="handleExceed"
                   v-bind:auto-upload="false" style="float:left">
            <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
            <el-button class="elbt" size="small" type="success" v-on:click="submitUpload">上传</el-button>
        </el-upload>
    </div>
    <div class="text-center" >
        <a href="/Packagings/SPC_QueryByOrderNumber"><el-button size="small" class="cret" type="primary" plain>首页</el-button></a>
        <a href="/Packagings/SPC_Display" style="margin-left:2px"><el-button size="small" type="primary" plain>查询基本信息</el-button></a>
        <a href="/Packagings/SPC_MaterialLablePrint" style="margin-left:2px"><el-button size="small" type="primary" plain>打印物料标签</el-button></a>
        <a href="/Packagings/SPC_StockConfirm"><el-button size="small" type="primary" plain style="margin:2px">备料确认</el-button></a>
        <a href="/Packagings/SPC_Packaging" style="margin-left:2px"><el-button size="small" type="primary" plain>打印外箱标签</el-button></a>
        <a href="/Packagings/SPC_Packaging_Modify"><el-button size="small" class="cret" type="primary" plain>修改包装信息</el-button></a>
    </div>
    <div class="onediv">
        <textarea v-model="importIfor" placeholder="表格粘贴处..."></textarea>
        <el-select v-model="orderNum" placeholder="请选择订单号" size="medium" allow-create filterable clearable style="margin-top:15px;margin-left:5px">
            <el-option v-for="item in options"
                       :key="item.value"
                       :value="item.value">
            </el-option>
        </el-select>
        <el-select v-model="materialType" placeholder="请选择类型" size="medium" allow-create filterable clearable style="margin-top:15px;margin-left:5px">
            <el-option v-for="item in materialTypeOptions"
                       :key="item.value"
                       :value="item.value">
            </el-option>
        </el-select>
    </div>
    <div class="text-center">
        <el-aside width="1126px" style="margin: 0 auto;">
            <el-table v-bind:data="tableData" border v-bind:header-cell-style="{background:'#F0F8FF'}" max-height="550px">
                <el-table-column prop="Material_Name" label="物品名称" width="180"></el-table-column>
                <el-table-column prop="MaterialNumber" label="物料编号" width="180"></el-table-column>
                <el-table-column prop="Specification_Description" label="规格描述" width="495"></el-table-column>
                <el-table-column prop="Quantity" label="数量" width="140"></el-table-column>
                <el-table-column prop="option" label="操作" width="130">
                    <template slot-scope="scope">
                        <el-button size="mini" type="danger" v-on:click="remove(scope.$index, scope.row)" style="padding:5px">移除</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </el-aside>
        <div style="text-align: left;margin-left:52px">
            <p v-if="tableData.length>0?'visiUpload = true':''">本次共提交<span style="color:red">{{tableData.length}}</span>条数据！</p>
            <el-button size="mini" type="primary" v-on:click="upload" v-if="tableData.length>0?'visiUpload = true':''">上传</el-button>
            <el-button size="mini" type="primary" v-on:click="empty" v-if="tableData.length>0?'visiUpload = true':''">清空</el-button>
        </div>
    </div>
</div>
<script>
    var app = new Vue({
        el: '#app',
        data: {
            importIfor: '',//粘贴框的值
            tableData: [],//存储导入数据
            total: '',
            visiUpload: false,//控制上传、清空按钮显示
            orderNum: '',//订单号选项框的值
            options: [],//订单号选项框
            materialTypeOptions: [{ label: '选项一', value: '备品' }, { label: '选项一', value: '配件' }, { label: '选项一', value: '备品、配件' }],
            materialType: '',//物品类型
            fileList: [],
            file: null,
        },
        //获取订单号
        mounted() {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.options = res.data;
                console.log(res.data)
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
        },
        //函数方法
        methods: {
            //选文件
            testchange(file, fileList) {                       
                console.log(fileList)
                this.file = file.raw
            },
            //文件上传方法
            submitUpload() {
                if (this.orderNum != '') {
                    let form = new FormData();
                    form.append("fileup", this.file)
                    form.append("ordernum", this.orderNum)
                    //form.get("fileup");
                    axios.post('/Packagings/SPC_Addbasic_information_updatafile', form).then(res => {
                        if (res.data.length <= 0) {
                            this.$message({
                                message: "数据上传成功",
                                type: 'success',
                            });
                            this.orderNum = '';
                        }
                        if (res.data == "未读取到excel文件")
                        {
                            this.$message({
                                message: res.data,
                                type: 'warning',
                            });
                        }
                        console.log(res.data)
                    }).catch(err => {
                        this.$message.error('文件上传失败');
                    })
                }
                else {
                    this.$message({
                        message: "请选择订单号再上传！",
                        duration: 0,
                        showClose: true,
                        type: 'warning',
                    });
                }
            },
            handlePreview(file) {
                console.log(file)
            },
            //移除文件
            handleRemove(file, fileList) {
                //console.log(file, fileList);               
            },
            //限制选择文件个数
            handleExceed(ile, fileList) {
                this.$message.warning(`当前限制选择1个文件,请删除从选`)
            },
            
            //上传表格数据方法
            upload() {
                if (this.tableData.length > 0 && this.orderNum != '' && this.materialType != '') {
                    axios.post("/Packagings/SPC_Addbasic_information", {
                        //表格数据
                        inputList: this.tableData,
                        //订单号
                        orderNumber: this.orderNum,
                        //物品类型
                        spc_Material_Type: this.materialType
                    }).then(res => {
                        if (res.data.length <= 0) {
                            this.$message({
                                message: "数据上传成功",
                                type: 'success',
                            });
                            this.tableData = [];
                            //隐藏上传、清空按钮
                            this.visiUpload = false;
                            //订单号、物料类型框值置空
                            this.orderNum = this.materialType = ''
                        }
                        else if (res.data == "false") {
                            //上传失败，输出提示
                            this.$message({
                                message: "数据上传失败",
                                type: 'warning',
                            });
                        }
                        else {
                            this.$message({
                                message: "物料号为" + res.data + "的保存失败",
                                type: 'warning',
                            });
                        }
                    }).catch(err => {
                        console.log("请求数据失败")
                    })
                } else {
                    this.$message({
                        message: "请选择订单号和类型，在上传",
                        type: 'warning',
                    });
                }
            },
            //清空方法
            empty() {
                //将表中数据清空
                this.tableData = []
            },
            //移除方法
            remove(index, row) {
                //移除表中某一条数据
                for (let i = 0; i < this.tableData.length; i++) {
                    if (this.tableData[i].MaterialNumber == row.MaterialNumber) {
                        this.tableData.splice(i, 1)
                    }
                }
            },
        },
        //监听
        watch: {
            //监听粘贴框的数据
            importIfor(val) {
                if (this.inputInfo == '') { } else {
                    //以换行符分隔字符串
                    var valPaste = val.split("\n")
                    //删除最后一个元素
                    valPaste.pop();
                    var initData = [];
                    valPaste.forEach((item, i) => {
                        //以制表符分隔
                        var items = item.split("\t");
                        //push进initData数组
                        initData.push(items)
                    })                   
                    initData.forEach(item => {
                        //重组数据
                        let obj = {
                            //物料名
                            Material_Name: item[0],
                            //物料号
                            MaterialNumber: item[1],
                            //规格描述
                            Specification_Description: item[2],
                            //数量
                            Quantity: item[3],
                        }
                        //将重组好的对象push进数组
                        this.tableData.push(obj)
                        //粘贴框置空
                        this.importIfor = "";
                        console.log(this.tableData)
                    })
                }
            },
        }
    })
</script>

