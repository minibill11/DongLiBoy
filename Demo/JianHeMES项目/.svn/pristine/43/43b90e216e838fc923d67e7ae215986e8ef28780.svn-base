@{
    ViewBag.Title = "7S日检汇总表";
}
@* css放置处 *@
@section cssStyle {
    <link href="~/Content/vxe.css" rel="stylesheet" />
    <style>
        #app {
            padding: 20px 20px 0 20px;
            font-family: '微软雅黑';
        }

        .title {
            font-weight: 400;
            font-size: 24px;
        }

        .action-box {
            width: 100%;
            padding: 20px 0;
            display: flex;
            align-content: center;
            justify-content: space-between;
        }

        .action-box-left {
            width: 100%;
        }

        .action-box-right {
            display: flex;
            align-items: center;
        }

            .action-box-right .textinput {
                margin-right: 10px;
            }
        /*    表格*/
        .table-height {
            width: 100%;
            height: 70vh;
        }

        .col-blue {
            background: rgba(64, 158, 255, 1) !important;
            color: #fff;
        }
    </style>
}

<div id="app">
    <div class="title">
        7S日检汇总表
    </div>

    @*操作栏*@
    <div class="action-box">
        <div class="action-box-left">
            <el-select v-model="select_department" placeholder="请选择部门">
                <el-option v-for="item in department_options"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-date-picker v-model="select_month"
                            type="month"
                            placeholder="请选择月份">
            </el-date-picker>
            <el-button type="primary" v-on:click="onQueryData">查询</el-button>
        </div>
        <div class="action-box-right">
            <el-button type="primary" plain v-on:click="onToRecordInput">部门录入</el-button>
            <el-button type="success" plain v-on:click="onExport">导出EXCEL表</el-button>
        </div>
    </div>

    @*表格*@
    <div class="table-height">
        <el-table :data="tableData"
                  :header-cell-class-name="headerCellClassName"
                  height="100%">
            <el-table-column type="index" width="50" fixed="left">
            </el-table-column>
            <el-table-column prop="Department"
                             label="部门"
                             width="100" fixed="left">
            </el-table-column>
            <el-table-column prop="Position"
                             label="班组"
                             width="160" fixed="left">
            </el-table-column>
            <el-table-column prop="District"
                             label="区域"
                             width="60" fixed="left">
            </el-table-column>
            <el-table-column :label="check_name">
                <el-table-column v-for="(item, index) in tableColumn"
                                 :key="index+Math.random()"
                                 :prop="item.field"
                                 :label="item.title"
                                 width="50" fixed="center">
                </el-table-column>
            </el-table-column>
            <el-table-column prop="GradeSum"
                             label="扣分合计"
                             width="80" fixed="right">
            </el-table-column>
        </el-table>

    </div>
</div>
@* 分部页放置处 *@
@section renderPage {
}
@* js放置处 *@
@section jsScript {
    <script>
        const app = {
            data: function () {
                return {
                    select_department: '',
                    department_options: [],
                    select_month: '',
                    check_name: '检查扣分',
                    tableColumn: [],
                    allData: [],
                    tableData: [
                    ],
                    count: 0
                }
            },
            created: function () {
                this.onGetDepartmentData();

            },
            mounted: function () {

            },
            watch: {
                select_month(val) {
                    if (val != '') {
                        let month = val.getMonth() + 1;
                        console.log(month)
                        this.check_name = '检查扣分（' + month + '月)'
                    }

                }
            },
            //函数方法
            methods: {

                //获取初始化下拉数据
                onGetDepartmentData() {
                    axios.post('/KPI/GetDepartmentList').then(res => {
                        //console.log(res)
                        this.department_options = res.data;
                    })
                },
                //表头生成
                onCreatTableColumn() {
                    let len;
                    let list = [];
                    for (let i = 0; i < this.allData.length; i++) {
                        len = this.allData[0].PointsDeducted.length;
                    }
                    for (let index = 1; index <= len; index++) {
                        list.push({
                            title: index + '日',
                            field: 'data' + index,
                            width: 50
                        })
                    }
                    this.tableColumn = list;
                },
                //处理数据
                onProcessData() {
                    let len;
                    for (i = 0; i < this.allData.length; i++) {
                        len = this.allData[0].PointsDeducted.length;
                        for (j = 1; j <= len; j++) {
                            var key = "data" + j;
                            this.allData[i][key] = this.allData[i].PointsDeducted[j];
                        }
                    }
                    this.tableData = this.allData;
                },
                //查询数据
                onQueryData() {
                    axios.post('/KPI/Daily_SumQuery', {
                        department: this.select_department,
                        date: this.select_month
                    }).then(res => {
                        //console.log(res.data)
                        this.allData = res.data;
                        //this.$nextTick(() => {
                        this.onCreatTableColumn();
                        //});
                        this.onProcessData();
                        if (this.count == 0) {
                            //console.log(this.count,5555555555)
                            this.onQueryData()
                            this.count += 1;
                        }
                    })

                },
                //高亮表头
                headerCellClassName({ column }) {
                    if (column.property === 'GradeSum') {
                        return 'col-blue'
                    }
                },
                onToRecordInput() { },
                onExport() { }

            }
        };
    </script>
}