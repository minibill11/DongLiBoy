@{
    ViewBag.Title = "后焊工序";
}

@*  <summary>
    1.后焊工序
    </summary>*@

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />@*2.13版本 elementui css文件*@
<link rel="stylesheet/less" type="text/css" href="~/Content/styleFile/moduleManagement/module.less" />

<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            @*标题*@
            <h2 style="margin:5px 0;">@ViewBag.Title</h2>
        </el-header>
        <el-main v-loading="loading">
            @RenderPage("_main.cshtml")
        </el-main>
    </el-container>
</div>

@*  引入组件  *@
@RenderPage("_print.cshtml")
@RenderPage("_barcodeStatusList.cshtml")
@RenderPage("_abnormalList.cshtml")
<script src="~/Content/styleFile/packaging/index.js"></script>@*2.13版本 elementui js文件*@
<script src="~/Content/styleFile/less.min.js"></script>
<script src="~/Content/styleFile/moduleManagement/module.js"></script>
<script>
    //通过mixins将代码注入vue实例
    var app = new Vue({
        el: "#app",
        mixins: [mixin],
        data: {
            barcodeListState: {},
            message: "",
            period: [],
            IsAbnormal: false,
            AbnormalResult: [],
            Remark: "",
            isok: false,
        },
        created: function () {
            this.getOrdernumList(true);
        },
        //页面加载完后执行
        mounted: function () {
            this.$refs.barcodeRef.focus();
        },
        methods: {
            //选择订单号
            selectOrdernum(v) {
                if (v.value != '') {
                    localStorage.setItem('Order', v.value);
                    this.getBarcodeStateList(v.value);
                };
            },
            //确认完成
            postConfirm() {
                this.loading = true;
                let afterWelding;
                if (this.IsAbnormal) {
                    afterWelding = {
                        Department: this.Department,
                        Group: this.Group,
                        Ordernum: this.Ordernum,
                        ModuleBarcode: this.ModuleBarcode,
                        IsAbnormal: this.IsAbnormal,
                        AbnormalResultMessage: this.AbnormalResult,
                        Remark: this.Remark,
                        //IsSampling: false,
                        //SamplingResult: this.SamplingResult,
                        //SamplingResultMessage: this.SamplingResultMessage
                    };
                } else {
                    afterWelding = {
                        Department: this.Department,
                        Group: this.Group,
                        Ordernum: this.Ordernum,
                        ModuleBarcode: this.ModuleBarcode,
                        IsAbnormal: this.IsAbnormal,
                        Remark: this.Remark,
                    };
                };
                axios.post('/ModuleManagement/AfterWeldingCreate', {
                    afterWelding: afterWelding
                }).then(res => {
                    if (res.data.result == true) {
                        this.printClick(true);
                        this.getBarcodeStateList(this.Ordernum);
                    } else {
                        if (res.data.mes == "该条码已有后焊记录") {
                            this.$message.info(res.data.mes + "，可重新打印");
                            this.disabledState = true;
                            this.isok = false;
                        } else {
                            this.$alert(res.data.mes, '未完成', {
                                confirmButtonText: '确定',
                                type: 'error'
                            });
                        };
                        this.loading = false;
                    };
                }).catch(err => {
                    console.warn(err);
                    this.loading = false;
                });
            },
            //扫码
            scanKeyup(v) {
                if (v.target.value == "") {
                    return;
                };
                this.loading = true;
                axios.post('/ModuleManagement/AfterWeldingCheckBarcode', {
                    orderNum: this.Ordernum,
                    barcode: v.target.value
                }).then(res => {
                    console.log(res)
                    if (res.data.result == true) {
                        this.isok = true;
                        this.period = res.data.period;
                    } else {
                        this.message = res.data.message;
                    };
                    this.loading = false;
                }).catch(err => {
                    console.warn(err);
                    this.loading = false;
                });
            },
            //打印
            printClick(fromresult) {
                this.loading = true;
                let info = this.printInfo;
                info['barcode'] = this.ModuleBarcode;
                info['modulenum'] = [this.ModuleBarcode];
                axios.post('/ModuleManagement/ModuleBarcodePrinting', info).then(res => {
                    if (res.data == '打印成功！') {
                        this.$message.success(res.data);
                    } else {
                        this.$message.warning(res.data);
                    };
                    if (fromresult) {
                        this.reset(true);
                        this.ModuleBarcode = "";
                    };
                    this.loading = false;
                    this.$refs.barcodeRef.focus();
                }).catch(err => {
                    console.warn(err);
                    this.loading = false;
                });
            },
            //获取条码状态清单
            getBarcodeStateList(v) {
                axios.post('/ModuleManagement/Checklist', {
                    orderNum: v,
                    statue: '后焊'
                }).then(res => {
                    this.barcodeListState = res.data;
                }).catch(err => {
                    console.warn(err);
                });
            },
            //重置信息
            reset(abnormalhave) {
                this.disabledState = false;
                this.message = "";
                this.period = [];
                this.isok = false;
                if (abnormalhave) {
                    this.IsAbnormal = false;
                    this.Remark = "";
                };
            }
        },
        watch: {
            ModuleBarcode(v) {
                this.reset(false);
            },
            Ordernum(v) {
                this.reset(true);
            }
        },
    });
</script>