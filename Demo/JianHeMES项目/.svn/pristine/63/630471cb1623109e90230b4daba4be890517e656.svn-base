@model IEnumerable<JianHeMES.Models.EquipmentBasicInfo>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<style>
    #app {
        width: 100%;
        height: 550px;
        margin: 0 auto;
        padding: 25px;
      }

      .line {
        width: 100%;
        display: flex;
        justify-content: space-between;
        margin-top: 25px;
      }

      .mechine {
        width: 92px;
        height: 40px;
        background-color: #ddd;
        border-radius: 4px;
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        box-shadow: 0 2px 4px rgba(0, 0, 0, .12);
      }

      .mechinetop {
        width: 92px;
        height: 20px;
        border-radius: 4px;
        border-bottom: 1px solid black;
        box-shadow: 0 2px 4px rgba(0, 0, 0, .12);
      }

      .mechinbottom {
        width: 92px;
        height: 20px;
        border-radius: 4px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, .12);
      }

      .mechinetop button,
      .mechinbottom button {
        background-color: #409eff;
        border: none;
        padding: 0 4px;
        border-radius: 5px;
        height:18px;
      }

      /* 隐藏小图标样式 */

      .mechine {
        position: relative;
        padding: 0px;
      }

      .mechine:hover .left {
        display: inline-block;
      }

      .mechine:hover .rigth {
        display: inline-block;
      }

      .mechine:hover .left {
        display: inline-block;
      }

      .mechine:hover .rigth {
        display: inline-block;
      }

      .left {
        position: absolute;
        left: -15px;
        top: 31%;
        display: none;
        transition: all linear .2s;
      }

      .left:hover {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        background-color: #ccc;
      }

      .rigth {
        position: absolute;
        right: -15px;
        top: 31%;
        display: none;
        transition: all linear .2s;
      }

      .rigth:hover {
        background-color: #ccc;
        width: 15px;
        height: 15px;
        border-radius: 50%;
      }

      .left {
        position: absolute;
        left: -10px;
        z-index: 66;
      }

      .rigth {
        position: absolute;
        right: -10px;
        z-index: 66;
      }

      .el-collapse-item__wrap {
        padding: 0 25px;
      }

      .selectContainer{
          text-align:center;
          margin:15px auto;
      }

      .el-input{
          width:300px;
      }
</style>

<h2 style="text-align:center;margin-top:15px;margin-bottom:0;font-size:25px;">设备信息</h2>


<div id="app">
    <div class="selectContainer">
        <el-select v-model="depars" v-on:change="selectChanged" multiple multiple-limit="3" placeholder="请选择">
            <el-option v-for="item in deparments"
                       v-bind:key="item.value"
                       size="mini"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
    </div>
    <el-collapse accordion v-for="(items,indexs) in datas">
        <el-collapse-item>
            <template slot="title">
                产线 {{indexs+1}}: {{items.productLineStatus}}
                <i style="color: yellowgreen;"
                   class="header-icon el-icon-success"></i>
            </template>
            <div class="line">
                <div v-for="(item,index) in items.mechines" class="mechine" v-bind:class="`mechine${index}`">
                    <div class="mechinetop">
                        <span style="font-size: 11px">{{index+1}}号</span>
                        <button v-on:click="showDetails(index,indexs)">详细信息</button>
                    </div>
                    <div class="mechinbottom">
                        <button v-on:click="changeStatus(index,indexs)">{{item.status}}</button>
                    </div>
                    <i class="el-icon-arrow-left left" v-on:click="addInLeft(item,index,indexs)"></i>
                    <i class="el-icon-arrow-right rigth" v-on:click="addInRight(item,index,indexs)"></i>
                </div>
            </div>
        </el-collapse-item>
    </el-collapse>
    <el-dialog title="提示" v-bind:visible.sync="dialogVisible" width="30%" before-close="handleClose">
        <!-- <span>这是一段信息</span> -->
        <el-form label-width="80px" model="formLabelAlign">
            <el-form-item label="产线">
                <el-input v-model="formLabelAlign.linenum"></el-input>
            </el-form-item>
            <el-form-item label="机器名称">
                <el-input v-model="formLabelAlign.mechineName"></el-input>
            </el-form-item>
            <el-form-item label="状态">
                <el-input v-model="formLabelAlign.mechineStatus"></el-input>
            </el-form-item>
        </el-form>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogVisible = false">取 消</el-button>
            <el-button type="primary" v-on:click="saveAdd">确 定</el-button>
        </span>
    </el-dialog>

</div>


<script>
    let vm = new Vue({
        el: "#app",
        data: {
            deparments: [],
            depars:null,
            mechineNum: null,
            formLabelAlign: {
                linenum: null,
                mechineName: null,
                mechineStatus: null
            },
            dialogVisible: false,
            datas: [{
                'linenum': 1,
                'productLineStatus': '保养',
                'mechines': [{
                    'mechineindex': 1,
                    'status': '运行'
                }, {
                    'mechineindex': 2,
                    'status': '维修'
                }, {
                    'mechineindex': 3,
                    'status': '运行'
                }, {
                    'mechineindex': 4,
                    'status': '运行'
                }, {
                    'mechineindex': 5,
                    'status': '运行'
                }, {
                    'mechineindex': 6,
                    'status': '维修'
                }, {
                    'mechineindex': 7,
                    'status': '运行'
                }, {
                    'mechineindex': 8,
                    'status': '运行'
                }]
            }, {
                'linenum': 2,
                'productLineStatus': '运行',
                'mechines': [{
                    'mechineindex': 1,
                    'status': '运行'
                }, {
                    'mechineindex': 2,
                    'status': '维修'
                }, {
                    'mechineindex': 3,
                    'status': '运行'
                }, {
                    'mechineindex': 4,
                    'status': '运行'
                }, {
                    'mechineindex': 5,
                    'status': '运行'
                }]
            }, {
                'linenum': 3,
                'productLineStatus': '维修',
                'mechines': [{
                    'mechineindex': 1,
                    'status': '运行'
                }, {
                    'mechineindex': 2,
                    'status': '运行'
                }, {
                    'mechineindex': 3,
                    'status': '维修'
                }, {
                    'mechineindex': 4,
                    'status': '运行'
                }, {
                    'mechineindex': 5,
                    'status': '运行'
                }]
            }]
        },
        mounted(){
            this.gstSelectVal();
        },
        methods: {
            gstSelectVal() {
                var obj = new Date();
                axios.post("/Common/comany", { exce: obj }).then(res=> {
                    res.data.forEach(item=> {
                        let obj = { label: item, value: item };
                        this.deparments.push(obj);
                    });
                }).catch(err=> {
                    console.log(err.data)
                })
            },
            selectChanged(val){
                console.log(val)
                if (val.length != 0) {
                    axios.post("/Equipment/Index2", { departmentlist:val}).then(res=> {
                        console.log(res.data)
                    }).catch(err=> {

                    })
                }
            },
            addInLeft(item, index, linenum) {
                //alert(`点击了第${linenum+1}产线的第${index + 1}台机器,表示想在本台机器前面添加一台新机器`)
                this.dialogVisible = true
                this.formLabelAlign.mechineNum = index
                this.formLabelAlign.linenum = linenum + 1
            },
            addInRight(item, index, linenum) {
                alert(`点击了第${linenum + 1}产线的第${index + 1}台机器,表示想在本台机器后面添加一台新机器`)
            },
            showDetails(mechineIndex, lineIndex) {
                alert(`点击了第${lineIndex + 1}产线的第${mechineIndex + 1}台机器,表示想查看响应的详细数据`)
            },
            changeStatus(mechineIndex, lineIndex) {
                alert(`点击了第${lineIndex + 1}产线的第${mechineIndex + 1}台机器,表示想改变这台机器的状态`)
            },
            handleClose(done) {
                this.$confirm('确认关闭？')
                  .then(_ => {
                      done();
                  })
                  .catch(_ => { });
            },
            saveAdd() {
                this.datas.forEach((item) => {
                    if (this.formLabelAlign.linenum == item.linenum) {
                        let obj = {
                            'mechineindex': this.formLabelAlign.mechineNum - 1,
                            'status': this.formLabelAlign.mechineStatus
                        }
                        item.mechines.splice(this.formLabelAlign.mechineNum, 0, obj)
                    }
                    console.log(this.datas);

                });

                this.dialogVisible = false
            }
        },
    })


</script>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SerialNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EquipmentNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AssetNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EquipmentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModelSpecification)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InfoPlate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ManufacturingNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActionDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DepreciableLife)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserDepartment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StoragePlace)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkShop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LineNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Section)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FunctionDiscription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Creator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Modifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifyTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Remark)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.SerialNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EquipmentNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssetNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EquipmentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Brand)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModelSpecification)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InfoPlate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ManufacturingNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActionDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DepreciableLife)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserDepartment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StoragePlace)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WorkShop)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LineNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Section)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FunctionDiscription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Creator)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Modifier)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifyTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Remark)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
