@model JianHeMES.Models.IQCReport
@{
    ViewBag.Title = "编辑IQC报告";
}
@*<script src="~/Scripts/jquery-1.11.3.js"></script>*@
<style>
    tr {
        height: 22px;
        font-size: 14px;
        text-align: center;
    }

    input {
        max-width: none;
    }

    td {
        border: 1px solid black;
    }

    #C3, #C4, #C5, #C6, #C7, #C8,
    #D3, #D4, #D5, #D6, #D7, #D8,
    #E3, #E4, #E5, #E6, #E7, #E8,
    #F3, #F4, #F5, #F6, #F7, #F8 {
        width: 65%;
        height: 21px;
        float: right;
    }



    .Dthree input {
        width: 33.3%;
        float: left;
    }

    label {
        font-weight: normal;
    }

    #RoHS_REACH, #SamplingPlan, #NGD, #NGHandle, #Creator, #CreatedDate, #ApprovePass, #AssessorPass,#EquipmentNum,#SRJson,#SGJson,#SBJson,#S11,#S21,#S31 {
        display: none;
    }
    textarea {
        border: none;
        width: 100%;
        max-width: initial;
        resize: none;
        padding: 3px 6px;
    }

        textarea.form-control {
            line-height: 14px;
            font-size: 14px;
            padding: 3px 6px;
        }


    .sr input,.sg input,.sb input,.s1 input,.s2 input,.s3 input {
        width: 10%;
        float: left;
    }
    .sr input,.sg input,.sb input{
        padding:0;
    }
    #EquipmentNumShow{
        text-align:left;
        padding:0;
        line-height:13px;
        font-size:13px;
        color:#555;
    }
    #C2,#D2,#E2,#F2,#P0,#R0,#AM0,#P1,#P2,#P3,#AM1,#AM2,#AM3,#AM4,#E1,#F1,input[class*=sr],input[class*=sg],input[class*=sb],#S1,#S2,#S3{
        padding:0 5px;
    }
    #C1,#D1,#ModelNumber,#R1,#R2,#R3,#BatchNum{
        padding:0;
        font-size:13px;
    }
    #SR,#SG,#SB{
        text-align:right;
    }
    .s3 input{
        width:33.33%;
    }
</style>

<h3>@ViewBag.Title</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        <table id="tableApp" style="margin:0 auto;border-collapse:collapse;">
            @*<caption style="text-align: left">惠州市健和光电有限公司</caption>*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <colgroup>
                <col width="100 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="80 ">
                <col width="160 ">
            </colgroup>
            <thead>
                <tr>
                    <td colspan="8" style="border-left: none;border-right: none;border-bottom:none"><b style="font-size:28px">进料检验报告</b><b>--通用</b></td>
                </tr>
                <tr>
                    <td colspan="1" style="border:none;">物料编号：</td>
                    <td colspan="3" style="border:none;">
                        @Html.TextAreaFor(model => model.Material_SN, new { @class = "form-control", })
                        @Html.ValidationMessageFor(model => model.Material_SN, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" style="border:none;text-align:right">订单号：</td>
                    <td colspan="2" style="border:none;text-align:right ">
                        @Html.TextAreaFor(model => model.OrderNumber, new { @class = "form-control", placeholder = "请输入" })
                        @Html.ValidationMessageFor(model => model.OrderNumber, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="height:60px">
                    <td colspan="4" style="border:none" class="form-group">
                        <span style="float: left">
                            物料需要符合RoHS、REACH要求：
                            <label><input type="checkbox" name="RoHS_REACHcheck" value="是">是&nbsp;</label>
                            <label><input type="checkbox" name="RoHS_REACHcheck" value="否">否</label>
                        </span>
                        @Html.EditorFor(model => model.RoHS_REACH)
                        @Html.ValidationMessageFor(model => model.RoHS_REACH, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" style="border:none;text-align:right ">测试设备编号：</td>
                    <td colspan="2" style="border:none;">
                        <div id="EquipmentNumShow">请选择物料</div>
                        @Html.EditorFor(model => model.EquipmentNum, new { htmlAttributes = new { @class = "form-control", placeholder = "请选择物料", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.EquipmentNum, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>供应商</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.Provider, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
                    </td>
                    <td>物料名称</td>
                    <td colspan="2" class="form-group">
                        @*@Html.EditorFor(model => model.MaterialName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.MaterialName,
           ViewBag.Material as IEnumerable<SelectListItem>, new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.MaterialName, "", new { @class = "text-danger" })
                    </td>
                    <td>型号</td>
                    <td colspan="1" class="form-group">
                        @Html.TextAreaFor(model => model.ModelNumber,new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.ModelNumber, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>规格</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.Specification, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Specification, "", new { @class = "text-danger" })
                    </td>
                    <td>来料数量</td>
                    <td colspan="2" class="form-group">
                        @Html.EditorFor(model => model.MaterialQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialQuantity, "", new { @class = "text-danger" })
                    </td>
                    <td>来料日期</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.IncomingDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IncomingDate, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>请购单号</td>
                    <td colspan="2" class="form-group">
                        @Html.TextAreaFor(model => model.ApplyPurchaseOrderNum,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.ApplyPurchaseOrderNum, "", new { @class = "text-danger" })
                    </td>
                    <td>批号</td>
                    <td colspan="2" class="form-group">
                        @Html.TextAreaFor(model => model.BatchNum,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.BatchNum, "", new { @class = "text-danger" })
                    </td>
                    <td>检验日期</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.InspectionDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.InspectionDate, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="height: 40px">
                    <td>抽样方案</td>
                    <td colspan="4" class="form-group">
                        <label><input type="checkbox" name="SamplingPlancheck" value="全检">全检 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="加严">加严 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="正常">正常 &nbsp;</label>
                        <label><input type="checkbox" name="SamplingPlancheck" value="放宽">放宽</label>
                        @Html.EditorFor(model => model.SamplingPlan)
                        @Html.ValidationMessageFor(model => model.SamplingPlan, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2">承认书或图纸号/版本</td>
                    <td colspan="1" class="form-group">
                        @Html.EditorFor(model => model.MaterialVersion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaterialVersion, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">检验内容</td>
                    <td rowspan="2">检验水平</td>
                    <td rowspan="2">抽样数量</td>
                    <td colspan="3">判定标准</td>
                    <td colspan="2" rowspan="2">检验判定</td>
                </tr>
                <tr>
                    <td>严重缺陷<br>AQL：0</td>
                    <td>一般缺陷<br>AQL：0.4</td>
                    <td>轻微缺陷<br>AQL：0.65</td>
                </tr>
                <tr>
                    <td rowspan="2">标识</td>
                    <td rowspan="2" class="form-group">
                        @Html.DropDownListFor(model => model.C1,
           ViewBag.Level as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.C1, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.C1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.C2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.C7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.C9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.C8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.C8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">包装、外观</td>
                    <td rowspan="2" class="form-group">
                        @Html.DropDownListFor(model => model.D1,
           ViewBag.Level as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.D1, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.D1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.D2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.D7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.D9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.D8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.D8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">尺寸</td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.E7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.E9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.E6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.E8, new { htmlAttributes = new { @class = "form-control " } })
                        @Html.ValidationMessageFor(model => model.E8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td rowspan="2">性能/参数</td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F1, "", new { @class = "text-danger" })
                    </td>
                    <td rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F2, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F3, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F5, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F5, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">AC：</span>
                        @Html.EditorFor(model => model.F7, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F7, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="2" rowspan="2" class="form-group">
                        @Html.EditorFor(model => model.F9, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F9, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F4, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F6, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F6, "", new { @class = "text-danger" })
                    </td>
                    <td class="form-group">
                        <span style="width:30%;float:left">Re：</span>
                        @Html.EditorFor(model => model.F8, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.F8, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>不良项目<br>(检测项目)</td>
                    <td>规格要求</td>
                    <td colspan="6">检验结果描述</td>
                </tr>
                <tr class="totalss" style="display:none;" >
                    
                    <td class="form-group">
                       <span class="totals">@Html.EditorFor(model => model.S1, new { htmlAttributes = new { @class = "form-control" } })</span>
                        @Html.ValidationMessageFor(model => model.S1, "", new { @class = "text-danger" })
                        @Html.EditorFor(model => model.S11, new { htmlAttributes = new { @class = "form-control" } })
                    </td>
                    
                </tr>


                <tr class="s0show forSizeClone" style="display:none;">
                    <td>
                        <input class="sizes sizeVal" type="text" />
                    </td>
                    <td class="form-group">
                        <input class="sizes sizeVal" type="text" />
                    </td>
                    <td colspan="6" class="s2">
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                        <input class="sizes sizeVal" type="text" />
                    </td>
                </tr>
                <tr class="forsuplierclone">
                    <td>
                        <input class="sizes suplierVal" type="text" />
                    </td>
                    <td class="form-group">
                        <input class="sizes suplierVal" type="text" />
                    </td>
                    <td colspan="6" class="s3">
                        <input class="sizes suplierVal" type="text" />
                        <input class="sizes suplierVal" type="text" />
                        <input class="sizes suplierVal" type="text" />
                    </td>
                </tr>
                <tr class="s0show forOursdandarClone" style="display:none;">
                    <td>
                        <input class="sizes ourVal" type="text" />
                    </td>
                    <td class="form-group">
                        <input class="sizes ourVal" type="text" />
                    </td>
                    <td colspan="6" class="s3">
                        <input class="sizes ourVal" type="text" />
                        <input class="sizes ourVal" type="text" />
                        <input class="sizes ourVal" type="text" />
                    </td>
                </tr>
                <tr class="forActulValueClone">
                    <td>
                        <input class="sizes actaulVal" type="text" />
                    </td>
                    <td class="form-group">
                        <input class="sizes actaulVal" type="text" />
                    </td>
                    <td colspan="6" class="s3">
                        <input class="sizes actaulVal" type="text" />
                        <input class="sizes actaulVal" type="text" />
                        <input class="sizes actaulVal" type="text" />
                    </td>
                </tr>
                

                @*我司测试条件*@
                <tr class="target">
                    <td></td>
                    <td></td>
                    <td colspan="6" class="form-group">
                        @Html.EditorFor(model => model.AM, new { htmlAttributes = new { @class = "form-control", @style = "text-align:center" } })
                        @Html.ValidationMessageFor(model => model.AM, "", new { @class = "text-danger" })
                    </td>
                </tr>


                <tr class="sRshow target2">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SR, new { htmlAttributes = new { @class = "form-control"} })
                        @Html.ValidationMessageFor(model => model.SR, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sr" type="text">
                        @Html.TextAreaFor(model => model.SRJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SRJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sr" type="text">
                    </td>
                    <td colspan="6" class="sr">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td></td>
                    <td></td>
                    <td colspan="6"></td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SG, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SG, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sg" type="text">
                        @Html.TextAreaFor(model => model.SGJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SGJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sg" type="text">
                    </td>
                    <td colspan="6" class="sg">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td></td>
                    <td></td>
                    <td colspan="6"></td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group">
                        @Html.EditorFor(model => model.SB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SB, "", new { @class = "text-danger" })
                    </td>
                    <td>
                        <input class="form-control sb" type="text">
                        @Html.TextAreaFor(model => model.SBJson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SBJson, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td class="form-group"></td>
                    <td>
                        <input class="form-control sb" type="text">
                    </td>
                    <td colspan="6" class="sb">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                        <input class="form-control" type="text">
                    </td>
                </tr>
                <tr class="sRshow">
                    <td></td>
                    <td></td>
                    <td colspan="6"></td>
                </tr>
                <tr>
                    <td rowspan="3">总不良数</td>
                    <td>严重缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG1, "", new { @class = "text-danger" })
                    </td>
                    <td colspan="5" rowspan="3" class="form-group">
                        最终判定：
                        <label>&nbsp;<input type="checkbox" name="NGDcheck" value="允收">允收（AC） </label>
                        <label>&nbsp;<input type="checkbox" name="NGDcheck" value="拒收">拒收（Re）</label>
                        @Html.EditorFor(model => model.NGD)
                        @Html.ValidationMessageFor(model => model.NGD, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>一般缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG2, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>轻微缺陷</td>
                    <td class="form-group">
                        @Html.EditorFor(model => model.NG3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NG3, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td colspan="8" class="form-group">
                        不合格批处理：
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="退货">退货； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="挑选">挑选； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="特采">特采； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="维修">维修； </label>
                        <label>&nbsp;&nbsp;<input type="checkbox" name="NGHandlecheck" value="其他">其他； </label>
                        @Html.EditorFor(model => model.NGHandle)
                        @Html.ValidationMessageFor(model => model.NGHandle, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr style="text-align: left;height: 40px">
                    <td style="text-align:center;border-right: none">备注：</td>
                    <td colspan="7" style="border-left:none" class="form-group">
                        @Html.TextAreaFor(model => model.ReportRemark, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ReportRemark, "", new { @class = "text-danger" })
                    </td>
                </tr>

                @Html.EditorFor(model => model.Creator, new { @class = "form-control" })
                @Html.EditorFor(model => model.CreatedDate, new { @class = "form-control" })

                <tr style="text-align: left;">
                    <td style="text-align:center;border-right: none">批准：</td>
                    <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                        @Html.EditorFor(model => model.ApprovePass)
                        <select class="list-box tri-state" id="ApprovePassSelect" disabled="disabled">
                            <option value="">未批准</option>
                            <option value="true">通过</option>
                            <option value="false">未通过</option>
                        </select>
                        @Html.DisplayFor(model => model.Approve)
                    </td>
                    <td style="text-align:center;border-left: none;border-right: none">审核：</td>
                    <td colspan="2" style="border-left: none;border-right: none" class="form-group">
                        @Html.EditorFor(model => model.AssessorPass)
                        <select class="list-box tri-state" id="AssessorPassSelect" disabled="disabled">
                            <option value="">未审核</option>
                            <option value="true">通过</option>
                            <option value="false">未通过</option>
                        </select>
                        @Html.DisplayFor(model => model.Assessor)
                    </td>
                    <td style="text-align:center;border-left: none;border-right: none">检验：</td>
                    <td style="border-left: none" class="form-group">
                        @Html.EditorFor(model => model.Inspector, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Inspector, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </tbody>

            <tfoot>
                <tr>
                    <td style="border:none">
                    </td>
                    <td colspan="7" style="text-align:right;border: none">表单编号：QD-007-B</td>
                </tr>
                <tr>
                    <td colspan="8" style="border: none;text-align:left">
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="button" value="保存" class="btn btn-default forsubmit" />
                                <input type="submit" class="finalsubmit" value="提交" style="display:none;" />
                                <span class="text-success text-center btn btn-default">
                                    @Html.ActionLink("返回IQC首页", "Index")
                                </span>
                            </div>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
}

<script>
    $(document).ready(function () {
        $("#EquipmentNumShow").html($("#EquipmentNum").val().replace(",", "<br>"))

        var s1 = $(".s1 input");
        var s2 = $(".s2 input");
        var s3 = $(".s3 input");
        var s1json = new Array(s1.length);
        var s2json = new Array(s2.length);
        var s3json = new Array(s3.length);
        s1.keyup(function () {
            $(this).val($(this).val().replace(/[^\d.]/g, ''))
            s1.each(function (i) {
                s1json[i] = "\"" + $(this).val() + "\"";
            })
            $("#S11").val("{\"S1\"" + ":" + "[" + s1json + "]}");
            //console.log($("#S11").val())
            //console.log(JSON.parse($("#S11").val()))
        });
        s2.keyup(function () {
            $(this).val($(this).val().replace(/[^\d.]/g, ''))
            s2.each(function (i) {
                s2json[i] = "\"" + $(this).val() + "\"";
            })
            $("#S21").val("{\"S2\"" + ":" + "[" + s2json + "]}");
            //console.log($("#S21").val())
        });
        s3.keyup(function () {
            $(this).val($(this).val().replace(/[^\d.]/g, ''))
            s3.each(function (i) {
                s3json[i] = "\"" + $(this).val() + "\"";
            })
            $("#S31").val("{\"S3\"" + ":" + "[" + s3json + "]}");
            //console.log($("#S31").val())
        });



        var sR = $("input.sr,.sr input");
        var sG = $("input.sg,.sg input");
        var sB = $("input.sb,.sb input");
        var srjson = new Array(sR.length);
        var sgjson = new Array(sG.length);
        var sbjson = new Array(sB.length);
        sR.keyup(function () {
            //$(this).val($(this).val().replace(/[^\d.]/g, ''))
            sR.each(function (i) {
                if (i % 11 == 0) {
                    srjson[i] = "[\"" + $(this).val() + "\"";
                } else {
                    if ((i + 1) % 11 == 0) {
                        srjson[i] = "\"" + $(this).val() + "\"]";
                    } else {
                        srjson[i] = "\"" + $(this).val() + "\"";
                    }
                }
            })
            //$("#SRJson").val("{\"" + $("#SR").val() + "\"" + ":" + "[" + srjson + "]}");
            $("#SRJson").val("{\"SR\"" + ":" + "[" + srjson + "]}");
            console.log($("#SRJson").val())
        });
        sG.keyup(function () {
            //$(this).val($(this).val().replace(/[^\d.]/g, ''))
            sG.each(function (i) {
                if (i % 11 == 0) {
                    sgjson[i] = "[\"" + $(this).val() + "\"";
                } else {
                    if ((i + 1) % 11 == 0) {
                        sgjson[i] = "\"" + $(this).val() + "\"]";
                    } else {
                        sgjson[i] = "\"" + $(this).val() + "\"";
                    }
                }
            })
            $("#SGJson").val("{\"SG\"" + ":" + "[" + sgjson + "]}");
            console.log($("#SGJson").val())
        });
        sB.keyup(function () {
            //$(this).val($(this).val().replace(/[^\d.]/g, ''))
            sB.each(function (i) {
                if (i % 11 == 0) {
                    sbjson[i] = "[\"" + $(this).val() + "\"";
                } else {
                    if ((i + 1) % 11 == 0) {
                        sbjson[i] = "\"" + $(this).val() + "\"]";
                    } else {
                        sbjson[i] = "\"" + $(this).val() + "\"";
                    }
                }
            })
            $("#SBJson").val("{\"SB\"" + ":" + "[" + sbjson + "]}");
            console.log($("#SBJson").val())
        });

        function isJsonFormat(str) {
            try {
                $.parseJSON(str);
            } catch (e) {
                return false;
            }
            return true;
        }
        if (isJsonFormat($("#S11").val())) {
            var s1JSON = JSON.parse($("#S11").val())
            //console.log(s1JSON)
            s1.each(function (i) {
                try {
                    $(this).val(s1JSON.S1[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#S21").val())) {
            var s2JSON = JSON.parse($("#S21").val())
            //console.log(s2JSON)
            s2.each(function (i) {
                try {
                    $(this).val(s2JSON.S2[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#S31").val())) {
            var s3JSON = JSON.parse($("#S31").val())
            //console.log(s3JSON)
            s3.each(function (i) {
                try {
                    $(this).val(s3JSON.S3[i]);
                } catch (e) {
                    return;
                }
            })
        } else {
            //alert("SRJson格式错啦")
        }


        if (isJsonFormat($("#SRJson").val())) {
            var rJSON = JSON.parse($("#SRJson").val())
            //console.log(rgbJSON)
            for (var i = 0; i < sR.length / 11; i++) {
                //console.log(i)
                sR.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).val(rJSON.SR[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                    //console.log(index + ":" + index / 11);
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#SGJson").val())) {
            var gJSON = JSON.parse($("#SGJson").val())
            for (var i = 0; i < sG.length / 11; i++) {
                //console.log(i)
                sG.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).val(gJSON.SG[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }
        if (isJsonFormat($("#SBJson").val())) {
            var bJSON = JSON.parse($("#SBJson").val())
            for (var i = 0; i < sB.length / 11; i++) {
                //console.log(i)
                sB.each(function (index) {
                    if (index / 11 >= i && index / 11 < i + 1) {
                        try {
                            $(this).val(bJSON.SB[i][index - 11 * i]);
                        } catch (e) {
                            return;
                        }
                    } else {
                        return;
                    }
                });
            }

        } else {
            //alert("SRJson格式错啦")
        }
        $("#MaterialName").attr('readonly',true)
        $("#MaterialName").change(function () {
            if ($("#MaterialName").val() == "三合一贴片灯" || $("#MaterialName").val() == "四合一贴片灯") {
                $("#EquipmentNum").val("QD050023 高精度快速光谱辐射计,QD050031 可编程LED测试电源");
                $("#EquipmentNumShow").html("① QD050023 高精度快速光谱辐射计" + "<br>" + "② QD050031 可编程LED测试电源");
                $(".s0show").show(); $(".sRshow").hide();
            } else if ($("#MaterialName").val() == "LED插件灯") {
                $("#EquipmentNum").val("QD050005 LED光强测试仪,QD050002 LED光色电综合测量系统,QD050003 积分球,QD050036 LED光强分布测试仪");
                $("#EquipmentNumShow").html("① QD050005 LED光强测试仪" + "<br>" + "② QD050002 LED光色电综合测量系统" + "<br>" + "③ QD050003 积分球" + "<br>" + "④ QD050036 LED光强分布测试仪");
                $(".s0show").hide(); $(".sRshow").show();
            } else {
                $("#EquipmentNum").val("");
                $("#EquipmentNumShow").html("");
                $(".s0show").hide(); $(".sRshow").hide();
            }
        });

        if ($("#MaterialName").val() == "三合一贴片灯" || $("#MaterialName").val() == "四合一贴片灯") {
            $("#EquipmentNum").val("QD050023 高精度快速光谱辐射计,QD050031 可编程LED测试电源");
            $("#EquipmentNumShow").html("① QD050023 高精度快速光谱辐射计" + "<br>" + "② QD050031 可编程LED测试电源");
            $(".s0show").show();$(".sRshow").hide();
        } else if ($("#MaterialName").val() == "LED插件灯") {
            $("#EquipmentNum").val("QD050005 LED光强测试仪,QD050002 LED光色电综合测量系统,QD050003 积分球,QD050036 LED光强分布测试仪");
            $("#EquipmentNumShow").html("① QD050005 LED光强测试仪" + "<br>" + "② QD050002 LED光色电综合测量系统" + "<br>" + "③ QD050003 积分球" + "<br>" + "④ QD050036 LED光强分布测试仪");
            $(".s0show").hide();$(".sRshow").show();
        } else {
            $("#EquipmentNum").val("");
            $("#EquipmentNumShow").html("");
            $(".s0show").hide();$(".sRshow").hide();
        }

        $("#ApprovePassSelect").change(function () {
            $("#ApprovePass").val($("#ApprovePassSelect").val());
        })
        if ($("#ApprovePass").val() == "true") {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        } else if ($("#ApprovePass").val() == "false") {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        } else {
            $("#ApprovePassSelect").val($("#ApprovePass").val());
        }
        $("#AssessorPassSelect").change(function () {
            $("#AssessorPass").val($("#AssessorPassSelect").val());
        })
        if ($("#AssessorPass").val() == "true") {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        } else if ($("#AssessorPass").val() == "false") {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        } else {
            $("#AssessorPassSelect").val($("#AssessorPass").val());
        }

        if ($("#RoHS_REACH").val() == "true") {
            $("input[name=RoHS_REACHcheck]:eq(0)").attr("checked", true)
        } else {
            $("input[name=RoHS_REACHcheck]:eq(1)").attr("checked", true)
        };
        if ($("#SamplingPlan").val() == "全检") {
            $("input[name=SamplingPlancheck]:eq(0)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "加严") {
            $("input[name=SamplingPlancheck]:eq(1)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "正常") {
            $("input[name=SamplingPlancheck]:eq(2)").attr("checked", true)
        } else if ($("#SamplingPlan").val() == "放宽") {
            $("input[name=SamplingPlancheck]:eq(3)").attr("checked", true)
        };
        if ($("#NGD").val() == "true") {
            $("input[name=NGDcheck]:eq(0)").attr("checked", true)
        } else {
            $("input[name=NGDcheck]:eq(1)").attr("checked", true)
        };
        if ($("#NGHandle").val() == "退货") {
            $("input[name=NGHandlecheck]:eq(0)").attr("checked", true)
        } else if ($("#NGHandle").val() == "挑选") {
            $("input[name=NGHandlecheck]:eq(1)").attr("checked", true)
        } else if ($("#NGHandle").val() == "特采") {
            $("input[name=NGHandlecheck]:eq(2)").attr("checked", true)
        } else if ($("#NGHandle").val() == "维修") {
            $("input[name=NGHandlecheck]:eq(3)").attr("checked", true)
        } else if ($("#NGHandle").val() == "其他") {
            $("input[name=NGHandlecheck]:eq(4)").attr("checked", true)
        }
    });

    $('input[name=RoHS_REACHcheck]').bind('click', function () {
        $('input[name=RoHS_REACHcheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            if ($(this).val() == '是') {
                $("#RoHS_REACH").val("true");
            } else {
                $("#RoHS_REACH").val("false");
            }
        } else {
            $("#RoHS_REACH").val("");
        }
    });
    $('input[name=SamplingPlancheck]').bind('click', function () {
        $('input[name=SamplingPlancheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            $("#SamplingPlan").val($(this).val());
        } else {
            $("#SamplingPlan").val("");
        }
    });
    $('input[name=NGDcheck]').bind('click', function () {
        $('input[name=NGDcheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            if ($(this).val() == '允收') {
                $("#NGD").val("true");
            } else {
                $("#NGD").val("false");
            }
        } else {
            $("#NGD").val("");
        }
    });
    $('input[name=NGHandlecheck]').bind('click', function () {
        $('input[name=NGHandlecheck]').not(this).attr("checked", false);
        if ($(this).prop('checked') == true) {
            $("#NGHandle").val($(this).val());
        } else {
            $("#NGHandle").val("");
        }
    });

    //调用：new tabTableInput("tblGrid","text");
    $(document).ready(function () {
        $("input:not(:disabled):not(:hidden):not([readonly])[type=text]").keypress(function (e) {
            if (e.which == 13) {// 判断所按是否回车键  
                var inputs = $("input:not(:disabled):not(:hidden):not([readonly])[type=text]"); // 获取表单中的所有输入框  
                var idx = inputs.index(this); // 获取当前焦点输入框所处的位置  
                if (idx == inputs.length - 1) {// 判断是否是最后一个输入框  
                    //if (confirm("最后一个输入框已经输入,是否提交?")) // 用户确认  
                    $("form[novalidate='novalidate']").submit(); // 提交表单  
                } else {
                    inputs[idx + 1].focus(); // 设置焦点  
                    inputs[idx + 1].select(); // 选中文字  
                }
                return false;// 取消默认的提交行为  
            }
        });

        var rowInputs = [];
        var trs = $("#tableApp").find("tr");
        var inputRowIndex = 0;
        $.each(trs, function (i, obj) {
            if ($(obj).find("th").length > 0) { //跳过表头
                return true;
            }
            var rowArray = [];
            var thisRowInputs = $(obj).find("input:not(:disabled):not(:hidden):not([readonly])[type=text]");
            if (thisRowInputs.length == 0)
                return true;
            thisRowInputs.each(function (j) {
                $(this).attr("_r_", inputRowIndex).attr("_c_", j);
                rowArray.push({ "c": j, "input": this });
                $(this).keydown(function (evt) {
                    var r = $(this).attr("_r_");
                    var c = $(this).attr("_c_");

                    if (evt.which < 37 || evt.which > 40) {
                        return;
                    }
                    var tRow;
                    if (evt.which == 38) { //上
                        if (r == 0)
                            return;
                        r--; //向上一行
                        tRow = rowInputs[r];
                        if (c > tRow.length - 1) {
                            c = tRow.length - 1;
                        }
                    } else if (evt.which == 40) { //下
                        if (r == rowInputs.length - 1) { //已经是最后一行
                            return;
                        }
                        r++;
                        tRow = rowInputs[r];
                        if (c > tRow.length - 1) {
                            c = tRow.length - 1;
                        }
                    } else if (evt.which == 37) { //左
                        if (r == 0 && c == 0) {  //第一行第一个,则不执行操作
                            return;
                        }
                        if (c == 0) { //某行的第一个,则要跳到上一行的最后一个,此处保证了r大于0
                            r--;
                            tRow = rowInputs[r];
                            c = tRow.length - 1;
                        } else { //否则只需向左走一个
                            c--;
                        }
                    } else if (evt.which == 39) { //右
                        tRow = rowInputs[r];
                        if (r == rowInputs.length - 1 && c == tRow.length - 1) { //最后一个不执行操作
                            return;
                        }

                        if (c == tRow.length - 1) { //当前行的最后一个,跳入下一行的第一个
                            r++;
                            c = 0;
                        } else {
                            c++;
                        }
                    }
                    $(rowInputs[r].data[c].input).focus().select();
                });
            });
            rowInputs.push({ "length": thisRowInputs.length, "rowindex": inputRowIndex, "data": rowArray });
            inputRowIndex++;
        });
    });
</script>

<script>
    $(document).ready(function () {
        if ($("#MaterialName").val().trim() == "三合一贴片灯" || $("#MaterialName").val().trim() == "四合一贴片灯") {
            var infos = $('.totals').children('input')[0].value;   //后台传来的初始值
            console.log(infos)
            var sizeArr = infos.split('s')[0].split(',');
            var supilerSdadartArr = infos.split('s')[1].split(',');
            var ourSdandartArr = infos.split('s')[2].split(',');
            var actualValueArr = infos.split('s')[3].split(',');

            console.log(sizeArr)
            console.log(supilerSdadartArr)
            console.log(ourSdandartArr)
            console.log(actualValueArr)

            var sizeTrs = [];    //根据尺寸输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var sizeArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < sizeArr.length / 12; i++) {
                var n = 0 + i * 12;
                var m = 12 + i * 12;
                sizeArrs.push(sizeArr.slice(n,m))
                sizeTrs.push($(".forSizeClone").clone())
            }
            for (let i = 0; i < sizeTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target前面
                sizeTrs[i].children('td')[0].children[0].value = sizeArrs[i][0];
                sizeTrs[i].children('td')[1].children[0].value = sizeArrs[i][1];
                sizeTrs[i].children('td')[2].children[0].value = sizeArrs[i][2];
                sizeTrs[i].children('td')[2].children[1].value = sizeArrs[i][3];
                sizeTrs[i].children('td')[2].children[2].value = sizeArrs[i][4];
                sizeTrs[i].children('td')[2].children[3].value = sizeArrs[i][5];
                sizeTrs[i].children('td')[2].children[4].value = sizeArrs[i][6];
                sizeTrs[i].children('td')[2].children[5].value = sizeArrs[i][7];
                sizeTrs[i].children('td')[2].children[6].value = sizeArrs[i][8];
                sizeTrs[i].children('td')[2].children[7].value = sizeArrs[i][9];
                sizeTrs[i].children('td')[2].children[8].value = sizeArrs[i][10];
                sizeTrs[i].children('td')[2].children[9].value = sizeArrs[i][11];
                sizeTrs[i].insertBefore($('.target'))
            }

            var ourSdabdarTrs = [];    //根据供应商标准值输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var ourSdandartArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < ourSdandartArr.length / 5; i++) {
                var n = 0 + i * 5;
                var m = 5 + i * 5;
                ourSdandartArrs.push(ourSdandartArr.slice(n, m))
                ourSdabdarTrs.push($(".forOursdandarClone").clone())
            }
            for (let i = 0; i < ourSdabdarTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target后面
                ourSdabdarTrs[i].children('td')[0].children[0].value = ourSdandartArrs[i][0];
                ourSdabdarTrs[i].children('td')[1].children[0].value = ourSdandartArrs[i][1];
                ourSdabdarTrs[i].children('td')[2].children[0].value = ourSdandartArrs[i][2];
                ourSdabdarTrs[i].children('td')[2].children[1].value = ourSdandartArrs[i][3];
                ourSdabdarTrs[i].children('td')[2].children[2].value = ourSdandartArrs[i][4];
                ourSdabdarTrs[i].insertBefore($('.target'))
            }

            var suplierTrs = [];    //根据供应商标准值输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var supilerSdadartArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < supilerSdadartArr.length / 5; i++) {
                var n = 0 + i * 5;
                var m = 5 + i * 5;
                supilerSdadartArrs.push(supilerSdadartArr.slice(n, m))
                suplierTrs.push($(".forsuplierclone").clone())
            }
            for (let i = 0; i < suplierTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target后面
                suplierTrs[i].children('td')[0].children[0].value = supilerSdadartArrs[i][0];
                suplierTrs[i].children('td')[1].children[0].value = supilerSdadartArrs[i][1];
                suplierTrs[i].children('td')[2].children[0].value = supilerSdadartArrs[i][2];
                suplierTrs[i].children('td')[2].children[1].value = supilerSdadartArrs[i][3];
                suplierTrs[i].children('td')[2].children[2].value = supilerSdadartArrs[i][4];
                suplierTrs[i].insertBefore($('.target'))
            }

            

            var actualValTrs = [];    //根据供应商标准值输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var actualValueArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < actualValueArr.length / 5; i++) {
                var n = 0 + i * 5;
                var m = 5 + i * 5;
                actualValueArrs.push(actualValueArr.slice(n, m))
                actualValTrs.push($(".forActulValueClone").clone())
            }
            for (let i = 0; i < actualValTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target后面
                actualValTrs[i].children('td')[0].children[0].value = actualValueArrs[i][0];
                actualValTrs[i].children('td')[1].children[0].value = actualValueArrs[i][1];
                actualValTrs[i].children('td')[2].children[0].value = actualValueArrs[i][2];
                actualValTrs[i].children('td')[2].children[1].value = actualValueArrs[i][3];
                actualValTrs[i].children('td')[2].children[2].value = actualValueArrs[i][4];
                actualValTrs[i].insertBefore($('.target2'))
            }


            var tone = $('.forSizeClone')[0]
            var ttwo = $('.forsuplierclone')[0]
            var tthree = $('.forOursdandarClone')[0]
            var tgour = $('.forActulValueClone')[0]
            $(tone).hide(); $(ttwo).hide(); $(tthree).hide(); $(tgour).hide()
        } else if ($("#MaterialName").val().trim() == "LED插件灯") {
            var infos = $('.totals').children('input')[0].value;   //后台传来的初始值
            console.log(infos)
            var actualValueArr = infos.split('s')[0].split(',');

            var supilerSdadartArr = infos.split('s')[1].split(',');
            

            var actualValTrs = [];    //根据供应商标准值输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var actualValueArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < actualValueArr.length / 5; i++) {
                var n = 0 + i * 5;
                var m = 5 + i * 5;
                actualValueArrs.push(actualValueArr.slice(n, m))
                actualValTrs.push($(".forActulValueClone").clone())
            }
            for (let i = 0; i < actualValTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target后面
                actualValTrs[i].children('td')[0].children[0].value = actualValueArrs[i][0];
                actualValTrs[i].children('td')[1].children[0].value = actualValueArrs[i][1];
                actualValTrs[i].children('td')[2].children[0].value = actualValueArrs[i][2];
                actualValTrs[i].children('td')[2].children[1].value = actualValueArrs[i][3];
                actualValTrs[i].children('td')[2].children[2].value = actualValueArrs[i][4];
                actualValTrs[i].insertBefore($('.target'))
            }
            var suplierTrs = [];    //根据供应商标准值输入框内的数据来确定clone的行数并保存到sizeTrs数组中
            var supilerSdadartArrs = [];    //将尺寸数据拆分为对应的行的数组
            for (let i = 0; i < supilerSdadartArr.length / 5; i++) {
                var n = 0 + i * 5;
                var m = 5 + i * 5;
                supilerSdadartArrs.push(supilerSdadartArr.slice(n, m))
                suplierTrs.push($(".forsuplierclone").clone())
            }
            for (let i = 0; i < suplierTrs.length; i++) {    //给对应行赋值并将赋值完毕的行插入到.target后面
                suplierTrs[i].children('td')[0].children[0].value = supilerSdadartArrs[i][0];
                suplierTrs[i].children('td')[1].children[0].value = supilerSdadartArrs[i][1];
                suplierTrs[i].children('td')[2].children[0].value = supilerSdadartArrs[i][2];
                suplierTrs[i].children('td')[2].children[1].value = supilerSdadartArrs[i][3];
                suplierTrs[i].children('td')[2].children[2].value = supilerSdadartArrs[i][4];
                suplierTrs[i].insertBefore($('.target2'))
            }
            var ttwo = $('.forsuplierclone')[0]
            var tgour = $('.forActulValueClone')[0]
            $(ttwo).hide(); $(tgour).hide()
        }

        $(".forsubmit").click(function () {    //点击则分情况提交数据     三合一贴片灯&&四合一贴片灯  || LED插件灯
            if ($("#MaterialName").val().trim() == "三合一贴片灯" || $("#MaterialName").val().trim() == "四合一贴片灯") {
                var targetSize = $(".sizeVal");
                var targetSuplier = $(".suplierVal");
                var targetOur = $(".ourVal");
                var targetActual = $(".actaulVal");
                targetSize.splice(0, 12);
                targetSuplier.splice(0, 5);
                targetOur.splice(0, 5);
                targetActual.splice(0, 5)
                var targetSizeArr = [];
                var targetSuplierArr = [];
                var targetOurArr = [];
                var targetActualArr = [];
                for (let i = 0; i < targetSize.length; i++) {
                    targetSizeArr.push(targetSize[i].value)
                }
                for (let i = 0; i < targetSuplier.length; i++) {
                    targetSuplierArr.push(targetSuplier[i].value)
                }
                for (let i = 0; i < targetOur.length; i++) {
                    targetOurArr.push(targetOur[i].value)
                }
                for (let i = 0; i < targetActual.length; i++) {
                    targetActualArr.push(targetActual[i].value)
                }
                var sizeStr = targetSizeArr.join(",");
                var targetSuplierStr = targetSuplierArr.join(",");
                var targetOurStr = targetOurArr.join(",");
                var targetActualStr = targetActualArr.join(",");
                var finalStr = sizeStr + 's' + targetSuplierStr + 's' + targetOurStr + 's' + targetActualStr;
                $(".totals").children("input")[0].value = finalStr
                console.log($(".totals").children('input')[0].value)
                $(".finalsubmit").click();             //三合一四合一提交已完成
            } else if ($("#MaterialName").val().trim() == "LED插件灯") {
                var actualVal = $(".suplierVal");
                var suplierVal = $(".actaulVal");
                var actualValArr = [];   //我司实测值
                var suplierValArr = [];
                for (let i = 0; i < suplierVal.length; i++) {
                    suplierValArr.push(suplierVal[i].value)
                }
                for (let i = 0; i < actualVal.length; i++) {
                    actualValArr.push(actualVal[i].value)
                }
                actualValArr.splice(0, 5)
                suplierValArr.splice(0, 5)
                
                console.log(actualValArr.join(","))
                console.log(suplierValArr.join(","))
                var finalStr = suplierValArr.join(",") + "s" + actualValArr.join(",");
                $(".totals").children("input")[0].value = finalStr;
                $(".finalsubmit").click();       //LED插件灯--提交完成
            }
        })


    })

</script>
