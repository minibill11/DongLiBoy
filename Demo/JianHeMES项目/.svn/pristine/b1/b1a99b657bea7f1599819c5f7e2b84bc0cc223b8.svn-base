@*Dialog新建数据对话框*@
<script type="text/template" id="addDialog">
    <div>
        <el-button type="primary" icon="el-icon-edit-outline" size="small" @@click="newDataVisible = true" style="float:left;">新建记录</el-button>
        @*<slot></slot>*@
        <el-dialog title="新建数据"
                   @@close="close('ruleForm')"
                   :visible.sync="newDataVisible">
            <div>
                <el-form label-width="30%"
                         label-position="right"
                         style="text-align:left;"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="粘贴excel内容">
                        <el-input type="textarea"
                                  :autosize="{ minRows: 1, maxRows: 1}"
                                  placeholder="请粘贴内容"
                                  v-model="pasteExcel"
                                  resize="none">
                        </el-input>
                    </el-form-item>
                    <el-form-item label="平台" prop="platform">
                        <el-input v-model="newDataForm.platform"></el-input>
                    </el-form-item>
                    <el-form-item label="型号" prop="type">
                        <el-input v-model="newDataForm.type"></el-input>
                    </el-form-item>
                    <el-form-item label="平台模块" prop="plafromodule">
                        <el-input v-model="newDataForm.plafromodule"></el-input>
                    </el-form-item>
                    <el-form-item label="产品PCB编号" prop="pcbnumber">
                        @*<el-input type="textarea"
                                      :autosize="{ minRows: 1, maxRows: 2}"
                                      v-model="newDataForm.pcbnumber"
                                      resize="none">
                            </el-input>*@
                        <el-input v-model="newDataForm.pcbnumber"></el-input>
                    </el-form-item>
                    <el-form-item label="维护方式" prop="maintenance">
                        <el-select v-model="newDataForm.maintenance" placeholder="请选择维护方式">
                            <el-option label="前维护" value="前维护"></el-option>
                            <el-option label="后维护" value="后维护"></el-option>
                        </el-select>
                    </el-form-item>
                    <el-form-item>
                        <el-button @@click="newDataVisible = false">取 消</el-button>
                        <el-button type="primary" @@click="submitForm('ruleForm')">确 定</el-button>
                    </el-form-item>
                </el-form>
            </div>
        </el-dialog>
    </div>
</script>
@*input新增框*@
<script type="text/template" id="inputNew">
    <div>
        <el-button @@click="newInputVisible = true" size="mini" class="miniBtn" type="success" plain round>新增</el-button>
        <el-dialog :title="statu+'新增'"
                   :visible.sync="newInputVisible"
                   :append-to-body="true"
                   @@close="close('ruleForm')">
            @*<div class="el-form-item el-form-item--medium">
                    <label for="Name" class="el-form-item__label" style="width: 30%;">粘贴excel内容</label>
                    <div class="el-form-item__content" style="margin-left: 30%;">
                        <div class="el-input el-input--medium">
                            <el-input type="textarea"
                                      :autosize="{ minRows: 1, maxRows: 1}"
                                      placeholder="请粘贴内容"
                                      v-model="pasteExcel"
                                      resize="none">
                            </el-input>
                        </div>
                    </div>
                </div>*@
            <div v-if="statu=='插件'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="设备名称" prop="Name">
                        <el-input v-model="newDataForm.Name='插件'"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="PCBA插件单灯数" prop="PCBASingleLampNumber">
                        <el-input v-model.number="newDataForm.PCBASingleLampNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="插件标配人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='三防'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='打底壳'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name"></el-input>
                    </el-form-item>
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="点胶机配置(台)" prop="DispensMachineNum">
                        <el-input v-model.number="newDataForm.DispensMachineNum"></el-input>
                    </el-form-item>
                    <el-form-item label="螺丝机配置(台)" prop="ScrewMachineNum">
                        <el-input v-model.number="newDataForm.ScrewMachineNum"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='锁面罩'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name"></el-input>
                    </el-form-item>
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="螺丝机配置(台)" prop="ScrewMachineNum">
                        <el-input v-model.number="newDataForm.ScrewMachineNum"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='装磁吸安装板'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name"></el-input>
                    </el-form-item>
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='喷墨'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name='喷墨测试'"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="配置人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="每小时产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='线材加工'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name='线材加工'"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="配置人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="每小时产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='箱体加工'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name='箱体加工'"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="配置人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="每小时产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='灌胶'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='气密'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name='气密测试'"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                    <el-form-item label="标准总人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                </el-form>
            </div>
            <div v-if="statu=='老化'">
                <el-form label-width="30%"
                         label-position="right"
                         ref="ruleForm"
                         size="medium"
                         :rules="rules"
                         :model="newDataForm">
                    <el-form-item label="老化1工序名称" prop="Name">
                        <el-input v-model="newDataForm.Name='拼屏'"></el-input>
                    </el-form-item>
                    <el-form-item label="老化1标配人数" prop="StandardNumber">
                        <el-input v-model.number="newDataForm.StandardNumber"></el-input>
                    </el-form-item>
                    <el-form-item label="老化1每小时标准产量" prop="StandardCapacity">
                        <el-input v-model="newDataForm.StandardCapacity"></el-input>
                    </el-form-item>
                    <el-form-item label="老化2工序名称" prop="Name2">
                        <el-input v-model="newDataForm.Name2='拆屏'"></el-input>
                    </el-form-item>
                    <el-form-item label="老化2标配人数" prop="StandardNumber2">
                        <el-input v-model.number="newDataForm.StandardNumber2"></el-input>
                    </el-form-item>
                    <el-form-item label="老化2每小时标准产量" prop="StandardCapacity2">
                        <el-input v-model="newDataForm.StandardCapacity2"></el-input>
                    </el-form-item>
                    @*<el-form-item label="模组需求数量" prop="ModuleNeedNum2">
                            <el-input v-model.number="newDataForm.ModuleNeedNum2"></el-input>
                        </el-form-item>*@
                </el-form>
            </div>
            <span slot="footer" class="dialog-footer">
                <el-button @@click="newInputVisible = false">取 消</el-button>
                <el-button type="primary" @@click="submitForm('ruleForm')">确 定</el-button>
            </span>
        </el-dialog>
    </div>
</script>
<script>
    //新增整行数据框
    Vue.component('newdata-dialog', {
        template: document.getElementById("addDialog"),
        data: function () {
            return {
                newDataForm: {
                    type: "",
                    pcbnumber: "",
                    platform: "",
                    plafromodule: "",
                    maintenance: ""
                },
                newDataVisible: false,
                pasteExcel: "",
                rules: {
                    type: [{ required: true, message: '请填写型号', trigger: 'blur' }],
                    platform: [{ required: true, message: '请填写平台', trigger: 'blur' }],
                    plafromodule: [{ required: true, message: '请填写平台模块', trigger: 'blur' }],
                    maintenance: [{ required: true, message: '请选择维护方式', trigger: 'change' }],
                    pcbnumber: [{ required: true, message: '请填写产品PCB编号', trigger: 'blur' }],
                }
            }
        },
        methods: {
            //新建总表记录
            addNewData() {
                this.newDataVisible = false;
                app.loading = true;
                axios.post('/Process_Capacity/AddTotalProcess_Capacity', {
                    type: this.newDataForm.type,
                    pcbnumber: this.newDataForm.pcbnumber,
                    platform: this.newDataForm.platform,
                    plafromodule: this.newDataForm.plafromodule,
                    Maintenance: this.newDataForm.maintenance
                }).then(res => {
                    //console.log(res.data)
                    if (res.data.content == null) {
                        this.$message.error(res.data.message);
                    } else {
                        app.tableList.unshift(res.data.content);
                        this.$message.success(res.data.message);
                    };
                    app.loading = false;
                }).catch(err => {
                    this.$message.error('新建失败！');
                    app.loading = false;
                });
            },
            //关闭模态框
            close(formName) {
                this.$refs[formName].resetFields();
            },
            //验证值
            submitForm(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.addNewData();
                    } else {
                        console.log('error submit!!');
                        return false;
                    };
                });
            }
        },
        watch: {
            //粘贴型号平台和产品PCB编号
            pasteExcel: function (val) {
                if (val == "") {
                    return false;
                };
                let rtArr = [];
                //按\t切割
                let cutT = val.split("\t");
                //console.log(cutT);
                //按\n切割
                for (let t of cutT) {
                    //console.log(t);
                    if (t == "\n" || t == "") {
                        continue;
                    };
                    let cutN = t.split("\n");
                    for (let n of cutN) {
                        //console.log(n);
                        let rt = n.replace(/\"|\s|\(|\)|\（|\）/g, "");
                        rtArr.push(rt);
                        //console.log(rt);
                    };
                };
                //console.log(rtArr);
                this.newDataForm.type = rtArr[0]
                this.newDataForm.platform = rtArr[1];
                this.newDataForm.pcbnumber = rtArr[2] + "(" + rtArr[3] + ")";
                //pasteQuantity.pop();
                this.pasteExcel = "";
            },
        }
    });

    //新增工段数据框
    Vue.component('input-new', {
        props: ['thisrow', 'thisitem', 'thisid', 'statu'],
        template: document.getElementById("inputNew"),
        data: function () {
            return {
                newDataForm: {},
                newInputVisible: false,
                address: "ManualChange",
                rules: {}
            }
        },
        mounted: function () {
            let checkFloat = (rule, value, callback) => {
                if (value == undefined || value == '') { callback() };
                let reg = /^(0|([1-9]\d*))(\.\d{0,2})?$/g;
                if (reg.test(value)) {
                    callback();
                } else {
                    callback(new Error('请输入正确的数值，数值最多为2位小数'));
                };
            };
            let stringTest = [{ required: true, message: '请填写名称', trigger: 'blur' }],
                numberTest = [
                    { required: true, message: '数量不能为空', trigger: 'blur' },
                    { type: 'number', message: '必须为数字值' }
                ],
                floatTest = [
                    { required: true, message: '数值不能为空', trigger: 'blur' },
                    { validator: checkFloat, trigger: 'blur' }
                ];
            switch (this.statu) {
                case '插件':
                    //this.address = "Add_Plug_In";
                    this.rules = {
                        Name: stringTest,
                        PCBASingleLampNumber: numberTest,
                        StandardNumber: numberTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '三防':
                    //this.address = "Add_ThreeProf";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '打底壳':
                    //this.address = "Add_ThreeProf";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        ScrewMachineNum: numberTest,
                        DispensMachineNum: numberTest,
                        BottomCasStandardOutput: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '锁面罩':
                    //this.address = "Add_ThreeProf";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        ScrewMachineNum: numberTest,
                        LockTheMaskStandardOutput: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '装磁吸安装板':
                    //this.address = "Add_MagneticSuction";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                    };
                    break;
                case '喷墨':
                    //this.address = "Add_Inkjet";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '线材加工':
                    //this.address = "Add_Wire";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '箱体加工':
                    //this.address = "Add_Box";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '灌胶':
                    //this.address = "Add_Glue";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '气密':
                    //this.address = "Add_Airtight";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: numberTest,
                        StandardCapacity: floatTest,
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                case '老化':
                    //this.address = "Add_Burin";
                    this.rules = {
                        Name: stringTest,
                        StandardNumber: [{ type: 'number', message: '必须为数字值' }],
                        StandardCapacity: [{ validator: checkFloat, trigger: 'blur' }],
                        Name2: stringTest,
                        StandardNumber2: [{ type: 'number', message: '必须为数字值' }],
                        StandardCapacity2: [{ validator: checkFloat, trigger: 'blur' }],
                        //ModuleNeedNum2: numberTest,
                    };
                    break;
                //default:
            };
        },
        methods: {
            addNewData() {
                this.newInputVisible = false;
                app.loading = true;
                let obj = this.newDataForm;
                obj['Type'] = this.thisrow.Type;
                obj['Platform'] = this.thisrow.Platform;
                obj['PlatformModul'] = this.thisrow.PlatformModul;
                obj['ProductPCBnumber'] = this.thisrow.PCB;
                obj['Maintenance'] = this.thisrow.Maintenance;
                obj['Section'] = this.statu;

                axios.post('/Process_Capacity/' + this.address, {
                    newData: obj,
                    statu: "添加"
                }).then(res => {
                    if (res.data.message == true) {
                        //app.getTableData();
                        this.addNewItem(res.data.content);
                    } else {
                        this.$message({
                            message: res.data.content,
                            type: 'error'
                        });
                    };
                    app.loading = false;
                }).catch(err => {
                    this.$message({
                        message: '添加失败！',
                        type: 'error'
                    });
                    app.loading = false;
                });
            },
            addNewItem(newitem) {
                let item = this.thisitem, row = this.thisrow;
                //根据工段赋值对应字段名
                let newItemData;
                let getPassNewItemName = {
                    '插件': () => {
                        newItemData = {
                            PluginEidt: newitem.Eidt,
                            PluginDeviceID: newitem.ID,
                            PluginDeviceName: newitem.Name,
                            SingleLampWorkingHours: newitem.SingleLampWorkingHours,
                            PCBASingleLampNumber: newitem.PCBASingleLampNumber,
                            PluginStandardNumber: newitem.StandardNumber,
                            PluginStandardCapacity: newitem.StandardCapacity,
                        };
                    },
                    '三防': () => {
                        newItemData = {
                            ThreeProfEidt: newitem.Eidt,
                            ThreeProfID: newitem.ID,
                            ThreeProfProcessName: newitem.Name,
                            ThreeProfStandardTotal: newitem.StandardNumber,
                            ThreeProfStabdardOutput: newitem.StandardCapacity,
                        };
                    },
                    '打底壳': () => {
                        newItemData = {
                            BottomCasEidt: newitem.Eidt,
                            BottomCasID: newitem.ID,
                            BottomCasProcessName: newitem.Name,
                            BottomCasStandardTotal: newitem.StandardNumber,
                            BottomCasStandardOutput: newitem.StandardCapacity,
                            BottomCasDispensMachineNum: newitem.DispensMachineNum,
                            BottomCasScrewMachineNum: newitem.ScrewMachineNum,
                            BottomCasStandardHourlyOutputPerCapita: ''
                        };
                    },
                    '锁面罩': () => {
                        newItemData = {
                            LockTheMaskEdit: newitem.Eidt,
                            LockTheMaskID: newitem.ID,
                            LockTheMaskProcessName: newitem.Name,
                            LockTheMaskStandardTotal: newitem.StandardNumber,
                            LockTheMaskStandardOutput: newitem.StandardCapacity,
                            LockTheMaskScrewMachineNum: newitem.ScrewMachineNum,
                            LockTheMaskStandardHourlyOutputPerCapita: ''
                        };
                    },
                    '装磁吸安装板': () => {
                        newItemData = {
                            MagneticEidt: newitem.Eidt,
                            MagneticID: newitem.ID,
                            MagneticProcessName: newitem.Name,
                            MagneticStandardTotal: newitem.StandardNumber,
                            MagneticStabdardOutput: newitem.StandardCapacity,
                            MagneticStandardHourlyOutputPerCapita: ''
                        };
                    },
                    '灌胶': () => {
                        newItemData = {
                            GlueEidt: newitem.Eidt,
                            GlueID: newitem.ID,
                            GlueProcessName: newitem.Name,
                            GlueStandardTotal: newitem.StandardNumber,
                            GlueStabdardOutput: newitem.StandardCapacity,
                        };
                    },
                    '气密': () => {
                        newItemData = {
                            AirtightEidt: newitem.Eidt,
                            AirtightID: newitem.ID,
                            AirtightProcessName: newitem.Name,
                            AirtightStandardTotal: newitem.StandardNumber,
                            AirtightStabdardOutput: newitem.StandardCapacity,
                        };
                    },
                    '喷墨': () => {
                        newItemData = {
                            InkjetEidt: newitem.Eidt,
                            InkjetID: newitem.ID,
                            InkjetProcessName: newitem.Name,
                            InkjetSuctionStandardTotal: newitem.StandardNumber,
                            InkjetStabdardOutputPerHour: newitem.StandardCapacity,
                        };
                    },
                    '线材加工': () => {
                        newItemData = {
                            WireEidt: newitem.Eidt,
                            WireID: newitem.ID,
                            WireProcessName: newitem.Name,
                            WireSuctionStandardTotal: newitem.StandardNumber,
                            WireStabdardOutputPerHour: newitem.StandardCapacity,
                        };
                    },
                    '箱体加工': () => {
                        newItemData = {
                            BoxEidt: newitem.Eidt,
                            BoxID: newitem.ID,
                            BoxProcessName: newitem.Name,
                            BoxSuctionStandardTotal: newitem.StandardNumber,
                            BoxStabdardOutputPerHour: newitem.StandardCapacity,
                        };
                    },
                    '老化': () => {
                        newItemData = {
                            BurinEidt: newitem.Eidt,
                            BurinID: newitem.ID,
                            BurinOneProcessName: newitem.Name,
                            BurinTwoProcessName: newitem.Name2,
                            BurninOneSuctionStandardTotal: newitem.StandardNumber,
                            BurinTwoSuctionStandardTotal: newitem.StandardNumber2,
                            BurinOneStabdardOutputPerHour: newitem.StandardCapacity,
                            BurinTwoStabdardOutputPerHour: newitem.StandardCapacity2,
                        };
                    },
                };
                getPassNewItemName[this.statu].call(this);


                if (item == null) {
                    switch (this.statu) {
                        case '插件':
                            row.PluginDevice = [];
                            row.PluginDevice.push(newItemData)
                            break;
                        case '三防':
                            row.ThreeProf = [];
                            row.ThreeProf.push(newItemData)
                            break;
                        case '打底壳':
                            row.BottomCas = [];
                            row.BottomCas.push(newItemData)
                            break;
                        case '锁面罩':
                            row.LockTheMask = [];
                            row.LockTheMask.push(newItemData)
                            break;
                        case '装磁吸安装板':
                            row.Magnetic = [];
                            row.Magnetic.push(newItemData)
                            break;
                        case '喷墨':
                            row.Inkjet = [];
                            row.Inkjet.push(newItemData)
                            break;
                        case '线材加工':
                            row.Wire = [];
                            row.Wire.push(newItemData)
                            break;
                        case '箱体加工':
                            row.Box = [];
                            row.Box.push(newItemData)
                            break;
                        case '灌胶':
                            row.Glue = [];
                            row.Glue.push(newItemData)
                            break;
                        case '气密':
                            row.Airtight = [];
                            row.Airtight.push(newItemData)
                            break;
                        case '老化':
                            row.Burin = [];
                            row.Burin.push(newItemData)
                            break;
                        //default:
                    };
                } else {
                    item.push(newItemData);
                };
                this.$message({
                    message: '添加成功！',
                    type: 'success'
                });
            },
            //关闭模态框
            close(formName) {
                this.$refs[formName].resetFields();
                //this.newDataForm = {}
            },
            //验证值
            submitForm(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.addNewData();
                    } else {
                        //console.log('error submit!!');
                        return false;
                    };
                });
            }
        }
    });
</script>
