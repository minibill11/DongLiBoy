@model IEnumerable<JianHeMES.Models.EquipmentBasicInfo>

@{
    ViewBag.Title = "设备首页";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<style>
    .cell{
        padding:2px !important;
    }
    .el-input__inner{
        padding:1px !important;
    }
    .el-input{
        width:120px !important;
        display:inline-block !important;
        margin:4px;
    }
    .equipment-index-inputcontainer{
        display:flex;
        justify-content:center;
    }
    .equipment-index-inputcontainer div{
         display:inline;
    }
    .container {
        padding: 0;
    }

    .color2 {
        color: red;
        font-size: 16px;
    }

    .has-gutter tr th .cell, .el-table__row td .cell {
        text-align: center;
    }

    .el-table__header tr,
    .el-table__header th {
        font-size: 13px;
        padding: 0;
        height: 30px;
    }

    .el-table__body tr,
    .el-table__body td {
        padding: 0;
        font-size: 12px;
        height: 30px;
    }

    textarea {
        height: 30px;
        width: 15%;
    }

    .inputtext {
        margin-top: 25px;
        display: inline-flex;
        width: 100%;
    }

    h4 {
        width: 75%;
        font-size: 20px;
        text-align: center;
    }

    .bottomInfo {
        display: flex;
        justify-content: space-between;
    }

    .pone {
        align-self: flex-end;
        font-size: 14px;
    }
    .tianjiashebei{
        display:flex;
        justify-content:center;
        margin-top:10px;
    }
</style>

<h2 style="text-align:center;margin-top:15px;margin-bottom:0;font-size:25px;">设备首页</h2>

@*<span>@Html.ActionLink("产线查看", "Index2")</span>*@
<div id="app">
    <p class="tianjiashebei">
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("产线查看", "Index2")</span></el-button>
        @*<el-button type="primary" size="mini" plain><span>@Html.ActionLink("单个添加", "Create")</span></el-button>*@
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("批量添加", "BatchInputEquipment")</span></el-button>
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("报修单查询", "EquipmentRepairbill_Query")</span></el-button>
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("点检表查询", "Equipment_Tally")</span></el-button>
        @*<el-button type="primary" size="mini" plain><span>@Html.ActionLink("点检记录", "Equipment_Tally_maintenance")</span></el-button>
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("维修记录", "EquipmentRepairbill")</span></el-button>*@
    </p>

    <div>
        <div class="equipment-index-inputcontainer">

            <div>
                <span>资产编号</span>
                <el-input size="mini" v-model="assetnumber" placeholder="请输入资产编号"></el-input>
            </div>

            @*<div>
                <span>设备号</span>
                <el-input size="mini" v-model="equipmentnumber" placeholder="请输入设备号"></el-input>
            </div>
            
            <div>
                <span>设备名称</span>
                <el-input size="mini" v-model="equipmentname" placeholder="请输入设备名称"></el-input>
            </div>*@
            @*<div>
                <span>型号/规格</span>
                <el-input size="mini" v-model="modelspecification" placeholder="请输入型号/规格"></el-input>
            </div>*@
            <div>
                <span>使用部门</span>
                @*<el-input size="mini" v-model="userdepartment" placeholder="请输入使用部门"></el-input>*@
                <el-select clearable size="mini" v-model="userdepartment" placeholder="请选择设备状态">
                    <el-option v-for="item in deparOpions"
                               v-bind:key="item.value"
                               v-bind:label="item.label"
                               v-bind:value="item.value">
                    </el-option>
                </el-select>
            </div>
        @*</div>
        <div class="equipment-index-inputcontainer">*@
            @*<div>
                <span>存放地点</span>
                <el-input size="mini" v-model="storageplace" placeholder="请输入存放地点"></el-input>
            </div>
            <br />
            <div>
                <span>车间</span>
                <el-input size="mini" v-model="workshop" placeholder="请输入车间"></el-input>
            </div>
            <div>
                <span>工段</span>
                <el-input size="mini" v-model="section" placeholder="请输入工段"></el-input>
            </div>*@
            <div>
                <span>设备状态</span>
                <el-select clearable size="mini" v-model="status" placeholder="请选择设备状态">
                    <el-option v-for="item in options"
                               v-bind:key="item.value"
                               v-bind:label="item.label"
                               v-bind:value="item.value">
                    </el-option>
                </el-select>
            </div>

            @*<div>
                <span>品牌</span>
                <el-input size="mini" v-model="brand" placeholder="请输入品牌"></el-input>
            </div>
            <div>
                <span>备注</span>
                <el-input size="mini" v-model="remark" placeholder="请输入备注内容"></el-input>
            </div>*@
            
            <div style="margin-left:8px;">
                <el-button id="search" style="height:36px;" type="primary" v-on:click="checkinfos" size="mini">查询</el-button>
            </div>

        </div>
    </div>

    <el-table v-loading="loading" size="mini" v-bind:data="tableData" style="width: 100%" max-height="590" border stripe>
        @* sortable *@
        <el-table-column prop="index" label="序号" width="35">
        </el-table-column>
        <el-table-column prop="SerialNumber" label="原序号" width="45">
        </el-table-column>
        <el-table-column prop="EquipmentNumber" sortable label="设备编号" width="85">
        </el-table-column>
        <el-table-column prop="AssetNumber" sortable label="资产编号" width="85">
        </el-table-column>
        <el-table-column prop="EquipmentName" sortable label="设备名称" width="85">
        </el-table-column>
        <el-table-column prop="Brand" label="品牌" width="75">
        </el-table-column>
        <el-table-column prop="ModelSpecification" label="型号/规格" width="75">
        </el-table-column>
        <el-table-column prop="ManufacturingNumber" label="出厂编号" width="75">
        </el-table-column>
        <el-table-column prop="Quantity" label="数量" width="51">
        </el-table-column>
        <el-table-column prop="ActionDate" label="启用时间" width="83">
        </el-table-column>
        <el-table-column prop="DepreciableLife" label="折旧年限（月）" width="75">
        </el-table-column>
        <el-table-column prop="UserDepartment" sortable label="使用部门" width="93">
        </el-table-column>
        <el-table-column prop="StoragePlace" label="存放地点" width="90">
        </el-table-column>
        <el-table-column prop="Status" label="使用状态" width="60">
        </el-table-column>
        <el-table-column prop="Remark" label="备注" width="104">
        </el-table-column>
        <el-table-column label="操作" width="53">
            <template slot-scope="scope">
                <a v-bind:href="basehref + '?num='+ scope.row.AssetNumber">详细</a>
                @*<el-button v-on:click.native.prevent="showDetials(scope.$index, tableData)"
                           type="text"
                           size="small">
                    详细
                </el-button>*@
            </template>
        </el-table-column>
    </el-table>
</div>


<script>

    var roles = JSON.parse(localStorage.getItem("rigths"))   //
    function checkRoles(list, roleName) {   //检测权限
        var flag = false
        if (list && roleName) {
            for (let item in list) {
                if (list[item] == roleName) {
                    flag = true
                }
            }
        }
        return flag
    }
    
    
    document.onkeydown = function (event) {
        var e = event || window.event;    // 兼容IE
        if (e && e.keyCode == 13) { //回车键的键值为13
            $("#search").click();
        }
    };
    function GMTToStr(time) {
        if (time != null) {
            let date = new Date(time)
            console.log(date);
            let Str = date.getFullYear() + '-' +
                (date.getMonth() + 1) + '-' +
                date.getDate()
                //+ ' ' +
                //date.getHours() + ':' +
                //date.getMinutes() + ':' +
                //date.getSeconds()
            return Str
        } else {
            return ''
        }
    }

    let vm = new Vue({
        el: "#app",
        data: {
            loading:false,
            basehref:'/Equipment/Details',
            inputInfo: null,
            flag: false,
            flags: false,
            count: null,
            tableData: [],
            equipmentnumber: null,
            assetnumber: null,
            equipmentname: null,
            modelspecification: null,
            userdepartment: null,
            storageplace: null,
            workshop: null,
            section: null,
            brand:null,
            status: null,
            remark: '',
            options: [{
                value: '正常',
                label: '正常'
            }, {
                value: '运行',
                label: '运行'
            }, {
                value: '调机',
                label: '调机'
            }, {
                value: '保养',
                label: '保养'
            }, {
                value: '停机',
                label: '停机'
            }, {
                value: '维修',
                label: '维修'
            }],
            deparOpions:[]
        },
        methods: {
            postdata() {

            },
            indexMethod(){
                return index +1;
            },
            goinsede(){
                console.log("clicked!")
            },
            showDetials(index) {
                this.$message({
                    message: "跳转到详细页面！---id",
                    type: "success"
                })
            },
            checkinfos() {
                if (this.brand != null|| this.equipmentnumber != null || this.assetnumber != null || this.equipmentname != null || this.modelspecification != null || this.userdepartment != null || this.storageplace != null || this.workshop != null || this.section != null || this.status != null || this.remark != null) {
                    this.loading = true;
                    axios.post("/Equipment/Index", {
                        equipmentnumber: this.equipmentnumber,brand:this.brand, assetnumber: this.assetnumber, equipmentname: this.equipmentname, modelspecification: this.modelspecification, userdepartment: this.userdepartment,
                        storageplace: this.storageplace, workshop: this.workshop, section: this.section, status: this.status, remark: this.remark
                    }).then(res=> {
                        //console.log(res.data)
                        let arr = []
                        for (let item in res.data) {
                            arr.push(res.data[item])
                        }
                        let arr2 = []
                        for (let i = 0; i < arr.length; i++) {
                            arr2.push(JSON.parse(arr[i].replace(/\\/g, '')))

                            arr2[i].ActionDate = GMTToStr(arr2[i].ActionDate)
                            arr2[i].index = i+1
                        }
                        //console.log(arr2)
                        this.tableData = arr2;
                        this.loading = false;
                        //console.log(arr2)
                    }).catch(err=> {
                        this.$message({
                            message: "连接服务器失败！",
                            type: "warning"
                        })
                    })
                } else {
                    this.$message({
                        message: "请输入需要查询讯息！",
                        type:"warning"
                    })
                }
            },

            // 获取设备使用部门
            getDeparList() {
                axios.post("/Equipment/Userdepartment_list").then(res=> {
                    console.log(res.data)
                    res.data.forEach(item=> {
                        let obj = {
                            value: item,
                            label: item
                        };
                        this.deparOpions.push(obj);
                    })
                })
            }
        },
        mounted(){
            this.getDeparList();
        },
        watch: {
        }
    })
    if (checkRoles(roles, '设备添加')) {
        $('.tianjiashebei').show()
    } else {
        $('.tianjiashebei').hide()
    }
    
</script>

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.SerialNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EquipmentNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AssetNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.EquipmentName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModelSpecification)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.InfoPlate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ManufacturingNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActionDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DepreciableLife)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserDepartment)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StoragePlace)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WorkShop)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LineNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Section)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FunctionDiscription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Creator)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Modifier)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifyTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Remark)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.SerialNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EquipmentNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AssetNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EquipmentName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Brand)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModelSpecification)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.InfoPlate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ManufacturingNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ActionDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DepreciableLife)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserDepartment)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StoragePlace)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WorkShop)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LineNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Section)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FunctionDiscription)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Creator)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Modifier)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifyTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Remark)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
