@{
    ViewBag.Title = "设备首页";
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

@* css放置处 *@
@section cssStyle {
    <link rel="stylesheet/less" type="text/css" href="~/Content/Equipment/equipment_index.less" />
    <style>
        .el-card__body {
            padding: 20px 0 0 0;
        }

        .chart-style {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .card-title {
            text-align: center;
            padding: 10px;
            background: #e4ecf7;
            font-size: 18px;
            font-weight: bold;
        }

        .card-title-select {
            text-align: center;
            padding: 10px;
            color: #fff;
            background: #409eff;
            font-size: 18px;
            font-weight: bold;
        }

        .card-bg {
            background: #fff;
            cursor: pointer;
        }

            .card-bg:hover {
                background: #f2f8ff;
            }

        .big {
            width: 420px;
            height: 300px;
        }

        .small {
            width: 350px;
            height: 300px;
        }

        .item-title-box {
            width: 100%;
            text-align: center;
            padding: 30px 0 20px 0;
        }

        .item-title-box-name {
            font-weight: bold;
            font-size: 16px;
            color: #303133;
        }

        .item-title {
            text-align: center;
            background: #e4ecf7;
            padding: 4px;
            font-size: 14px;
            font-weight: bold;
        }
    </style>
}
<el-container id="app" v-cloak>
    <el-header class="text-center">
        @*标题*@
        <eq-header-component :active="active"></eq-header-component>
    </el-header>
    <el-main class="main-box" v-loading="loading">
        @*总图*@
        <el-row :gutter="30">
            <el-col :span="8" v-for="(item,index) in chartsList" :key="item.id">
                <el-card class="card-bg">
                    <div @@click="onChangeCard(item.title)">
                        <div class="chart-style">
                            <eq-card-component :id=`charts${item.id}` :chart="item.chart" size="big" :text="item.text" :value="item.value" :radius="radiusBig" :color="item.color"></eq-card-component>
                        </div>
                        <div :class="selected==item.title?'card-title-select':'card-title'">{{item.title}}</div>
                    </div>
                </el-card>
            </el-col>
        </el-row>
        <div class="item-title-box">
            <div class="item-title-box-name">各部门{{selected}}</div>
        </div>
        @*子图*@
        @*<el-row :gutter="30">
            <el-col v-show="selected=='设备稼动率汇总'" :span="6" v-for="(item,index) in currentList" :key="item.id">
                <div class="item-title">{{item.title}}</div>
                <div class="chart-style">
                    <eq-card-component :id=`currentItem${item.id}` :chart="item.chart" size="small" :radius="radiusSmall" :color="color1"></eq-card-component>
                </div>
            </el-col>
            <el-col v-show="selected=='设备状态汇总'" :span="6" v-for="(item,index) in factoryCurrentList" :key="item.id">
                <div class="item-title">{{item.title}}</div>
                <div class="chart-style">
                    <eq-card-component :id=`factoryItem${item.id}` :chart="item.chart" size="small" :radius="radiusSmall" :color="color1"></eq-card-component>
                </div>
            </el-col>
            <el-col v-show="selected=='设备保养汇总'" :span="6" v-for="(item,index) in maintenanceList" :key="item.id">
                <div class="item-title">{{item.title}}</div>
                <div class="chart-style">
                    <eq-card-component :id=`maintenanceItem${item.id}` :chart="item.chart" size="small" :radius="radiusSmall" :color="color2"></eq-card-component>
                </div>
            </el-col>
        </el-row>*@
        @*子表*@
   
        <eq-table-component :selected="selected" :table="tableListData"></eq-table-component>
    </el-main>
</el-container>

@* 分部页放置处 *@
@section renderPage {
    @RenderPage("~/Views/Equipment/_Eq_Header.cshtml")
    @RenderPage("~/Views/Equipment/_Eq_Echarts_Card.cshtml")
    @RenderPage("~/Views/Equipment/_Eq_New_Index_Table.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script src="~/Scripts/echarts4.0.4.min.js"></script>
    <script>
        const app = {
            data: function () {
                return {
                    loading: true,
                    radiusBig: ['26%', '50%'],
                    radiusSmall: ['20%', '45%'],
                    color1: ["#22c49e", "#f7c73a", "#ff8590"],
                    color2: ["#22c49e", "#5a74ed", "#ff8590"],
                    active: "运行状态",
                    selected: "设备稼动率汇总",
                    chartsList: [
                        //{
                        //    id: 0,
                        //    title: '设备稼动率汇总',
                        //    text: '总时长',
                        //    color: ["#22c49e", "#f7c73a", "#ff8590"],
                        //    value: 2345,  //总时长
                        //    chart: [
                        //        { value: 222, name: '运行时长' },
                        //        { value: 124, name: '停机时长' },
                        //        { value: 567, name: '维修时长' }
                        //    ]
                        //},
                        //{
                        //    id: 1,
                        //    title: '设备状态汇总',
                        //    text: '设备数',
                        //    color: ["#22c49e", "#f7c73a", "#ff8590"],
                        //    value: 2345,  //设备数
                        //    chart: [
                        //        { value: 231, name: '运行' },
                        //        { value: 345, name: '停机' },
                        //        { value: 345, name: '维修' }
                        //    ]
                        //},
                        //{
                        //    id: 2,
                        //    title: '设备保养汇总',
                        //    text: '设备数',
                        //    color: ["#22c49e", "#5a74ed", "#ff8590"],
                        //    value: 778,  //设备数
                        //    chart: [
                        //        { value: 12, name: '已保养' },
                        //        { value: 378, name: '待保养' }
                        //    ]
                        //}
                    ],
                    tableListData: {},
                    //子图
                    currentList: [],   //设备稼动率子图
                    factoryCurrentList: [],   //设备状态子图
                    maintenanceList: [],   //设备保养子图
                }
            },
            created() {
                //this.loading = false;
                if (localStorage.getItem("chartData") != null) {
                    let chartData = JSON.parse(localStorage.getItem("chartData"));
                    this.loading = false;
                    console.log(chartData, 000);
                    this.initSummaryChart(chartData);
                    this.initItemChart(chartData[0].current, chartData[1].Factory_current, chartData[2].DepartmentList);
                }
                //this.onGetData();
            },
            mounted() {
             
            },
            //函数方法
            methods: {
                //获取设备稼动率汇总
                onGetRateData() {
                    let dd = new Date();
                    return new Promise((resolve, reject) => {
                        axios.post("/Equipment/Equipment_DeviceTime", { year: dd.getFullYear(), month: dd.getMonth() + 1 }).then(res => {
                            console.log(res.status, 11);
                            //console.log(res.data, 222)
                            resolve(res.data);
                        }).catch(err => {
                            reject(err);
                        })
                    })
                },
                //获取设备状态汇总
                onGetStateData() {
                    return new Promise((resolve, reject) => {
                        axios.post("/Equipment/Equipment_Thecurrent").then(res => {
                            console.log(res.status, 22);
                            //console.log(res.data, 222)
                            resolve(res.data);
                        }).catch(err => {
                            reject(err);
                        })
                    })

                },
                //获取设备保养汇总
                onGetMaintainData() {
                    let dd = new Date();
                    return new Promise((resolve, reject) => {
                        axios.post("/Equipment/Tally_Maintenance", { year: dd.getFullYear(), month: dd.getMonth() + 1 }).then(res => {
                            console.log(res.status, 33);
                            //console.log(res.data, 222)
                            resolve(res.data);
                        }).catch(err => {
                            reject(err);
                        })
                    })
                },
                //获取数据
                onGetData() {
                    Promise.all([this.onGetRateData(), this.onGetStateData(), this.onGetMaintainData()]).then(res => {
                        this.loading = false;
                        console.log(res);
                        localStorage.setItem("chartData", JSON.stringify(res));
                        this.initSummaryChart(res);
                        this.initItemChart(res[0].current, res[1].Factory_current, res[2].DepartmentList);
                    })
                },
                //总图
                initSummaryChart(res) {
                    //图数据
                    let obj = {
                        id: 0,
                        title: '设备稼动率汇总',
                        text: '总时长',
                        color: ["#22c49e", "#f7c73a", "#ff8590"],
                        value: parseInt(res[0].RuntotalDevice) + parseInt(res[0].StoptotalDevice) + parseInt(res[0].MainttotalDevice),  //总时长
                        chart: [
                            { value: res[0].RuntotalDevice, name: '运行时长', per: res[0].Runpercentage_Device },
                            { value: res[0].StoptotalDevice, name: '停机时长', per: res[0].Stoppercentage_Device },
                            { value: res[0].MainttotalDevice, name: '维修时长', per: res[0].Maintpercentage_Device }
                        ]
                    };
                    let obj1 = {
                        id: 1,
                        title: '设备状态汇总',
                        text: '设备数',
                        color: ["#22c49e", "#f7c73a", "#ff8590"],
                        value: parseInt(res[1].Runtotal) + parseInt(res[1].Stoptotal) + parseInt(res[1].Mainttotal),  //设备数
                        chart: [
                            { value: res[1].Runtotal, name: '运行', per: res[1].Runpercentage },
                            { value: res[1].Stoptotal, name: '停机', per: res[1].Stoppercentage },
                            { value: res[1].Mainttotal, name: '维修', per: res[1].Maintpercentage }
                        ]
                    };
                    let obj2 = {
                        id: 2,
                        title: '设备保养汇总',
                        text: '设备数',
                        color: ["#22c49e", "#5a74ed", "#ff8590"],
                        value: parseInt(res[2].Total_HaveMaintain) + parseInt(res[2].Total_ToMaintain),  //设备数
                        chart: [
                            { value: res[2].Total_HaveMaintain, name: '已保养', per: res[2].Total_HavePercent },
                            { value: res[2].Total_ToMaintain, name: '待保养', per: res[2].Total_ToPercent }
                        ]
                    };
                    this.chartsList = [];
                    this.chartsList.push(obj, obj1, obj2);

                },
                //子图
                initItemChart(arr1, arr2, arr3) {
                    //console.log(arr1, 111);
                    //console.log(arr2, 222);
                    //console.log(arr3, 333);
                    this.currentList = [];
                    this.factoryCurrentList = [];
                    this.maintenanceList = [];
                    arr1.forEach((item, index) => {
                        let obj1 = {
                            id: index,
                            title: item.UserDepartment,
                            chart: [
                                { value: item.RunnDevice, name: '运行时长', per: item.RunDepar_Device },
                                { value: item.StopnDevice, name: '停机时长', per: item.StopDepar_Device },
                                { value: item.MaintDevice, name: '维修时长', per: item.MaintDepar_Device }
                            ]
                        }
                        this.currentList.push(obj1);
                    });
                    arr2.forEach((item, index) => {
                        let obj2 = {
                            id: index,
                            title: item.UserDepartment,
                            chart: [
                                { value: item.Shuju.Runnumber, name: '运行', per: item.Shuju.Run_Depar },
                                { value: item.Shuju.Stopnumber, name: '停机', per: item.Shuju.Stop_Depar },
                                { value: item.Shuju.Maintnumber, name: '维修', per: item.Shuju.Maint_Depar }
                            ]
                        }
                        this.factoryCurrentList.push(obj2);
                    });
                    arr3.forEach((item, index) => {
                        let obj3 = {
                            id: index,
                            title: item.UserDepartment,
                            chart: [
                                { value: item.Depart_HaveMaintain, name: '已保养', per: item.Depart_HavePercent },
                                { value: item.Depart_ToMaintain, name: '待保养', per: item.Depart_ToPercent }
                            ]
                        }
                        this.maintenanceList.push(obj3);
                    });
                    this.tableListData = { arr1, arr2, arr3};
                    //console.log(this.currentList, 111);
                    //console.log(this.factoryCurrentList, 222);
                    //console.log(this.maintenanceList, 333);
                },
                //选择图
                onChangeCard(val) {
                    console.log(val)
                    this.selected = val;
                }
            },
        };
    </script>
}
