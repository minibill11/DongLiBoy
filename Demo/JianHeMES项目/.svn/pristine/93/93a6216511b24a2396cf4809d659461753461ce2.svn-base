@{
    ViewBag.Title = "外箱LOGO修改";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Content/styleFile/solder/solderJavascript.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    .el-header {
        height: auto !important;
        padding: 0;
    }

    .inputframe {
        display: flex;
        justify-content: center;
    }

        .inputframe span {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

    @@media screen and (min-width: 768px) {
        .tableContainer {
            width: 50%;
            margin: 25px auto;
        }
    }

    .body-content, .container, .el-main {
        padding-left: 0px;
        padding-right: 0px;
    }

    a:hover {
        text-decoration: none;
        color: #000;
    }

    h2, h3 {
        margin: 5px 0 10px;
    }

    .cell {
        text-align: center;
    }

    .adiv {
        display: inline-block;
    }
</style>

<div id="app">
    <el-container>
        <el-header class="text-center">
            <div v-show="screenSize>=768">
                <h2 class="text-center">@ViewBag.Title</h2>
                <a class="PoutsideBinningPrintOne" href="/Packagings/outsideBinningPrint"><el-button size="small">外箱装箱和标签打印</el-button></a>
                <a class="PoutsideBinningPrintTwo" href="/Packagings/lookTag"><el-button size="small">查看标签</el-button></a>
                <a class="PoutsideBinningPrintThree" href="/Packagings/DeleteConfirm"><el-button size="small">外箱删除</el-button></a>
                <div class="adiv PoutsideBinningPrintFour" href="/Packagings/OutsideBoxLableLogoChange"><el-button size="small" type="primary" plain disabled style="cursor:default">修改外箱标签LOGO</el-button></div>
            </div>
            <div v-show="screenSize<768">
                <h3>@ViewBag.Title</h3>
                <el-dropdown placement="bottom">
                    <el-button size="medium ">
                        更多菜单<i class="el-icon-arrow-down el-icon--right"></i>
                    </el-button>
                    <el-dropdown-menu slot="dropdown">
                        <a class="PoutsideBinningPrintOne" href="/Packagings/outsideBinningPrint"><el-dropdown-item>外箱装箱和标签打印</el-dropdown-item></a>
                        <a href="/Packagings/lookTag"><el-dropdown-item>查看标签</el-dropdown-item></a>
                        <a class="PoutsideBinningPrintThree" href="/Packagings/DeleteConfirm"><el-dropdown-item>外箱删除</el-dropdown-item></a>
                        <div class="adiv PoutsideBinningPrintFour" href="/Packagings/OutsideBoxLableLogoChange"><el-dropdown-item disabled>修改外箱标签LOGO</el-dropdown-item></div>
                    </el-dropdown-menu>
                </el-dropdown>
            </div>
        </el-header>
        <el-main v-loading="loading">
            <el-row>
                <div class="inputframe">
                    <span>订单号：</span>
                    <el-select v-model.trim="selectVal" placeholder="输入内容可查询" filterable size="medium">
                        <el-option v-for="item in selectOptions"
                                   :key="item.value"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </div>
                <div class="tableContainer">
                    <el-table :data="tableData"
                              border
                              v-bind:span-method="objectSpanMethod"
                              style="width: 100%">
                        <el-table-column prop="ScreenNum"
                                         label="屏序">
                        </el-table-column>
                        <el-table-column prop="OuterBoxBarcode"
                                         label="条码"
                                         min-width="150">
                        </el-table-column>
                        <el-table-column label="LOGO">
                            <template slot-scope="scope">
                                <el-tooltip :content="scope.row.IsLogo=='100'?'有LOGO':'无LOGO'" placement="top">
                                    <el-switch v-model="scope.row.IsLogo"
                                               active-color="#13ce66"
                                               v-on:change="switchChange(scope.row,scope.$index)"
                                               inactive-color="#ff4949"
                                               active-value="100"
                                               inactive-value="0">
                                    </el-switch>
                                </el-tooltip>
                            </template>
                        </el-table-column>
                    </el-table>
                </div>
            </el-row>
        </el-main>
    </el-container>
</div>

<script>
    let app = new Vue({
        el: "#app",
        data: {
            screenSize: document.body.clientWidth,
            loading: false,
            selectOptions: [],
            selectVal: null,
            tableData: [],
            spanArr: []
        },
        mounted() {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.selectOptions = res.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
            window.onresize = function () {
                app.screenSize = document.body.clientWidth;
            };
        },
        methods: {
            switchChange(row, indexs) {
                axios.post("/Packagings/OutsideBoxLableLogoChange", { ordernum: row.OrderNum, outerboxbarcode: row.OuterBoxBarcode, logo: row.IsLogo == '0' ? false : true }).then(res => {
                    console.log(res.data)
                    if (res.data == "无修改.") {
                        this.$message({
                            message: "修改失败！",
                            type: "warning"
                        });
                        row.IsLogo = row.IsLogo == '0' ? '100' : '0';
                    } else {
                        this.$message({
                            message: res.data,
                            type: "success"
                        })
                    }
                }).catch(err => {
                    this.$message({
                        message: "连接失败！",
                        type: "warning"
                    })
                });
            },
            objectSpanMethod({ row, column, rowIndex, columnIndex }) {
                if (columnIndex === 0) {
                    if (this.spanArr[rowIndex]) { // [3,0,0,2,0,3,0,0]
                        return {
                            rowspan: this.spanArr[rowIndex],
                            colspan: 1
                        }
                    } else {
                        return {
                            rowspan: 0,
                            colspan: 0
                        }
                    }
                }
            },
        },
        watch: {
            selectVal() {
                if (this.selectVal != null) {
                    axios.post('/Packagings/OutsideBoxLableLogoGet', { ordernum: this.selectVal }).then(res => {
                        let Datas = []
                        for (let item in res.data) {
                            Datas.push(JSON.parse(res.data[item]))
                        };
                        let targetData = []
                        Datas.forEach(item => {
                            item.forEach(items => {
                                if (items.IsLogo == true) {
                                    items.IsLogo = '100'
                                } else {
                                    items.IsLogo = '0'
                                }
                                targetData.push(items)
                            })
                        });
                        this.tableData = targetData;
                    }).catch(err => {
                        this.$message({
                            message: "连接失败！",
                            type: "warning"
                        })
                    });
                };
            },
            tableData() {
                if (this.tableData.length != 0) {
                    getSpan(this.tableData);
                }
            }
        }
    });

    // 获取按照当前表格数据而得到的合并信息
    function getSpan(arrs) {
        app.spanArr = []; // 方法开始时初始化
        let contactDot = 0;
        arrs.forEach((item, index) => {
            if (index === 0) {
                app.spanArr.push(1)
            } else {
                if (item.ScreenNum === arrs[index - 1].ScreenNum) {
                    app.spanArr[contactDot] += 1;
                    app.spanArr.push(0)
                } else {
                    contactDot = index
                    app.spanArr.push(1)
                }
            }
        })
    }
</script>
