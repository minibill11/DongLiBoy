
@{
    ViewBag.Title = "Small_Sample_Arguments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<script src="~/Scripts/axios.min.js"></script>

<style>
    .table-container {
        width: 48%;
        margin-top: 5px;
    }

    .table-container0 {
        width: 48%;
        margin-top: 5px;
    }

    .table-container1 {
        width: 42%;
        margin-top: 5px;
    }

    .tb {
        display: inline-flex;
        margin-bottom: 5px;
    }

    .table .cell, .el-table th, .el-table td {
        text-align: center;
        padding: 4px;
    }

    .el-form-item {
        margin-bottom: 10px;
    }

    .corparationBtn {
        margin: 0;
        padding: 5px;
        float: left;
        height: 100%;
    }

    .el-form-item__content {
        margin-left: 0px !important;
    }
</style>

<div id="app">
    <h3 style="text-align:center">小样参数</h3>
    <el-dialog title="提示" v-bind:visible.sync="icVisible" width="18%">
        <span slot="title">
            <h3 style="text-align:center;">添加IC型号</h3>
            <el-form label-position="labelPosition" label-width="80px">
                <el-form-item label="IC型号">
                    <el-input v-model="IC_Model" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="V值">
                    <el-input v-model="V_REXT" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="N值">
                    <el-input v-model="N_Value" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="G值">
                    <el-input v-model="Gain" size="small" style="width:150px;"></el-input>
                </el-form-item>
            </el-form>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="icVisible = false" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addIC" size="small">添 加</el-button>
        </span>
    </el-dialog>

    <el-dialog title="提示" v-bind:visible.sync="jjVisible" width="18%">
        <span slot="title">
            <h3 style="text-align:center;">添加PH间距</h3>
            <el-form label-position="labelPosition" label-width="80px">
                <el-form-item label="间距">
                    <el-input v-model="Spacing" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="最低值">
                    <el-input v-model="Least" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="最高值">
                    <el-input v-model="Maximum" size="small" style="width:150px;"></el-input>
                </el-form-item>
            </el-form>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="jjVisible = false" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addJj" size="small">添 加</el-button>
        </span>
    </el-dialog>

    <el-dialog title="提示" v-bind:visible.sync="mxVisible" width="30%">
        <span slot="title">
            <h3 style="text-align:center;">添加模块型号</h3>
            <el-form label-position="labelPosition" label-width="70px">
                <el-form-item label="模块型号" style="display:flex">
                    <el-input v-model="Mo2" size="small" style="width:100px;"></el-input>
                    <span>-</span>
                    <el-input v-model="Mo1" size="small" style="width:100px"></el-input>
                </el-form-item>
                <el-form-item label="间距">
                    <el-select v-model="Spacing" size="small" placeholder="请选择">
                        <el-option v-for="item in options"
                                   v-bind:key="item.value"
                                   v-bind:label="item.label"
                                   v-bind:value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="mxVisible = false" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addMx" size="small">添 加</el-button>
        </span>
    </el-dialog>

    <div class="tb">
        <el-table v-bind:data="tableData"
                  border max-height="260"
                  class="table-container" key='oneTable'>
            <el-table-column prop="IC_Model"
                             label="IC型号"
                             width="113">
            </el-table-column>
            <el-table-column prop="V_REXT"
                             label="V值"
                             width="80">
            </el-table-column>
            <el-table-column prop="N_Value"
                             label="N值"
                             width="80">
            </el-table-column>
            <el-table-column prop="Gain"
                             label="G值"
                             width="77">
            </el-table-column>
            <el-table-column prop="operation"
                             label="操作"
                             width="123">
                <template slot-scope="scope">
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit(scope.$index, scope.row)">编辑</el-button>
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove(scope.$index, scope.row)">删除</el-button>
                    <el-button size="small" class="corparationBtn" style="display:none;" type="primary" v-on:click="postData(scope.$index, scope.row)">保存</el-button>
                    <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="cancelSave(scope.$index, scope.row)">取消</el-button>
                </template>
            </el-table-column>
        </el-table>

        <el-table v-bind:data="tableData1"
                  border max-height="260"
                  class="table-container0" style="margin-left:20px" key='twoTable'>
            <el-table-column prop="Spacing"
                             label="间距"
                             width="136">
            </el-table-column>
            <el-table-column prop="Least"
                             label="最低值"
                             width="98">
            </el-table-column>
            <el-table-column prop="Maximum"
                             label="最高值"
                             width="98">
            </el-table-column>
            <el-table-column prop="operation1"
                             label="操作"
                             width="140">
                <template slot-scope="scope">
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit1(scope.$index, scope.row)">编辑</el-button>
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove1(scope.$index, scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
    </div>
    <el-row>
        <el-button type="primary" size="mini" v-on:click="icVisible = true" style="margin:3px">添加IC</el-button>
        <el-button type="primary" size="mini" v-on:click="jjVisible = true" style="margin:3px;margin-left:420px">添加间距</el-button>
    </el-row>

    <div>
        <el-table v-bind:data="tableData2"
                  border max-height="260"
                  class="table-container1" key='threeTable'>
            <el-table-column prop="Mo2"
                             label="模块型号"
                             width="167">
            </el-table-column>
            <el-table-column prop="Spacing"
                             label="间距"
                             width="160">
            </el-table-column>
            <el-table-column prop="operation2"
                             label="操作"
                             width="150">
                <template slot-scope="scope">
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit2(scope.$index, scope.row)">编辑</el-button>
                    <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove2(scope.$index, scope.row)">删除</el-button>

                </template>
            </el-table-column>
        </el-table>
        <el-row>
            <el-button type="primary" size="mini" v-on:click="mxVisible = true" style="margin:5px">添加模型</el-button>
        </el-row>
    </div>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            tableData: [],
            tableData1: [],
            tableData2: [],
            showbtn: true,
            icVisible: false,
            jjVisible: false,
            mxVisible: false,
            labelPosition: 'right',
            IC_Model: '',
            V_REXT: '',
            N_Value: '',
            Gain: '',
            Spacing: '',
            Least: '',
            Maximum: '',
            Mo2: '',
            Mo1: '',
            Spacing: '',
            options: '',
            oldTrVal: '',
            oldTrVal1: '',
            oldTrVal2: '',
        },
        created: function () {
            this.gettableData()
        },
        methods: {
            gettableData: function () {
                axios.post('/small_Sample/Small_Sample_Arguments_Getdata').then(res => {
                    let tone = JSON.parse(res.data.Small_Sample_IC_Model_Arguments_list);
                    let ttwo = JSON.parse(res.data.Small_Sample_Spacing_Value_list);
                    let tthree = JSON.parse(res.data.Small_Sample_ICmodel_Spacing_list);
                    console.log(tone)
                    this.tableData = tone;
                    this.tableData1 = ttwo;
                    var arr = [];
                    this.tableData1.forEach(item => {
                        let obj = { value: item.Spacing, label: item.Spacing }
                        arr.push(obj)
                    })
                    this.options = arr;

                    this.tableData2 = tthree;
                }).catch(err => {
                    console.log("获取数据失败")
                })
            },
            addIC: function () {
                let icarr = { IC_Model: this.IC_Model, V_REXT: this.V_REXT, N_Value: this.N_Value, Gain: this.Gain }
                console.log(icarr)
                axios.post('/Small_Sample/Small_Sample_IC_Model_Arguments_modify_add', {
                    record: icarr
                }).then(res => {
                    this.icVisible = false;
                    this.$message({
                        message: res.data,
                        type: 'success'
                    });
                    this.gettableData()
                }).catch(err => {

                })
            },
            addJj: function () {
                let jjarr = { Spacing: this.Spacing, Least: this.Least, Maximum: this.Maximum, }
                axios.post('/Small_Sample/Small_Sample_Spacing_Value_add', {
                    record: jjarr
                }).then(res => {
                    this.jjVisible = false;
                    this.$message({
                        message: res.data,
                        type: 'success'
                    });
                    this.gettableData()
                }).catch(err => {

                })
            },
            addMx: function () {
                this.Mo1;
                this.Mo2;
                let a = this.Mo1 + '-' + this.Mo2
                let mxarr = { Mo2: a, Spacing: this.Spacing }
                axios.post('/Small_Sample/Small_Sample_ICmodel_Spacing_add', {
                    record_add: mxarr
                }).then(res => {
                    this.mxVisible = false;
                    this.$message({
                        message: res.data,
                        type: 'success'
                    });
                    this.gettableData()
                }).catch(err => {

                })
            },
            edit(index, row) {
                this.oldTrVal = row;
                changeInput(index, row)
            },
            edit1(index, row) {
                this.oldTrVal1 = row;
                changeInput1(index, row)
            },
            edit2(index, row) {
                this.oldTrVal2 = row;
                changeInput2(index, row)
            },
            remove(index, row) {
                var comfirm = confirm(`确认删除IC型号为${row.IC_Model}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_IC_Model_Arguments_delete", { id: row.Id }).then(res => {
                        this.$message({
                            message: '已删除!',
                            type: 'success'
                        });
                        this.tableData.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({
                            message: '无法删除!',
                            type: 'warning'
                        });
                    })
                }
            },
            remove1(index, row) {
                var comfirm = confirm(`确认删除间距为${row.Spacing}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_Spacing_Value_delete", { id: row.Id }).then(res => {
                        this.$message({
                            message: '已删除!',
                            type: 'success'
                        });
                        this.tableData1.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData1.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({
                            message: '无法删除!',
                            type: 'warning'
                        });
                    })
                }
            },
            remove2(index, row) {
                var comfirm = confirm(`确认删除模块型号为${row.Mo2}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_ICmodel_Spacing_delete", { id: row.Id }).then(res => {
                        this.$message({
                            message: '已删除!',
                            type: 'success'
                        });
                        this.tableData2.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData2.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({
                            message: '无法删除!',
                            type: 'warning'
                        });
                    })
                }
            },
            postData(index, row) {
                saveICdata(index, row)
            },
            cancelSave(index, row) {
                cancelData(index,row)
            }
        }
    });
    function changeInput(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index];
        targetTr.children[0].innerHTML = `<input type='text' value="${row.IC_Model}" />`;
        targetTr.children[1].innerHTML = `<input type='text' value="${row.V_REXT}" />`;
        targetTr.children[2].innerHTML = `<input type='text' value="${row.N_Value}" />`;
        targetTr.children[3].innerHTML = `<input type='text' value="${row.Gain}" />`;

        $(targetTr.children[4].children[0].children[0]).hide();
        $(targetTr.children[4].children[0].children[1]).hide();
        $(targetTr.children[4].children[0].children[2]).show();
        $(targetTr.children[4].children[0].children[3]).show();
    }
    function changeInput1(index, row) {
        var targetTr1 = $(".table-container0").find(".el-table__row")[index];
        targetTr1.children[0].innerHTML = `<input type='text' value="${row.Spacing}" />`;
        targetTr1.children[1].innerHTML = `<input type='text' value="${row.Least}" />`;
        targetTr1.children[2].innerHTML = `<input type='text' value="${row.Maximum}" />`;

        $(targetTr1.children[3].children[0].children[0]).hide();
        $(targetTr1.children[3].children[0].children[1]).hide();
    }
    function changeInput2(index, row) {
        var targetTr2 = $(".table-container1").find(".el-table__row")[index];
        targetTr2.children[0].innerHTML = `<input type='text' value="${row.Mo2}" />`;
        targetTr2.children[1].innerHTML = `<input type='text' value="${row.Spacing}" >`;

        $(targetTr2.children[2].children[0].children[0]).hide();
        $(targetTr2.children[2].children[0].children[1]).hide();
    }
    //保存编辑数据
    function saveICdata(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index].cells;
        var inputvalue = [];
        inputvalue.push(row.Id)
        for (let i = 0; i < targetTr.length - 1; i++) {
            inputvalue.push(targetTr[i].children[0].value)       
        }
        var obj = { Id: inputvalue[0], IC_Model: inputvalue[1], V_REXT: inputvalue[2], N_Value: inputvalue[3], Gain: inputvalue[4] };
        axios.post("/Small_Sample/Small_Sample_IC_Model_Arguments_modify", { record_modify: obj }).then(res => {
            app.$message({
                message: res.data,
                type: 'success'
            });
            var targetTr = $(".table-container").find(".el-table__row")[index];
            targetTr.children[0].innerHTML = inputvalue[0]
            targetTr.children[1].innerHTML = inputvalue[1]
            targetTr.children[2].innerHTML = inputvalue[2]
            targetTr.children[3].innerHTML = inputvalue[3]

           
        }).catch(err => {
            app.$message({
                message: '连接失败',
                type: 'warning'
            });
        })
    }
    //取消保存
    function cancelData(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index];
        targetTr.children[0].innerHTML = app.oldTrVal.IC_Model;
        targetTr.children[1].innerHTML = app.oldTrVal.V_REXT;
        targetTr.children[2].innerHTML = app.oldTrVal.N_Value;
        targetTr.children[3].innerHTML = app.oldTrVal.Gain;

        $(targetTr.children[4].children[0].children[0]).show();
        $(targetTr.children[4].children[0].children[1]).show();
        $(targetTr.children[4].children[0].children[2]).hide();
        $(targetTr.children[4].children[0].children[3]).hide();
    }
</script>
