using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using JianHeMES.Models;
using Newtonsoft.Json.Linq;
using Newtonsoft.Json;


namespace JianHeMES.Controllers
{
    public class Personnel_Quality_objectivesController : Controller
    {
        private ApplicationDbContext db = new ApplicationDbContext();
        public class Rink
        {
            public decimal toal { get; set; }
            public string assdepar { get; set; }
            public string dp_gur { get; set; }

        }     
        public ActionResult Index()
        {
            if (Session["User"] == null)
            {
                return RedirectToAction("Login", "Users", new { col = "Personnel_Quality_objectives", act = "Index" });
            }
            return View();
        }


        public ActionResult Summarizing()
        {
            if (Session["User"] == null)
            {
                return RedirectToAction("Login", "Users", new { col = "Personnel_Quality_objectives", act = "Summarizing" });
            }
            return View();
        }



        #region --------------------DepartmentList()检索部门
        public ActionResult DepartmentList()
        {
            var depar = db.Personnel_IndexName.OrderByDescending(m => m.Id).Select(c => c.DepartmentData).Distinct();
            return Content(JsonConvert.SerializeObject(depar));
        }
        #endregion

        #region --------------------AssessmentList()检索考核指标比例版本
        public ActionResult AssessmentList()
        {
            var indica = db.Personnel_Assessment_indicators.OrderByDescending(m => m.Id).Select(c => new { c.indName, c.Price }).ToList();
            return Content(JsonConvert.SerializeObject(indica));
        }
        #endregion

        #region -----质量目标达成状况统计表显示
        public ActionResult Quality(string departmentdata, int year, int month)
        {
            //传入值有效，查数据
            var data = db.Personnel_Quality_objectives.Where(c => c.DepartmentData == departmentdata && c.Year == year && c.Month <= month).ToList();
            JObject userItem = new JObject();
            JObject userJobject = new JObject();
            int i = 0;
            //被考核部门有几个,此被考核部门班组有几个，项目、指标名称有几组
            var departmentlist = data.Select(c => c.AssetDepartment).Distinct().ToList();
            foreach (var department in departmentlist)//循环被考核部门
            {
                var DG_list = data.Where(c => c.AssetDepartment == department).Select(c => c.DP_Group).Distinct().ToList();
                foreach (var dg in DG_list)//循环被考核部门的班组
                {
                    var project_list = data.Where(c => c.AssetDepartment == department && c.DP_Group == dg).Select(c => c.Project).Distinct().ToList();
                    foreach (var project in project_list)//循环被考核部门的项目
                    {
                        var depart_DG_project_datalist = data.Where(c => c.AssetDepartment == department && c.DP_Group == dg && c.Project == project).Select(c => c.IndexName).ToList();
                        foreach (var target in depart_DG_project_datalist)//循环被考核部门的指标名称
                        {
                            var asset_target = data.Where(c => c.AssetDepartment == department && c.DP_Group == dg && c.Project == project && c.IndexName == target).Select(c => c.Target + c.Target_value + c.Target2).ToList();
                            foreach (var itge in asset_target)//循环被考核部门的目标值
                            {
                                var tarodlist = data.Where(c => c.AssetDepartment == department && c.DP_Group == dg && c.Project == project && c.IndexName == target && c.Target + c.Target_value + c.Target2 == itge).OrderBy(c => c.Month).ToList();
                                //ID
                                userItem.Add("Id", tarodlist.FirstOrDefault().Id);
                                //部门
                                userItem.Add("AssetDepartment", tarodlist.FirstOrDefault().AssetDepartment);
                                //班组
                                userItem.Add("DP_Group", tarodlist.FirstOrDefault().DP_Group);
                                //项目
                                userItem.Add("project", tarodlist.FirstOrDefault().Project);
                                //指标名称
                                userItem.Add("indexName", tarodlist.FirstOrDefault().IndexName);
                                //目标值
                                userItem.Add("target", tarodlist.FirstOrDefault().Target + tarodlist.FirstOrDefault().Target_value + tarodlist.FirstOrDefault().Target2);
                                foreach (var da in tarodlist)//循环月份
                                {
                                    //月份实际完成值
                                    userItem.Add(da.Month.ToString(), da.Actual_completion_value + da.Actua1);
                                }
                                userJobject.Add(i.ToString(), userItem);
                                userItem = new JObject();
                                i++;
                            }
                        }
                    }
                }
            }
            return Content(JsonConvert.SerializeObject(userJobject));
        }

        #endregion

        #region----优秀班组评优汇总表
        public ActionResult Excellent(int year, int month)
        {
            JObject output1 = new JObject();
            JArray userItem = new JArray();
            var Appraising = db.Personnel_Quality_objectives.Where(c => c.Year == year && c.Month == month).ToList();
            var department = Appraising.Select(c => c.AssetDepartment).Distinct().ToList();
            List<Rink> ment = new List<Rink>();
            foreach (var item_eng in department)
            {
                var dp_ge = Appraising.Where(c => c.AssetDepartment == item_eng).Select(c => c.DP_Group).Distinct().ToList();
                foreach (var ihte in dp_ge)
                {
                    var peoject = Appraising.Where(c => c.AssetDepartment == item_eng && c.DP_Group == ihte).Select(c => c.Project).Distinct().ToList();
                    var item1 = Appraising.Where(c => c.AssetDepartment == item_eng && c.DP_Group == ihte).ToList();
                    //ID
                    output1.Add("Id", item1.FirstOrDefault().Id);
                    //被考核部门
                    output1.Add("AssetDepartment", item1.FirstOrDefault().AssetDepartment);
                    //班组
                    output1.Add("DP_Group", item1.FirstOrDefault().DP_Group);
                    JArray merge = new JArray();
                    decimal Total_Points = 0;
                    foreach (var item_peoject in peoject)
                    {
                        JObject output = new JObject();
                        var item = Appraising.Where(c => c.AssetDepartment == item_eng && c.DP_Group == ihte && c.Project == item_peoject).ToList();

                        //项目
                        output.Add("Project", item.FirstOrDefault().Project);
                        //指标名称
                        output.Add("IndexName", item.FirstOrDefault().IndexName);
                        //目标值
                        output.Add("Target_value", item.FirstOrDefault().Target + item.FirstOrDefault().Target_value + item.FirstOrDefault().Target2);
                        //实际值
                        output.Add("Actual_completion_value", item.FirstOrDefault().Actual_completion_value + item.FirstOrDefault().Actua1);
                        string ikge = "";
                        //考核部门
                        foreach (var it in item)
                        {
                            ikge = ikge + it.DepartmentData + ",";
                        }
                        output.Add("DepartmentData", ikge);
                        decimal su = 100;
                        decimal Total = 0;
                        var project = item.FirstOrDefault().Project;
                        var de = db.Personnel_Assessment_indicators.Where(c => c.indName == project).Select(c => c.Price).FirstOrDefault();
                        
                        if (item.FirstOrDefault().Target_value <= item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData != "人力资源部" && item.FirstOrDefault().DepartmentData != "行政后勤部")
                        {
                            int danx = 0;
                            output.Add("Adanx", danx);//单项得分
                            decimal dexfen = Total = danx * de;
                            output.Add("Adefen", dexfen);//得分小计
                        }
                        else if (item.FirstOrDefault().Target_value > item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData != "人力资源部" && item.FirstOrDefault().DepartmentData != "行政后勤部")
                        {
                            output.Add("Bdanx", su);//单项得分
                            decimal Bdefen = Total = su * de;
                            output.Add("Bdefen", Bdefen);//得分小计
                        }
                        else if (item.FirstOrDefault().Target_value == item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "人力资源部")
                        {
                            output.Add("Cdanx", su);
                            decimal Cdefen = Total = su * de;
                            output.Add("Cdefen", Cdefen);
                        }
                        else if (item.FirstOrDefault().Target_value < item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "人力资源部")
                        {
                            decimal rte = su - (decimal)(item.FirstOrDefault().Actual_completion_value - item.FirstOrDefault().Target_value);//单项得分
                            output.Add("Ddanx", rte);//单项得分
                            decimal Ddefen = Total = rte * de;//得分小计
                            output.Add("Ddefen", Ddefen);//得分小计
                        }
                        else if (item.FirstOrDefault().Target_value > item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "人力资源部")
                        {
                            decimal tef = su + (decimal)(item.FirstOrDefault().Target_value - item.FirstOrDefault().Actual_completion_value);//单项得分
                            output.Add("Edanx", tef);//单项得分
                            decimal Edefen = Total = tef * de;//得分小计
                            output.Add("Edefen", Edefen);//得分小计
                        }
                        else if (item.FirstOrDefault().Target_value == item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "行政后勤部")
                        {
                            output.Add("Fdanx", su);//单项得分
                            decimal Fdefen = Total = su * de;//得分小计
                            output.Add("Fdefen", Fdefen);//得分小计
                        }
                        else if (item.FirstOrDefault().Target_value < item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "行政后勤部")
                        {
                            decimal dt = su + (decimal)(item.FirstOrDefault().Actual_completion_value - item.FirstOrDefault().Target_value);//单项得分
                            output.Add("Gdanx", dt);//单项得分
                            decimal Gdefen = Total = dt * de;//得分小计
                            output.Add("Gdefen", Gdefen);  //得分小计                                    
                        }
                        else if (item.FirstOrDefault().Target_value > item.FirstOrDefault().Actual_completion_value && item.FirstOrDefault().DepartmentData == "行政后勤部")
                        {
                            decimal sde = su - (decimal)(item.FirstOrDefault().Target_value - item.FirstOrDefault().Actual_completion_value);//单项得分
                            output.Add("Hdanx", sde);//单项得分
                            decimal Hdefen = Total = sde * de;//得分小计
                            output.Add("Hdefen", Hdefen); //得分小计 
                        }
                        Total_Points = Total_Points + Total;
                        merge.Add(output);
                        output = new JObject();
                    }
                    output1.Add("merge", merge);
                    output1.Add("total_points", Total_Points);
                    output1.Add("PM", "");
                    output1.Add("JF", "");
                    merge = new JArray();
                    userItem.Add(output1);
                    output1 = new JObject();
                }
            }

            List<Rink> rinklist = new List<Rink>();//所有部门、组、总分
            foreach(var i in userItem)
            {
                Rink record = new Rink();
                record.assdepar = i["AssetDepartment"].ToString();
                record.dp_gur = i["DP_Group"].ToString();
                record.toal = Convert.ToDecimal(i["total_points"]);
                rinklist.Add(record);
            }
            //需要排除<5人的班组
            var excep = db.Personnel_Ranking_management.Where(c => c.GroupNumber < 5).Select(c => new {c.AsseDepartment,c.DP_Group,c.GroupNumber }).ToList();
            foreach(var i in excep)
            {
                var exlist = rinklist.Where(c => c.assdepar.Contains(i.AsseDepartment) && c.dp_gur.Contains(i.DP_Group)).ToList();
                rinklist.Except(exlist);
            }

            var rank = new JArray(userItem.OrderByDescending(c => c["total_points"]));//按总分排序
            var pmm = rinklist.OrderBy(c=>c.toal).Select(c => c.toal).Distinct().Where(c => c >= 90).Take(5).ToList();//取出前5名且大于90的分数数组
            //var bb = aa.Where(c => Convert.ToInt32(c["total_points"]) >= Convert.ToInt32(pmm[4])).ToList();//取出前五名分数记录
            //var cc = bb.Where(g => g["total_points"].Count() > 1).ToList();//
            int t = 1;//名次
            foreach (var p in pmm)
            {
                int count = rank.Count(c =>Convert.ToDecimal(c["total_points"]) == p);
                if (count > 1)
                {
                    
                    var list = rank.Where(c => Convert.ToDecimal(c["total_points"]) == p).ToList();
                    //相关违纪记录
                    List<Personnel_Ranking_management> recordlist = new List<Personnel_Ranking_management>();
                    foreach (var item in list)//默认1条
                    {
                        recordlist.AddRange(db.Personnel_Ranking_management.Where(c=>c.AsseDepartment== item["assdepar"].ToString() && c.DP_Group == item["dp_gur"].ToString() && c.Year ==year && c.Month == month));
                    }
                    recordlist = recordlist.OrderBy(c => c.Disciplinary).ToList();//
                    foreach(var i in recordlist)
                    {
                        int first_count = recordlist.Count(c => c.Disciplinary == recordlist.FirstOrDefault().Disciplinary);
                        if (first_count == 1)
                        {
                            rank.Where(c => c["AssetDepartment"].ToString() == recordlist.FirstOrDefault().AsseDepartment && c["DP_Group"].ToString() == recordlist.FirstOrDefault().DP_Group && Convert.ToDecimal(c["total_points"]) == p).FirstOrDefault()["PM"] = "第" + t + "名";
                            t++;
                            recordlist.RemoveAt(0);
                            recordlist = recordlist.OrderBy(c => c.Disciplinary).ToList();
                        }
                        else
                        {
                            //违纪数量相同，比较出勤率
                            List<Personnel_Ranking_management> recordlist2 = recordlist.Where(c=>c.Disciplinary==recordlist.FirstOrDefault().Disciplinary).ToList();
                            int first_count2 = recordlist.Count(c => c.Disciplinary == recordlist2.FirstOrDefault().Disciplinary);
                            if (first_count2 == 1)
                            {
                                rank.Where(c => c["AssetDepartment"].ToString() == recordlist2.FirstOrDefault().AsseDepartment && c["DP_Group"].ToString() == recordlist2.FirstOrDefault().DP_Group && Convert.ToDecimal(c["total_points"]) == p).FirstOrDefault()["PM"] = "第" + t + "名";
                                t++;
                                recordlist.RemoveAt(0);
                                recordlist = recordlist.OrderBy(c => c.Disciplinary).ToList();
                            }
                            else
                            {
                                foreach ( var tt in recordlist2)
                                {
                                    rank.Where(c => c["AssetDepartment"].ToString() == recordlist2.FirstOrDefault().AsseDepartment && c["DP_Group"].ToString() == recordlist2.FirstOrDefault().DP_Group && Convert.ToDecimal(c["total_points"]) == p).FirstOrDefault()["PM"] = "第" + t + "名";
                                }
                                t = t + recordlist2.Count;
                            }
                            recordlist.Except(recordlist2);
                        }
                    }
                }
                else
                {
                    //var re = rank.Where(c=> Convert.ToDecimal(c["total_points"])== p).FirstOrDefault();
                    //re["PM"] = "第"+ t +"名";
                    rank.Where(c => Convert.ToDecimal(c["total_points"]) == p).FirstOrDefault()["PM"] = "第" + t + "名"; 
                    t++;
                }
                
            }
            return Content(JsonConvert.SerializeObject(rank));
        }

        #endregion

        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Personnel_Quality_objectives personnel_Quality_objectives = db.Personnel_Quality_objectives.Find(id);
            if (personnel_Quality_objectives == null)
            {
                return HttpNotFound();
            }
            return View(personnel_Quality_objectives);
        }

        #region---添加数据
        public ActionResult Create()
        {
            if (Session["User"] == null)
            {
                return RedirectToAction("Login", "Users", new { col = "Personnel_Leave", act = "Index" });
            }
            return View();
        }

        [HttpPost]

        public ActionResult Create(Personnel_Quality_objectives personnel_Quality_objectives)
        {
            if (personnel_Quality_objectives != null)
            {
                if (db.Personnel_Quality_objectives.Count(c => c.DepartmentData == personnel_Quality_objectives.DepartmentData && c.DP_Group == personnel_Quality_objectives.DP_Group && c.Project == personnel_Quality_objectives.Project && c.Year == personnel_Quality_objectives.Year && c.Month == personnel_Quality_objectives.Month) > 0)
                {
                    return Content("已有重复数据，请重新输入数据！");
                }
                personnel_Quality_objectives.CreateDate = DateTime.Now;
                personnel_Quality_objectives.Creator = ((Users)Session["user"]).UserName;
                db.Personnel_Quality_objectives.Add(personnel_Quality_objectives);
                db.SaveChanges();
                return Content("true");
            }
            return Content("新增出错，请确认数据是否规范！");
        }
        #endregion

        #region----批量添加数据
        public ActionResult Batch_InputStaff()
        {
            if (Session["User"] == null)
            {
                return RedirectToAction("Login", "Users", new { col = "Personnel_Quality_objectives", act = "Batch_InputStaff" });
            }
            return View();
        }

        [HttpPost]
        public ActionResult Batch_InputStaff(List<Personnel_Quality_objectives> inputList)
        {
            string repeat = null;
            foreach (var item in inputList)
            {
                if (db.Personnel_Quality_objectives.Count(c => c.DepartmentData == item.DepartmentData && c.AssetDepartment == item.AssetDepartment && c.DP_Group == c.DP_Group && c.Project == item.Project && c.IndexName == item.IndexName) > 0)
                    repeat = repeat + item.AssetDepartment + item.DP_Group + item.Project + item.IndexName + item.DepartmentData + ",";
            }
            if (!string.IsNullOrEmpty(repeat))
            {
                return Content(repeat + "已经有相同的数据，请重新输入");
            }
            if (ModelState.IsValid)
            {
                db.Personnel_Quality_objectives.AddRange(inputList);
                db.SaveChanges();
                return Content("true");
            }
            return Content("false");
        }
        #endregion

        #region-----修改方法
        public ActionResult Edit(Personnel_Quality_objectives personnel_Quality_objectives)
        {
            if (personnel_Quality_objectives != null)
            {
                personnel_Quality_objectives.ModifyTime = DateTime.Now;
                personnel_Quality_objectives.ModifyName = ((Users)Session["User"]).UserName;
                db.Entry(personnel_Quality_objectives).State = EntityState.Modified;
                db.SaveChangesAsync();
                return Content("true");
            }
            return Content("修改出错，请确认数据是否正确");
        }
        #endregion

        #region---删除方法
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            Personnel_Quality_objectives personnel_Quality_objectives = db.Personnel_Quality_objectives.Find(id);
            if (personnel_Quality_objectives == null)
            {
                return HttpNotFound();
            }
            return View(personnel_Quality_objectives);
        }

        // POST: Personnel_Quality_objectives/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            Personnel_Quality_objectives personnel_Quality_objectives = db.Personnel_Quality_objectives.Find(id);
            db.Personnel_Quality_objectives.Remove(personnel_Quality_objectives);
            db.SaveChanges();
            return RedirectToAction("Index");
        }
        #endregion

        #region------保存出勤违纪记录表数据表信息
        public ActionResult Ranking_Points()
        {
            if (Session["User"] == null)
            {
                return RedirectToAction("Login", "Users", new { col = "Personnel_Quality_objectives", act = "Batch_InputStaff" });
            }
            return View();
        }

        public ActionResult Ranking_Points(List<Personnel_Ranking_management> rankList)
        {
            string repeat = null;
            foreach (var item in rankList)
            {
                if (db.Personnel_Ranking_management.Count(c => c.AsseDepartment == item.AsseDepartment && c.DP_Group == c.DP_Group && c.Year == item.Year && c.Month == item.Month)>0)
                    repeat = repeat + item.AsseDepartment + item.DP_Group + item.Year + item.Month + ",";
            }
            if (!string.IsNullOrEmpty(repeat))
            {
                return Content(repeat + "已经有相同的数据，请重新输入");
            }
            if (ModelState.IsValid)
            {
                db.Personnel_Ranking_management.AddRange(rankList);
                db.SaveChangesAsync();
                return Content("true");
            }
            return Content("false");
        }
        #endregion

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
