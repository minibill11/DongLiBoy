@model IEnumerable<JianHeMES.Models.Personnel_Recruitment>

@{
    ViewBag.Title = "招聘周报";
}
<script src="~/Scripts/axios.min.js"></script>
<style>
    .positions{
        width:50px;
        float: right;
    }
    #tabletop{
        
    }
    .color{
        color:red;
        font-weight: 600px;
        font-size:18px;
        font-style: italic;
    }
    .color2{
        background-color:red;
    }
 table thead{
        background-color: rgba(255, 255, 0, 0.712);
    }
    .myTable tbody td{
        display:inline-block;
        padding:5px;
        /* border:1px solid black;
        border-collapse:collapse; */
    }
    .myTable{
        border-collapse:collapse;
    }
    th{
        text-align: center;
    }
    [v-cloak]{
        display: none;
    }
    h4{
       
        text-align: center;
    }
    .spanone{
        display:inline-block;
        margin-left:420px;
        margin-bottom:18px;
        font-size:19px;
    }
    .forsize{
        width:1157.1px;
        max-height:650px;
        text-align:center;
        overflow-y: auto;
        overflow-x: hidden;

    }
    .myTable tbody td{
        display: inline-block;
        float:left;
        border-left: 1px solid black;
        /* border:0.54px solid black; */
        height:35px;
    }
    .myTable tbody td:last-child{
        border-right: 1px solid black;
    }
    .myTable tbody tr{
        border-bottom: 1px solid black;
    }
</style>
<!-- <h4>招聘周报</h4> -->
    <div id="app" style="margin-top: 29px;">
        <span class="spanone">
            <select v-model="year">
                <option></option>
                <option>2019</option>
                <option>2020</option>
                <option>2021</option>
            </select>
            年
            <select v-model="month">
                <option></option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
                <option>6</option>
                <option>7</option>
                <option>8</option>
                <option>9</option>
                <option>10</option>
                <option>11</option>
                <option>12</option>
            </select>
            月第
            <select v-model="week">
                <option></option>
                <option>1</option>
                <option>2</option>
                <option>3</option>
                <option>4</option>
                <option>5</option>
            </select>
            周招聘周报
        </span>
        <p class="text-right positions inputrigth">
            @Html.ActionLink("输入", "RecruitmentInput")
        </p>
    <table border="1" style="width:1140px;">
        <thead>
            <tr>
                <th rowspan="2" style="width:100px;">部门</th>
                <th rowspan="2" style="width:135px;">需求岗位</th>
                <th rowspan="2" style="width:85px;">编制</th>
                <th rowspan="2" style="width:85px;">需求人数</th>
                <th rowspan="2" style="width:85px;">录用人数</th>
                <th rowspan="2" style="width:85px;">需求未完<br>成人数</th>
                <th rowspan="2" style="width:105px;">申请日期</th>
                <th rowspan="2" style="width:105px;">到岗日期</th>
                <th colspan="2" style="width:180px;">招聘周期（天）</th>
                <th rowspan="2" style="width:65px;">招聘达<br/>成率</th>
                <th rowspan="2" style="width:140px;">操作</th>
            </tr>
            <tr>
                <th>计划</th>
                <th>实际</th>
            </tr>
        </thead>
    </table>
    <div class="forsize">
    <table id="tabletop" class="myTable" style="width:1140px;">
            <!-- 固定表头方法：新建表格作为头部。body表格宽度超出宽度等于滚动条宽度；设置内联块；body表格使用左浮解决间隔问题 -->
            <tbody>
                <tr id="forClone" class="rowNum" v-cloak v-for="(item,index) in list" v-bind:key="item.index">
                    <td style="width:100px;">{{item.Department_weekly}}</td>
                    <td style="width:135px;">{{item.Demand_jobs}}</td>
                    <td style="width:85px;">{{item.Compile}}</td>
                    <td style="width:85px;">{{item.Demand_number}}</td>
                    <td style="width:85px;">{{item.Employed}}</td>              
                    <td style="width:85px;">{{item.Unfinished_nember}}</td>     
                    <td style="width:105px;">{{item.Application_date | timeFormat}}</td> <!-- 申请日期 -->
                    <td style="width:105px;">{{item.Work_date | timeFormat}}</td>        <!-- 到岗日期 -->
                    <td style="width:74.5px;">{{item.Invite_Plan_Cycle}}</td>
                    <td style="width:74.5px;" :title="(demandDate(item.Application_date,item.Work_date) < 0)?'所填到岗日期早于申请日期！':''" :class="(demandDate(item.Application_date,item.Work_date) > item.Invite_Plan_Cycle || demandDate(item.Application_date,item.Work_date) <0)?'color':''">{{demandDate(item.Application_date,item.Work_date)}}</td>
					<td style="width:65px;" v-text="((item.Employed / item.Demand_number)*100).toFixed(2) + '%'"></td>
                    <td style="width:141px;">
                    <a v-show="showinnerlink" class="showa" :href="'/Personnel_Recruitment/Edit/' + item.Id" >编辑</a>
                    <!-- <a :href="'/Personnel_Recruitment/Details/' + item.Id" >详细</a> -->
                    <a v-show="showinnerlink" class="showa" :href="'/Personnel_Recruitment/Delete/' + item.Id" style="margin-left:15px;">删除</a>
                    </td>
                </tr>
            </tbody>
    </table>
    </div>
    <table border="1">
            <tbody>
                <tr style="height:35px;text-align:center;">
                    <td style="width:934px;">平均值：</td>
                    <td id="averged" style="width:206px;">{{avergeds}}</td>
                </tr>
            </tbody>
    </table>
</div>
    <script>
        function checkRoles(list, roleName) {   //检测权限
            var flag = false
            if (list && roleName) {
                for (let item in list) {
                    if (list[item] == roleName) {
                        flag = true
                    }
                }
            }
            return flag
        }

    Vue.filter("timeFormat",function(val){    //时间格式过滤器
       if(val == null){
            val =""
       }else{
            var mydata = new Date(val);
            var startYear = mydata.getFullYear();
            var startMonth = (mydata.getMonth() + 1).toString().padStart(2,"0");
            var startDay = mydata.getDate().toString().padStart(2,"0");
            return startYear + "-" + startMonth + "-" + startDay 
       }

    })
    var vm = new Vue({
        el:"#app",
        data:{
            year:"",
            month:"",
            week:"",
            list: "",
            showinnerlink:false
        },
        mounted() {
            var roles = JSON.parse(localStorage.getItem("rigths"))
            if (checkRoles(roles, '招聘周报操作')) {
                $('.inputrigth').show()
            } else
            {
                $('.inputrigth').hide()
            }

            if (checkRoles(roles, '招聘周报编辑按钮')) {
                this.showinnerlink = true
            } else {
                this.showinnerlink = false
            }
            this.getDefualtInfo()
        },
        methods: {
            demandDate(date1,date2){  //date1:小日期   date2:大日期
                 if(date2 ==null){
                     var sdate = new Date(date1); 
                     var now =new Date(); 
                     var days = now.getTime() - sdate.getTime(); 
              　　  var day = parseInt(days / (1000 * 60 * 60 * 24)); 
              　　  return day;
                 }else{
                    var sdate = new Date(date1); 
              　　  var now = new Date(date2); 
              　　  var days = now.getTime() - sdate.getTime(); 
              　　  var day = parseInt(days / (1000 * 60 * 60 * 24)); 
              　　  return day; 
                 }
            },
            getDefualtInfo() {
                axios.post('/Personnel_Recruitment/DefaualInfo').then(res =>{
                    var targetTimeStr = res.data.Time
                    var firstStep = targetTimeStr.split(",");
                    var secondStep = []
                    for (let i = 0; i < firstStep.length; i++) {
                        var targetArr = firstStep[i].split(":")
                        secondStep.push(targetArr)
                    }
                    this.year = secondStep[0][1];
                    this.month = secondStep[1][1];
                    this.week = secondStep[2][1];
                }).catch(err=>{ "获取最新数据失败！" })
            }
        },
        watch:{  //改变触发
            year:function(){
                if(this.year !="" && this.month !="" && this.week !=""){
                    postTime(this.year,this.month,this.week);
                }
            },
            month:function(){
                if(this.year !="" && this.month !="" && this.week !=""){
                    postTime(this.year,this.month,this.week);
                }
            },
            week:function(){
                if(this.year !="" && this.month !="" && this.week !=""){
                    postTime(this.year,this.month,this.week);
                }
            },
        },
        computed:{ //自动触发
            avergeds:function(){   //计算平均值
                 var lists = this.list;
                 console.log(lists)
                if(lists ==""){

                }else{
                     var Employed_count =0;
                     var Demand_number_count = 0;
                 for(var i in lists){    //改变算法：由各完成率的平均值变为如下
                     if (lists[i].Work_date == null && this.demandDate(lists[i].Application_date, lists[i].Work_date) < lists[i].Invite_Plan_Cycle)  //未到周期也没到岗的数据不计算在平均完成率之内  到岗日期为空（未招到）&& 未到周期（实际仍小于计划）
                     {
                     } else {   //相反的情况都会计算入平均完成率之内
                         Employed_count += lists[i].Employed   //录入人数
                         Demand_number_count += lists[i].Demand_number  //需求人数
                     }
                 }
                 return  ((Employed_count/Demand_number_count)*100).toFixed(2)+"%";
                }

            },
            dynDate(){
               
            }
        }
     })

    function postTime(y,m,w){
         $.ajax({
             url: "/Personnel_Recruitment/Recruitment",
            type: "post",
            data: {
                Year: y,
                Month: m,
                Week: w
            },
            success:function(dat){
                targetdata = JSON.parse(dat);
             if(targetdata.length > 0){
                vm.list = targetdata;
             }else{
                vm.list = "";
                alert("本周无数据记录！"); 
             }
              //  console.log(targetdata);
            },
            error:function(dat){
                alert("查询失败！")
            }
         })
     }
    </script>