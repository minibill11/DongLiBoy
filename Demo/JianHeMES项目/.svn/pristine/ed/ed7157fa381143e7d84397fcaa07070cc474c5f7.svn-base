
<script type="text/template" id="KPI_StemFrom_Component">
    <el-row>
        <el-row class="table-top">
            <div class="table-top-left">
                <el-select v-model="department"
                           placeholder="请选择部门"
                           size="small"
                           filterable
                           clearable>
                    <el-option v-for="item in departmentlist"
                               :key="item.value"
                               :label="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
                <el-select v-model="group"
                           placeholder="请选择班组"
                           size="small"
                           filterable
                           clearable>
                    <el-option v-for="item in departmentGrouplist"
                               :key="item.value"
                               :label="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
                <el-select v-model="extime"
                           placeholder="请选择执行时间"
                           size="small"
                           filterable
                           clearable>
                    <el-option v-for="item in executelist"
                               :key="item.value"
                               :label="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
                <el-button type="primary" @@click="onQuerySubmit" size="small">查询</el-button>
            </div>
            <div class="table-top-right">
                <el-button type="primary" v-show="inputlylimit" @@click="showChange" size="small" plain>录入数据</el-button>
                <a href="KPI_Daily?show=效率指标"><el-button type="primary" size="small" plain>效率/品质指标汇总表</el-button></a>
                <el-button type="success" @@click="exportExcel" size="small" plain>导出EXCEL表</el-button>
            </div>
        </el-row>
        <el-row class="table-mid">
            <el-table :data="tableList"
                      max-height="600"
                      ref="filterTable"
                      size="small"
                      stripe
                      border>
                <el-table-column type="index" label="序号" width="50"></el-table-column>
                <el-table-column prop="Department" label="部门" min-width="110" sortable>
                    <template slot-scope="scope">
                        <el-select v-if="scope.row.edit" v-model="scope.row.Department" size="mini" filterable clearable>
                            <el-option v-for="item in departmentlist"
                                       :key="item.value"
                                       :label="item.value"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                        <span v-else>{{scope.row.Department}}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="Group" label="班组" min-width="110" sortable>
                    <template slot-scope="scope">
                        <el-select v-if="scope.row.edit" v-model="scope.row.Group" size="mini" filterable clearable>
                            <el-option v-for="item in grouplist"
                                       :key="item.value"
                                       :label="item.value"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                        <span v-else>{{scope.row.Group}}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="IndicatorsName" label="考核指标名称" min-width="110">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.IndicatorsName = $event"
                                    :nametext="scope.row.IndicatorsName"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="IndicatorsDefine" label="指标定义" min-width="110">
                    <template slot-scope="scope">
                        <input-edit datatype="textarea"
                                    v-on:input="scope.row.IndicatorsDefine = $event"
                                    :nametext="scope.row.IndicatorsDefine"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>

                <el-table-column prop="ComputationalFormula" label="计算公式" min-width="110">
                    <template slot-scope="scope">
                        <input-edit datatype="textarea"
                                    v-on:input="scope.row.ComputationalFormula = $event"
                                    :nametext="scope.row.ComputationalFormula"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="IndicatorsValue" label="目标值" min-width="110">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.IndicatorsValue = $event"
                                    :nametext="scope.row.IndicatorsValue"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="IndicatorsValueUnit" label="目标值单位" min-width="110" sortable
                                 :filters="filterObj.IndicatorsValueUnit"
                                 :filter-method="filterHandler">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.IndicatorsValueUnit = $event"
                                    :nametext="scope.row.IndicatorsValueUnit"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="DataName" label="数据名称" min-width="120">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.DataName = $event"
                                    :nametext="scope.row.DataName"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="Cycle" label="数据提供周期(天/周/月)" min-width="105" sortable
                                 :filters="filterObj.Cycle"
                                 :filter-method="filterHandler">
                    <template slot-scope="scope">
                        <el-select v-if="scope.row.edit" v-model="scope.row.Cycle" size="mini">
                            <el-option label="天" value="天"></el-option>
                            <el-option label="周" value="周"></el-option>
                            <el-option label="月" value="月"></el-option>
                        </el-select>
                        <span v-else>{{scope.row.Cycle}}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="SourceDepartment" label="数据来源工号" min-width="110">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.SourceDepartment = $event"
                                    :nametext="scope.row.SourceDepartment"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="DataInputor" label="数据录入姓名" min-width="100">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.DataInputor = $event"
                                    :nametext="scope.row.DataInputor"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="DataInputTime" label="录入时间" min-width="140">
                    <template slot-scope="scope">
                        <input-edit datatype="string"
                                    v-on:input="scope.row.DataInputTime = $event"
                                    :nametext="scope.row.DataInputTime"
                                    :isedit="scope.row.edit"></input-edit>
                    </template>
                </el-table-column>
                <el-table-column prop="IndicatorsType" label="考核类型" min-width="100" sortable
                                 :filters="filterObj.IndicatorsType"
                                 :filter-method="filterHandler">
                    <template slot-scope="scope">
                        <el-select v-if="scope.row.edit" v-model="scope.row.IndicatorsType" size="mini">
                            <el-option label="品质指标" value="品质指标"></el-option>
                            <el-option label="效率指标" value="效率指标"></el-option>
                        </el-select>
                        <span v-else>{{scope.row.IndicatorsType}}</span>
                    </template>
                </el-table-column>
                @*<el-table-column prop="Section" label="考核工段" min-width="110">
                        <template slot-scope="scope">
                            <el-select v-if="scope.row.edit" v-model="scope.row.Section" size="mini" filterable clearable
                                       @@change="getProcess">
                                <el-option v-for="item in sectionlist"
                                           :key="item.value"
                                           :label="item.value"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                            <span v-else>{{scope.row.Section}}</span>
                        </template>
                    </el-table-column>
                    <el-table-column prop="Process" label="考核工序" min-width="110">
                        <template slot-scope="scope">
                            <el-select v-if="scope.row.edit" v-model="scope.row.Process" size="mini" filterable clearable>
                                <el-option v-for="item in processlist"
                                           :key="item.value"
                                           :label="item.value"
                                           :value="item.value">
                                </el-option>
                            </el-select>
                            <span v-else>{{scope.row.Process}}</span>
                        </template>
                    </el-table-column>*@
                <el-table-column prop="IndicatorsStatue" label="考核正常/异常" min-width="125" sortable
                                 :filters="filterObj.IndicatorsStatue"
                                 :filter-method="filterHandler">
                    <template slot-scope="scope">
                        <el-select v-if="scope.row.edit" v-model="scope.row.IndicatorsStatue" size="mini">
                            <el-option label="正常" value="正常"></el-option>
                            <el-option label="异常" value="异常"></el-option>
                        </el-select>
                        <span v-else>{{scope.row.IndicatorsStatue}}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="ExecutionTime" label="执行时间" min-width="140">
                    @*<template slot-scope="scope">
                            <input-edit datatype="date"
                                        v-on:input="scope.row.ExecutionTime = $event.toLocaleDateString('zh').replace(/\//g, '-')"
                                        :nametext="scope.row.ExecutionTime"
                                        :isedit="scope.row.edit"></input-edit>
                        </template>*@
                </el-table-column>
                <el-table-column label="操作" align="center" width="90" fixed="right">
                    <template slot-scope="scope">
                        <div v-if="scope.row.edit">
                            <el-button @@click="saveClick(scope.row)" class="cbtn green" type="text">保存</el-button>
                            <el-button @@click="cancelClick(scope.row)" class="cbtn info" type="text">取消</el-button>
                        </div>
                        <div v-else>
                            <el-button @@click="editClick(scope.row)" class="cbtn blue" type="text">编辑</el-button>
                            <el-button @@click="deleteClick(scope.row,scope.$index)" class="cbtn red" type="text">删除</el-button>
                        </div>
                    </template>
                </el-table-column>
            </el-table>
        </el-row>
    </el-row>
</script>
<script src="~/Scripts/filterMethod/tableFilter.js"></script>
<script>
    Vue.component('kpi-stemfrom-component', {
        props: ['departmentlist', 'grouplist', 'executelist', 'sectionlist', 'processlist', 'inputlylimit'],
        template: document.getElementById("KPI_StemFrom_Component"),
        data: function () {
            return {
                department: null,
                group: null,
                extime: null,
                tableList: [],
                initialData: {},
                departmentGrouplist: [],
                filterObj: {
                    //具体的变量列表
                    IndicatorsValueUnit: [],
                    Cycle: [],
                    IndicatorsType: [],
                    IndicatorsStatue: [],
                }
            }
        },
        mixins: [tableFilterMixin],
        methods: {
            onQuerySubmit() {
                axios.post('/KPI/DisplayKPIIndicators', {
                    Department: this.department,
                    Group: this.group,
                    time: this.extime,
                }).then(res => {
                    this.tableList = res.data;
                    this.$message.success('查询成功');
                }).catch(err => {

                });
            },
            exportExcel() {
                if (this.tableList == '') {
                    this.$message('需要先查询出数据');
                    return;
                };
                let postlist = this.tableList.map(i => {
                    const { ID, ...notID } = i;
                    return notID;
                });
                axios.post("/KPI/OutputExcel", {
                    value: JSON.stringify(postlist),
                }, { responseType: "blob" }).then(res => {
                    let link = document.createElement('a');
                    link.href = URL.createObjectURL(new Blob([res.data]));
                    link.style.display = 'none';
                    link.download = `数据来源统计表.xlsx`;
                    document.body.appendChild(link);
                    link.click();
                    document.body.removeChild(link);
                });
            },
            showChange() {
                vm.mainLoading = true;
                setTimeout(() => {
                    this.tableList = [];
                    this.$emit("input", false);
                    vm.mainLoading = false;
                }, 500);
            },
            //检查编辑状态
            checkEditStatus() {
                for (let i of this.tableList) {
                    if ('edit' in i && i.edit) {
                        return true;
                    };
                };
                return false;
            },
            //启动编辑
            editClick(row) {
                if (this.checkEditStatus()) {
                    this.$message.warning('存在正在编辑的行');
                    return
                };
                if (!('edit' in row)) {
                    this.$set(row, 'edit', false);
                };
                this.initialData = {};
                this.initialData = { ...row };
                row.edit = true;
                this.getProcess(row.Section);
            },
            //取消编辑
            cancelClick(row) {
                let item = row, ini = this.initialData;
                for (let i in ini) {
                    item[i] = ini[i];
                };
                this.initialData = {};
            },
            //保存编辑
            saveClick(row) {
                axios.post('/KPI/UpdateKPIIndicators', {
                    indicators: row,
                }).then(res => {
                    if (res.data == '修改成功') {
                        this.$message.success(res.data);
                        row.edit = false;
                        this.initialData = {};
                    } else {
                        this.$message.error(res.data);
                    };
                }).catch(err => {
                    console.warn("post失败")
                });
            },
            //删除
            deleteClick(row, index) {
                //this.$confirm(`考核工段‘${row.Section}’，考核工序‘${row.Process}’`, '确认删除', {
                this.$confirm(`删除该行记录`, '确认删除', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'error',
                    center: true,
                }).then(() => {
                    axios.post('/KPI/DeleteKPIIndicators', {
                        id: row.ID,
                    }).then(res => {
                        this.$message.success('删除成功');
                        this.tableList.splice(index, 1);
                    }).catch(err => {
                        console.warn("post失败")
                    });
                }).catch(() => {
                });
            },
            getProcess(v) {
                vm.GetProcessList(v);
            },
            GetGroup(d) {
                axios.post('/KPI/GetDepartmentGroup', { Department: d }).then(res => {
                    this.departmentGrouplist = res.data;
                }).catch(err => {
                    console.warn(err);
                });
            },
        },
        watch: {
            department(v) {
                this.group = null;
                this.GetGroup(v);
            },
            //监听表的数据
            tableList(v) {
                try {
                    if (v != '') {
                        let rtArr = this.filterMethod(v);
                        this.$refs.filterTable.clearFilter();
                        for (let i in this.filterObj) {
                            this.$set(this.filterObj, i, rtArr[i]);
                        };
                    };
                } catch (err) {
                    console.log('筛选错误')
                }
            }
        }
    });
</script>