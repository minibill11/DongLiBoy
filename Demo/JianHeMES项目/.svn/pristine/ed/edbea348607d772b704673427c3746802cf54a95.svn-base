@model IEnumerable<JianHeMES.Models.Personnel_Leave>
<script src="~/Scripts/axios.min.js"></script>
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<link href="~/Scripts/Bootstraps/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.zh-CN.js"></script>
@{
    ViewBag.Title = "Index";
}
<style>
    .el-upload__input{
        display:none !important;
    }
    .el-dialog__body{
        display:none;
    }
    .el-form-item{
        margin:3px;
    }
    .el-table td, .el-table th{
        padding:4px;
        text-align:center;
    }
    .el-table td .cell, .el-table th .cell{
        padding:0;
        overflow:hidden;
    }
    .el-table .cell{
        line-height:16px;
    }
    .el-input el-input--prefix{
        text-align:center;
    }
    .input-container{
        display:flex;
        justify-content:center;
    }
    .input-container .el-input{
        width:25%;
    }
    .corparationBtn{
        margin:0;
        padding:5px;
        float:left;
        height:100%;
    }
    [name=applyTimes],[name=applyDate]{
    }
    .timeThree{

    }
    .el-popover{
        min-width:0 !important;
    }
    .el-table .success-row {
    background: #f0f9eb;
  }
    .testTime{
        width:95% !important;
    }
</style>
<h2 style="text-align:center;">人员请假信息</h2>
<span>
    @Html.ActionLink("批量添加员工", "Batch_InputStaff")
</span>

<div id="app" style="max-height:700px;">
    <el-dialog title="提示" v-bind:visible.sync="dialogVisible" width="30%" >
        <span slot="title">
            <h3 style="text-align:center;">添加请假人记录信息</h3>
            <div style="margin: 20px;"></div>
            <el-form label-position="labelPosition" label-width="80px">
                <el-form-item label="工号">
                    <el-input v-model="jobNum" size="small"></el-input>
                </el-form-item>
                <el-form-item label="姓名">
                    <el-input v-model="Name" size="small"></el-input>
                </el-form-item>
                <el-form-item label="部门">
                    <el-input v-model="department" size="small"></el-input>
                </el-form-item>
                <el-form-item label="班组">
                    <el-input v-model="DP_group" size="small"></el-input>
                </el-form-item>
                <el-form-item label="岗位">
                    <el-input v-model="position" size="small"></el-input>
                </el-form-item>
                <el-form-item label="代理人">
                    <el-input v-model="agent" size="small"></el-input>
                </el-form-item>
                <el-form-item label="请假类型">
                    <el-select v-model="leaveType" size="small" placeholder="请选择请假类型">
                        <el-option label="事假" value="1"></el-option>
                        <el-option label="病假" value="2"></el-option>
                        <el-option label="年休假" value="3"></el-option>
                        <el-option label="调休假" value="4"></el-option>
                        <el-option label="婚假" value="5"></el-option>
                        <el-option label="产假" value="6"></el-option>
                        <el-option label="陪产假" value="7"></el-option>
                        <el-option label="哺乳假" value="8"></el-option>
                        <el-option label="丧假" value="9"></el-option>
                        <el-option label="工伤假" value="10"></el-option>
                        <el-option label="平日调休" value="11"></el-option>
                        @*<el-option label="法定医疗期" value="12"></el-option>*@
                    </el-select>
                </el-form-item>
                <el-form-item label="申请时间">
                    <el-date-picker v-model="applyTime"
                                    type="datetime"
                                    size="small"
                                    placeholder="选择日期时间"
                                    align="right"
                                    v-bind:picker-options="pickerOptions1">
                    </el-date-picker>
                </el-form-item>
                <el-form-item label="开始&结束">
                    <el-date-picker v-model="startAndEnd"
                                    type="datetimerange"
                                    size="small"
                                    class="testTime"
                                    v-bind:picker-options="pickerOptions2"
                                    range-separator="至"
                                    start-placeholder="开始日期"
                                    end-placeholder="结束日期"
                                    align="right">
                    </el-date-picker>
                </el-form-item>
                <el-form-item label="请假时长">
                    <el-input v-model="leaveTimeNum" size="small"></el-input>
                </el-form-item>
                <el-form-item label="请假事由">
                    <el-input v-model="leaveReason" size="small"></el-input>
                </el-form-item>
                <el-form-item label="备注">
                    <el-input v-model="remark" size="small"></el-input>
                </el-form-item>
            </el-form>
            <el-upload class="upload-demos" ref="uploads"
                       list-type="picture"
                       action="localhost:18863/Personnel_Leave/uploadLeaveFiles"
                       v-bind:on-preview="handlePreview" v-bind:on-remove="handleRemove"
                       v-bind:on-change="selectChanges"
                       v-bind:auto-upload="false">
                <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
                <div slot="tip" class="el-upload__tip">只能上传jpg/pdf文件，且不超过500kb</div>
            </el-upload>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="dialogVisible = false" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addInfos" size="small">添 加</el-button>
        </span>
    </el-dialog>

    <div class="input-container">
        <el-date-picker v-model="timeRange"
                        v-bind:readonly="inputFlag1"
                        type="daterange"
                        align="right"
                        unlink-panels
                        size="small"
                        range-separator="-"
                        start-placeholder="开始日期"
                        end-placeholder="结束日期"
                        v-bind:picker-options="pickerOptions2">
        </el-date-picker>
        <el-date-picker v-model="value4"
                        v-bind:readonly="inputFlag2"
                        size="small"
                        type="month"
                        placeholder="选择年月">
        </el-date-picker>
        <el-input placeholder="请输入部门" v-model="inputDepartment" clearable size="small">
            <i slot="prefix" class="el-input__icon el-icon-search"></i>
        </el-input>

        <el-input placeholder="请输入姓名" v-model="inputName" clearable size="small">
            <i slot="prefix" class="el-input__icon el-icon-search"></i>
        </el-input>

        <el-input placeholder="请输入工号" v-model="inputJobNum" clearable size="small">
            <i slot="prefix" class="el-input__icon el-icon-search"></i>
        </el-input>
        <el-button id="search" type="primary" icon="el-icon-search" size="small" v-on:click="getInfos">搜索</el-button>
        <el-button type="primary" icon="el-icon-plus" size="small" v-on:click="dialogVisible = true">添加</el-button>
    </div>
    <el-table class="tableTop" v-bind:data="tableData" style="width: 100%" max-hright="650" v-bind:highlight-current-row=true>
        <el-table-column prop="Name" label="姓名" width="57">
        </el-table-column>
        <el-table-column prop="jobNum" label="工号" width="58">
        </el-table-column>
        <el-table-column prop="department" label="部门" width="90">
        </el-table-column>
        <el-table-column prop="DP_group" label="班组" width="90">
        </el-table-column>
        <el-table-column prop="position" label="岗位" width="90">
        </el-table-column>
        <el-table-column prop="agent" label="代理人" width="60">
        </el-table-column>
        <el-table-column prop="leaveType" label="请假类型" width="65">
        </el-table-column>
        <el-table-column prop="applydate" class="" label="申请日期" width="90">
        </el-table-column>
        <el-table-column prop="leaveStartTime" label="开始时间" width="90">
        </el-table-column>
        <el-table-column prop="leaveEndTime" label="结束时间" width="90">
        </el-table-column>
        <el-table-column prop="leaveTimeNum" label="请假时长" width="80">
        </el-table-column>
        <el-table-column prop="leaveReason" label="请假事由" width="95" >
            <template slot-scope="scope" v-on:click="chiosImg(scope.row,scope.$index)">
                <el-popover trigger="click" placement="right">
                    <el-button type="primary" v-show="scope.row.IsImg=='ture'?true:false" icon="el-icon-view" size="small" v-on:click="showImg(scope.row,scope.row.index)">查看图片</el-button>
                    <el-button type="primary" v-show="scope.row.pdf=='ture'?true:false" icon="el-icon-tickets" size="small" v-on:click="showPdf(scope.row,scope.row.index)">查看PDF</el-button>
                    <el-upload v-show="scope.row.IsImg=='ture'||scope.row.pdf=='ture'?false:true" class="upload-demo" ref="upload" 
                               list-type="picture"
                               action="localhost:18863/Personnel_Leave/uploadLeaveFiles"
                               v-bind:on-preview="handlePreview" v-bind:on-remove="handleRemove"
                               v-bind:data="{userneme:scope.row.Name,leavestarttime:scope.row.leaveStartTime}"
                               v-bind:on-change="selectChange"
                               v-bind:auto-upload="false">
                        <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
                        <el-button style="margin-left: 10px;" size="small" type="success" v-on:click="submitUpload(scope.row,scope.$index)">上传到服务器</el-button>
                        <div slot="tip" class="el-upload__tip">只能上传jpg/pdf文件，且不超过500kb</div>
                    </el-upload>
                    <div slot="reference" class="name-wrapper">
                        <el-tag size="medium">{{scope.row.leaveReason}}</el-tag>
                    </div>
                </el-popover>
            </template>
        </el-table-column>
        <el-table-column prop="remark" label="备注" width="85">
        </el-table-column>
        <el-table-column label="操作" width="100" prop="Id">
            <template slot-scope="scope">
                <el-button size="small" class="corparationBtn" type="primary" v-on:click="edit(scope.$index, scope.row)">编辑</el-button>
                <el-button size="small" class="corparationBtn" style="display:none;" type="primary" v-on:click="postData(scope.$index, scope.row)">保存</el-button>
                <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="cancel(scope.$index, scope.row)">取消</el-button>
                <el-button size="small" class="corparationBtn" type="danger" v-on:click="remove(scope.$index, scope.row)">删除</el-button>
                <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="details(scope.$index, scope.row)">详细</el-button>
            </template>
        </el-table-column>
    </el-table>
    @*添加表格--此处为添加表格*@
    <button id="test" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" style="display:none;">
        开始演示模态框
    </button>
    <!-- 模态框（Modal） -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width: 100%;height: auto;max-width: 900px;margin: 10px auto;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                </div>
                <div class="modal-body" id="targets">
                    <div style="padding:5px;" v-for="item in pictrues">
                        <img style="width:100%;" v-bind:src=`/MES_Data/LeaveFiles/${pictruesOwner}/${item}` />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">
                        确定
                    </button>
                    @*<button type="button" class="btn btn-primary">
                        提交更改
                    </button>*@
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>

    <button id="test2" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal2" style="display:none;">
        开始演示模态框
    </button>
    <!-- 模态框（Modal） -->
    <div class="modal fade" id="myModal2" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width: 100%;height: auto;max-width: 900px;margin: 10px auto;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                </div>
                <div class="modal-body" id="targets">
                    <div style="padding:5px;" v-for="item in pdfs">
                        <object style="width:100%;height:500px;" v-bind:data=`/MES_Data/LeaveFiles/${pdfsOwner}/${item}`></object>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">
                        确定
                    </button>
                    @*<button type="button" class="btn btn-primary">
                            提交更改
                        </button>*@
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal -->
    </div>

</div>



<script>
    var vm = new Vue({
        el: "#app",
        data: {
            inputFlag1: false,
            inputFlag2: false,
            value4: null,
            timeRange:null,
            test:{},
            applyTime:'',
            startAndEnd: '',
            pickerOptions1: {
                shortcuts: [{
                    text: '今天',
                    onClick(picker) {
                        picker.$emit('pick', new Date());
                    }
                }, {
                    text: '昨天',
                    onClick(picker) {
                        const date = new Date();
                        date.setTime(date.getTime() - 3600 * 1000 * 24);
                        picker.$emit('pick', date);
                    }
                }, {
                    text: '一周前',
                    onClick(picker) {
                        const date = new Date();
                        date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);
                        picker.$emit('pick', date);
                    }
                }]
            },
            visible2: false,
            tableData: [],
            inputDepartment: null,
            inputName: null,
            inputJobNum: null,
            oldTrVal: '',
            dialogVisible: false,
            labelPosition: 'right',
            Name: '',
            jobNum: '',
            department: '',
            DP_group: '',
            position: '',
            agent:"",
            leaveType: '',
            applydate: '',
            leaveStartTime: '',
            leaveEndTime:'',
            leaveTimeNum: '',
            leaveReason: '',
            remark: '',
            addTimes: "",   //添加模态框中的时间选择器
            addTimes2: "",
            addTimes3: "",
            singleInfos: "",     //添加模态框的信息补全
            pickerOptions2: {
                shortcuts: [{
                    text: '最近一周',
                    onClick(picker) {
                        const end = new Date();
                        const start = new Date();
                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                        picker.$emit('pick', [start, end]);
                    }
                }, {
                    text: '最近一个月',
                    onClick(picker) {
                        const end = new Date();
                        const start = new Date();
                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                        picker.$emit('pick', [start, end]);
                    }
                }, {
                    text: '最近三个月',
                    onClick(picker) {
                        const end = new Date();
                        const start = new Date();
                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
                        picker.$emit('pick', [start, end]);
                    }
                }]
            },

            files: '',
            modalFiles: '',

            pictrues: [],
            pictruesOwner:'',
            pdfs: [],
            pdfsOwner:""
        },
        mounted() {
            this.getMountedInfo();
        },
        methods: {
            getInfos() {
                this.tableData = [];
                if (this.inputDepartment != null || this.inputName != null || this.inputJobNum != null || this.timeRange != null ||this.value4 !=null) {
                  
                    axios.post('/Personnel_Leave/index', {
                        department: this.inputDepartment == null ? null : this.inputDepartment,
                        userName: this.inputName == null ? null : this.inputName,
                        jobNum: this.inputJobNum == null ? null : this.inputJobNum,
                        startdate: this.timeRange==null? null : this.timeRange[0],
                        enddate: this.timeRange==null? null : this.timeRange[1],
                        modate: this.value4 == null ? null : this.value4
                    }).then(res=> {
                        for (var item in res.data) {
                            res.data[item].applydate = this.formatters(res.data[item].applydate)
                            res.data[item].leaveStartTime = this.formatter(res.data[item].leaveStartTime)
                            res.data[item].leaveEndTime = this.formatter(res.data[item].leaveEndTime)
                            this.tableData.push(res.data[item]);
                        }
                        if (this.tableData.length<1) {
                            this.$notify({
                                title: '警告',
                                message: '暂无对应数据，请更换搜索内容！',
                                type: 'warning'
                            });
                        } else {
                        }
                    }).catch(err=> {
                        this.$notify({
                            title: '警告',
                            message: '无法连接服务器！',
                            type: 'warning'
                        });
                    })
                } else {
                    this.$notify({
                        title: '警告',
                        message: '请输入搜索内容！',
                        type: 'warning'
                    });
                }
            },
            getMountedInfo() {
                axios.get("/Personnel_Leave/LeaveInfo").then(res=> {
                    var dataArr = [];
                    for (let item in res.data) {
                        dataArr.push(res.data[item].time)
                    }
                    this.value4 = dataArr[0];
                    this.getInfos();

                }).catch(err=> { })
            },
            formatter(val) {
                if (val == '') return '';
                var theDay = new Date(val);
                var theYear = theDay.getFullYear();
                //padStart是String的方法；所以需要将时间转换为字符串
                var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
                var theWeek = theDay.getDate().toString().padStart(2, "0");
                var theHour = theDay.getHours().toString().padStart(2, "0");
                var theMinue = theDay.getMinutes().toString().padStart(2, "0");
                var theSecond = theDay.getSeconds().toString().padStart(2, "0");
                return theYear + "-" + theMonth + "-" + theWeek + '  ' + theHour + ':' + theMinue + ":" + theSecond;
            },
            formatters(val) {
                if (val == '') return '';
                var theDay = new Date(val);
                var theYear = theDay.getFullYear();
                //padStart是String的方法；所以需要将时间转换为字符串
                var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
                var theWeek = theDay.getDate().toString().padStart(2, "0");
                var theHour = theDay.getHours().toString().padStart(2, "0");
                var theMinue = theDay.getMinutes().toString().padStart(2, "0");
                var theSecond = theDay.getSeconds().toString().padStart(2, "0");
                return theYear + "-" + theMonth + "-" + theWeek;
            },
            edit(index, row) {
                this.oldTrVal = row;
                
                changeInput(index, row)
            },
            remove(index, row) {
                var comfirm = confirm(`确认删除${row.Name}的请假记录信息吗？`);
                if (comfirm) {
                    axios.post("/Personnel_Leave/Delete", { id: row.Id }).then(res=> {
                        this.$message({
                            message: '已删除!',
                            type: 'success'
                        });
                        this.tableData.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData.splice(index, 1);
                            }
                        })
                }).catch(err=> {
                    this.$message({
                        message: '无法删除!',
                        type: 'warning'
                    });
                })
                }
            },
            cancel(index, row) {
                cancel(index, row)
            },
            postData(index, row) {
               // console.log(row)
                postdata(index, row)
            },
            addInfos() {
                var postData = {
                    Name: this.Name, jobNum: this.jobNum, department: this.department, 'DP_group': this.DP_group,
                    position: this.position, agent: this.agent, leaveType: this.leaveType, applydate: this.formatters(this.applydate) + ' ' + this.addTimes,
                    leaveStartTime: this.formatters(this.leaveStartTime) + ' ' + this.addTimes2, leaveEndTime: this.formatters(this.leaveEndTime) + " " + this.addTimes3,
                    leaveTimeNum: this.leaveTimeNum, leaveReason: this.leaveReason, remark: this.remark
                };
                axios.post("/personnel_Leave/Create", { Name: this.Name, jobNum: this.jobNum, department: this.department, 'DP_group': this.DP_group,
                    position: this.position, agent: this.agent, leaveType: this.leaveType, applydate: this.applyTime,
                    leaveStartTime: this.startAndEnd[0], leaveEndTime: this.startAndEnd[1],
                    leaveTimeNum: this.leaveTimeNum, leaveReason: this.leaveReason, remark: this.remark }).then(res=> {
                    this.dialogVisible = false;
                    if (res.data !=true) {
                        this.$message({
                            message: res.data,
                            type: 'error'
                        });
                    } else {
                        this.$message({
                            message: '新增成功!',
                            type: 'success'
                        });
                        let form = new FormData();
                        form.append('userneme', this.Name);
                        form.append('leavestarttime', timeFormatss(this.startAndEnd[0]));
                        for (let i = 0; i < this.modalFiles.length; i++) {

                            form.append(`uploadfile${i}`, this.modalFiles[i].raw)
                        }
                        if (this.modalFiles.length > 0) {
                            axios.post("/Personnel_Leave/uploadLeaveFiles", form).then(res => {
                                //this.$message({
                                //    message: res.data,
                                //    type: 'success'
                                //});
                                //this.getInfos();
                            }).catch(err=> { })
                            this.$message({
                                message: '数据添加成功！',
                                type: 'success'
                            });
                        } else {
                            //this.$message({
                            //    message: '请选择图片！',
                            //    type: 'success'
                            //});
                        }
                    }
                    
                }).catch(err=> {
                    this.$message.error('创建失败！');
                })
            },
            postImg() {

            },
            showImg(row,index) {
                var name = row.Name.replace(/ /g, '').replace(/:/g, '-');
                var leaveStartTime = row.leaveStartTime.replace(/ /g, '-').replace(/:/g, '-');
                //console.log(index)
                $("#test").click();
                axios.post("/Personnel_Leave/displayImg", { userneme: name, leavestarttime: leaveStartTime }).then(res=> {
                   // console.log(res.data)
                    var srcStr = [];
                    for (item in res.data) {
                        srcStr.push(res.data[item]);
                    }
                   // console.log(srcStr)
                    this.pictruesOwner = row.Name;
                    this.pictrues = srcStr;
                    
                }).catch(err=>{
                    this.$message({
                        message: 'out of connectioned!',
                        type: 'warning'
                    });
                })
                
            },
            showPdf(row, index) {
                var name = row.Name.replace(/ /g, '').replace(/:/g, '-');
                var leaveStartTime = row.leaveStartTime.replace(/ /g, '-').replace(/:/g, '-');
                $("#test2").click();
                axios.post("/Personnel_Leave/display_pdf", { userneme: name, leavestarttime: leaveStartTime }).then(res=> {

                    var srcStr = [];
                    for (item in res.data) {
                        srcStr.push(res.data[item]);
                    }
                    this.pdfs = srcStr;
                    this.pdfsOwner = row.Name;
                }).catch(err=> { })
            },
            formart(val) {
                var leaveStartTime = val.replace(/ /g, '-');
                return leaveStartTime.replace(/:/g, '-');
            },
            submitUpload(row,index) {
                //this.$refs.upload.submit();
                //console.log(this.$refs.upload.data)
                //console.log(this.$refs.upload)
                let form = new FormData();
                form.append('userneme', row.Name);
                form.append('leavestarttime', this.formart(row.leaveStartTime));
                //console.log(this.files)
                //console.log(this.files.length)
                for (let i = 0; i < this.files.length; i++) {

                    form.append(`uploadfile${i}`,this.files[i].raw)
                }
                //form.append('uploadfile', this.files[0].raw);
                if (this.files.length > 0) {
                    axios.post("/Personnel_Leave/uploadLeaveFiles", form).then(res => {
                        this.$message({
                            message: res.data,
                            type: 'success'
                        });
                        this.getInfos();
                    }).catch(err=> { })
                    this.$message({
                        message: '敬请期待!',
                        type: 'success'
                    });
                } else {
                    this.$message({
                        message: '请选择图片！',
                        type: 'success'
                    });
                }
                //console.log(form)
            },
            handleRemove(file, fileList) {
               // console.log(file, fileList);
            },
            handlePreview(file) {
               // console.log(file);
            },
            selectChange(file, filelist) {
               // console.log(filelist);
               // console.log(file);
                this.files = filelist;
                //console.log(filelist)
            },
            selectChanges(file, filelist) {
                this.modalFiles = filelist;
               // console.log(this.modalFiles)
               // console.log(timeFormatss(this.startAndEnd[0]))
            }
        },
        watch: {
            timeRange(){
                if (this.timeRange == null) {
                    this.inputFlag2 = false;
                } else {
                    this.inputFlag2 = true;
                };
                if (this.timeRange == '' || null) {
                    this.timeRange = null;
                }
                
            },
            value4() {
                if (this.value4 == null) {
                    this.inputFlag1 = false;
                } else {
                    this.inputFlag1 = true;
                };
                if (this.value4 == '' || null) {
                    this.value4 = null;
                }
            },
            jobNum() {
                if (this.jobNum.length == 5) {
                    axios.post("/personnel_Leave/getInfo", { jobnum: this.jobNum }).then(res=> {
                       // console.log(res.data);
                        if (res.data) {
                            this.Name = res.data.Name;
                            this.department = res.data.Department;
                            this.DP_group = res.data.DP_Group;
                            this.position = res.data.Position;
                        } else {
                            this.$message.error('数据库无此工号对应信息！');
                            this.Name = '';
                            this.department = '';
                            this.DP_group = '';
                            this.position = '';
                        }
                    }).catch(err=> { })
                } else {
                    this.Name = '';
                    this.department = '';
                    this.DP_group = '';
                    this.position = '';
                }
            },
            files() {
                $(`.name`).val(this.files)
            },
            inputDepartment() {
                if (this.inputDepartment == '' || null) {
                    this.inputDepartment = null;
                }
            },
            inputName() {
                if (this.inputName == '' || null) {
                    this.inputName = null;
                }
            },
            inputJobNum() {
                if (this.inputJobNum == '' || null) {
                    this.inputJobNum = null;
                }
            }
        }
    });
    
    function cancel(index,row) {    
        var targetTr = $(".el-table__row")[index];
        targetTr.children[0].innerHTML = vm.oldTrVal.Name == undefined ? '' : vm.oldTrVal.Name;
        targetTr.children[1].innerHTML = vm.oldTrVal.jobNum == undefined ? '' : vm.oldTrVal.jobNum;
        targetTr.children[2].innerHTML = vm.oldTrVal.department == undefined ? '' : vm.oldTrVal.department;
        targetTr.children[3].innerHTML = vm.oldTrVal.DP_group == undefined ? '' : vm.oldTrVal.DP_group;
        targetTr.children[4].innerHTML = vm.oldTrVal.position == undefined ? '' : vm.oldTrVal.position;
        targetTr.children[5].innerHTML = vm.oldTrVal.agent == undefined ? '' : vm.oldTrVal.agent;
        targetTr.children[6].innerHTML = vm.oldTrVal.leaveType == undefined ? '' : vm.oldTrVal.leaveType;
        targetTr.children[7].innerHTML = vm.oldTrVal.applydate == undefined ? '' : vm.oldTrVal.applydate;
        targetTr.children[8].innerHTML = vm.oldTrVal.leaveStartTime == undefined ? '' : vm.oldTrVal.leaveStartTime;
        targetTr.children[9].innerHTML = vm.oldTrVal.leaveEndTime == undefined ? '' : vm.oldTrVal.leaveEndTime;
        targetTr.children[10].innerHTML = vm.oldTrVal.leaveTimeNum == undefined ? '' : vm.oldTrVal.leaveTimeNum;
        targetTr.children[11].innerHTML = vm.oldTrVal.leaveReason == undefined ? '' : vm.oldTrVal.leaveReason;
        targetTr.children[12].innerHTML = vm.oldTrVal.remark == undefined ? '' : vm.oldTrVal.remark;

        $(targetTr.children[13].children[0].children[0]).show();
        $(targetTr.children[13].children[0].children[3]).show();
        $(targetTr.children[13].children[0].children[1]).hide();
        $(targetTr.children[13].children[0].children[2]).hide()
        vm.getInfos();
    }  //取消在线编辑功能
    function changeInput(index, row) {
        //console.log(row)
        //console.log(123)
        var targetTr = $(".el-table__row")[index];
        targetTr.children[0].innerHTML = "<input type='text' value=" + row.Name + " />";
        targetTr.children[1].innerHTML = "<input type='text' value=" + (row.jobNum==undefined ? '' : row.jobNum) + " >";
        targetTr.children[2].innerHTML = "<input type='text' value=" + (row.department == undefined ? '' : row.department) + " >";
        targetTr.children[3].innerHTML = "<input type='text' value=" + (row.DP_group == undefined ? '' : row.DP_group) + " >";
        targetTr.children[4].innerHTML = "<input type='text' value=" + (row.position == undefined ? '' : row.position) + " >";
        targetTr.children[5].innerHTML = "<input type='text' value=" + (row.agent == undefined ? '' : row.agent) + " >";
        targetTr.children[6].innerHTML = 
        "<select style='width:100%'><option>" + (row.leaveType == undefined ? '' : row.leaveType) + "</option><option>病假</option>" +
        "<option>事假</option>" + "<option>婚假</option>" + "<option>产假</option>" + "<option>产假</option>" + "<option>陪产假</option>" + "<option>哺乳假</option>" +
        "<option>年休假</option>" + "<option>平日调休</option>"  +

        " </select>"
        targetTr.children[7].innerHTML = `<input class='timeThree' type='text' value='${(row.applydate == undefined ? '' : row.applydate)}'/>`;
        targetTr.children[8].innerHTML = `<input class='timeThrees' type='text' value='${(row.leaveStartTime == undefined ? '' : row.leaveStartTime)}'/>`;
        
        targetTr.children[9].innerHTML = `<input class='timeThreess' type='text' value='${(row.leaveEndTime == undefined ? '' : row.leaveEndTime)}'/>`;
        targetTr.children[10].innerHTML = "<input type='text' value=" + (row.leaveTimeNum == undefined ? '' : row.leaveTimeNum) + " >";
        targetTr.children[11].innerHTML = "<input type='text' value=" + (row.leaveReason == undefined ? '' : row.leaveReason) + " >";
        targetTr.children[12].innerHTML = "<input type='text' value=" + (row.remark == undefined ? '' : row.remark) + " >";
        $(targetTr.children[13].children[0].children[0]).hide();
        $(targetTr.children[13].children[0].children[3]).hide();
        $(targetTr.children[13].children[0].children[1]).show();
        $(targetTr.children[13].children[0].children[2]).show();

        $(".timeThree").datetimepicker({
            language: 'zh-CN',
            format: 'yyyy-mm-dd hh:ii:ss',
            autoclose: true,
            todayBtn: true,
            minView: "hour",
        });
        $(".timeThrees").datetimepicker({
            language: 'zh-CN',
            format: 'yyyy-mm-dd hh:ii:ss',
            autoclose: true,
            todayBtn: true,
            minView: "hour",
        });
        $(".timeThreess").datetimepicker({
            language: 'zh-CN',
            format: 'yyyy-mm-dd hh:ii:ss',
            autoclose: true,
            todayBtn: true,
            minView: "hour",
        });
        //vm.getInfos();
    }//在线编辑功能    中间的时间--时分秒自动清零问题
    function postdata(index, row) {       
        var targetTr = $(".el-table__row")[index].cells;
        var inputVal = []
        for (let i = 0; i < targetTr.length-1; i++) {
            //console.log(targetTr[i].children[0].value)
            inputVal.push(targetTr[i].children[0].value)
        }
        //console.log(vm.oldTrVal.Id)
        //console.log(inputVal)
        if (inputVal[0] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请输入姓名'
            });
            return false
        } else if (inputVal[1] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请输入工号'
            });
            return false
        } else if (inputVal[5] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请指定代理人'
            });
            return false
        } else if (inputVal[7] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请选择申请日期'
            });
            return false
        } else if (inputVal[8] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请选择开始时间'
            });
            return false
        } else if (inputVal[9] == '') {
            vm.$notify.error({
                title: '错误',
                message: '请选择结束时间'
            });
            return false
        }
        axios.post('/Personnel_Leave/Edit', { Id: row.Id, Name: inputVal[0], jobNum: inputVal[1], department: inputVal[2], DP_group: inputVal[3], position: inputVal[4], agent: inputVal[5], leaveType: inputVal[6], applydate: inputVal[7], leaveStartTime: inputVal[8], leaveEndTime: inputVal[9], leaveTimeNum: inputVal[10], leaveReason: inputVal[11], remark: inputVal[12] }).then(res=> {
           // console.log(res.data)
                vm.$notify({
                    title: '成功',
                    message: '保存成功',
                    type: 'success'
                });
                var targetTr = $(".el-table__row")[index];
                targetTr.children[0].innerHTML = inputVal[0] == undefined ? '' : inputVal[0]
                targetTr.children[1].innerHTML = inputVal[1] == undefined ? '' : inputVal[1]
                targetTr.children[2].innerHTML = inputVal[2] == undefined ? '' : inputVal[2]
                targetTr.children[3].innerHTML = inputVal[3] == undefined ? '' : inputVal[3]
                targetTr.children[4].innerHTML = inputVal[4] == undefined ? '' : inputVal[4]
                targetTr.children[5].innerHTML = inputVal[5] == undefined ? '' : inputVal[5]
                targetTr.children[6].innerHTML = inputVal[6] == undefined ? '' : inputVal[6]
                targetTr.children[7].innerHTML = inputVal[7] == undefined ? '' : inputVal[7]
                targetTr.children[8].innerHTML = inputVal[8] == undefined ? '' : inputVal[8]
                targetTr.children[9].innerHTML = inputVal[9] == undefined ? '' : inputVal[9]
                targetTr.children[10].innerHTML = inputVal[10] == undefined ? '' : inputVal[10]
                targetTr.children[11].innerHTML = inputVal[11] == undefined ? '' : inputVal[11]
                targetTr.children[12].innerHTML = inputVal[12] == undefined ? '' : inputVal[12]

                $(targetTr.children[13].children[0].children[0]).show();
                $(targetTr.children[13].children[0].children[3]).show();
                $(targetTr.children[13].children[0].children[1]).hide();
                $(targetTr.children[13].children[0].children[2]).hide()
                vm.getInfos();
        }).catch(err=> {

            vm.$notify({
                title: '警告',
                message: '连接失败',
                type: 'warning'
            });
        })
        vm.oldTrVal = '';
        
    }//在线保存功能
    function timeFormatss(val) { //时间格式化
        if (val == '') return '';
        var theDay = new Date(val);
        var theYear = theDay.getFullYear();
        //padStart是String的方法；所以需要将时间转换为字符串
        var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
        var theWeek = theDay.getDate().toString().padStart(2, "0");
        var theHour = theDay.getHours().toString().padStart(2, "0");
        var theMinue = theDay.getMinutes().toString().padStart(2, "0");
        var theSecond = theDay.getSeconds().toString().padStart(2, "0");
        return theYear + "-" + theMonth + "-" + theWeek + "--" + theHour + "-" + theMinue + "-" + theSecond;
    }
    function timeFormatsss(val) { //时间格式化
        if (val == '') return '';
        var theDay = new Date(val);
        var theYear = theDay.getFullYear();
        //padStart是String的方法；所以需要将时间转换为字符串
        var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
        var theWeek = theDay.getDate().toString().padStart(2, "0");
        var theHour = theDay.getHours().toString().padStart(2, "0");
        var theMinue = theDay.getMinutes().toString().padStart(2, "0");
        var theSecond = theDay.getSeconds().toString().padStart(2, "0");
        return theYear + "-" + theMonth;
    }
</script>
