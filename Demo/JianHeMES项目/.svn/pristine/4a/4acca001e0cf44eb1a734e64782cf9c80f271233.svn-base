@{
    ViewBag.Title = "外箱出库确认";
}
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<link href="~/Content/styleFile/packaging/stockStyle.css" rel="stylesheet" />
<style>
    .el-table td, .el-table th {
        padding: 0;
    }

    .el-dialog__header {
        padding: 10px;
    }

    .el-dialog__footer {
        padding: 0 10px 10px;
    }

    .el-dialog--center .el-dialog__body {
        padding: 0 10px;
    }

    .el-dialog__headerbtn {
        top: 10px;
        right: 20px;
    }

    .dialogdiv {
        border: 1px solid #d7dae2;
        margin-bottom: 10px;
        padding: 5px 10px;
    }

    .adiv {
        display: inline-block;
    }
</style>
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            <div v-show="screenSize>=768">
                <h2 class="text-center">@ViewBag.Title</h2>
                <a href="/Packagings/inStockConfirm"><el-button size="small">入库</el-button></a>
                <a href="/Packagings/stockNumEdit"><el-button size="small">修改库位号</el-button></a>
                <div class="adiv" href="/Packagings/outStockConfirm"><el-button size="small" type="primary" plain disabled style="cursor:default">出库</el-button></div>
            </div>
            <div v-show="screenSize<768">
                <h3 style="margin:10px 0 0;">@ViewBag.Title</h3>
                <el-dropdown placement="bottom">
                    <el-button size="medium ">
                        更多菜单<i class="el-icon-arrow-down el-icon--right"></i>
                    </el-button>
                    <el-dropdown-menu slot="dropdown">
                        <a href="/Packagings/inStockConfirm"><el-dropdown-item>入库</el-dropdown-item></a>
                        <a href="/Packagings/stockNumEdit"><el-dropdown-item>修改库位号</el-dropdown-item></a>
                        <div href="/Packagings/outStockConfirm"><el-dropdown-item disabled>出库</el-dropdown-item></div>
                    </el-dropdown-menu>
                </el-dropdown>
            </div>
        </el-header>
        <el-main v-loading="loading">
            <el-row>
                <div class="inputframe">
                    <span>订单号：</span>
                    <el-select v-model="selectVal" v-bind:disabled="barcodeList.length>0" placeholder="输入内容可查询" filterable size="medium">
                        <el-option v-for="item in selectOptions"
                                   :key="item.value"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </div>
                <div class="inputframe">
                    <span>条码号：</span>
                    <el-input placeholder="请输入条码号"
                              v-model.trim="barcode"
                              ref="inputRef"
                              style="text-align:right;display:inline-block;"
                              v-on:keyup.enter.native="barScan($event)"
                              size="medium"
                              autofocus
                              clearable>
                    </el-input>
                </div>
                <div class="inputframe" v-show="nuoShow">
                    <span>出库订单：</span>
                    <el-input placeholder="请输入出库订单"
                              v-model.trim="toOrderNum"
                              style="text-align:right;display:inline-block;"
                              size="medium"
                              clearable>
                    </el-input>
                </div>
                <div class="inputframe">
                    <el-switch v-model="nuoShow"
                               active-text="挪用"
                               inactive-text="">
                    </el-switch>
                    <el-button v-on:click="clearList" size="mini" round>重置</el-button>
                    <el-button @@click="confirmCheck" size="mini" round v-bind:disabled="barcodeList.length==0||toOrderNum==''">确认</el-button>
                </div>
                <div class="inputframe">
                    <el-table :data="completeInfo"
                              max-height="280"
                              border>
                        <el-table-column prop="type"
                                         label="类型"
                                         width="78">
                        </el-table-column>
                        <el-table-column prop="screenNum"
                                         label="屏序"
                                         width="70">
                        </el-table-column>
                        <el-table-column prop="completeNum"
                                         label="已完成"
                                         width="70">
                        </el-table-column>
                        <el-table-column prop="complete"
                                         label="完成率"
                                         width="80">
                        </el-table-column>
                    </el-table>
                </div>
                <div class="inputframe">
                    <el-table :data="barcodeList"
                              max-height="280"
                              border>
                        <el-table-column prop="barcode"
                                         label="条码清单"
                                         width="160">
                        </el-table-column>
                        <el-table-column prop="warehouseNum"
                                         label="库位号">
                        </el-table-column>
                        <el-table-column label=""
                                         width="40">
                            <template slot-scope="scope">
                                <el-button @@click.native.prevent="deleteRow(scope.$index,scope.row ,barcodeList)"
                                           type="text"
                                           size="mini"
                                           style="margin:0;padding:0;width:100%;">
                                    <i class="el-icon-error"></i>
                                </el-button>
                            </template>
                        </el-table-column>
                    </el-table>
                    <span v-if="barcodeList.length!=0">条码数量：{{barcodeList.length}}</span>
                </div>
            </el-row>
            <el-dialog title="出库完成！"
                       :visible.sync="centerDialogVisible"
                       width="300px"
                       @@close="closeDialog"
                       center>
                <div style="width:280px;text-align:left;">
                    <div v-for="item in message" class="dialogdiv">
                        <div>订单号：<b>{{item.orderNum}}</b></div>
                        <template v-if="item.message==''">
                            <div>已出库数量：<b>{{item.warehousOutCount}}</b></div>
                            <div>剩下未出库数量：<b>{{item.warehousCount}}</b></div>
                            <div>未包装数量：<b>{{item.notPrintCount}}</b></div>
                            <div>
                                <div><b>此次出库条码：</b></div>
                                <span v-for="i in item.barcode" class="listbarcode">
                                    {{i}}
                                </span>
                            </div>
                        </template>
                        <div v-else>
                            {{item.message}}
                        </div>
                    </div>
                </div>
                <span slot="footer" class="dialog-footer">
                    <el-button type="primary" @@click="centerDialogVisible=false" size="small">确 定</el-button>
                </span>
            </el-dialog>
        </el-main>
    </el-container>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            screenSize: document.body.clientWidth,
            loading: false,
            selectOptions: [],
            selectVal: '',
            completeInfo: [],
            barcode: "",
            barcodeList: [],
            centerDialogVisible: false,
            message: [],
            toOrderNum: "",
            nuoShow: false,
        },
        created: function () {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.selectOptions = res.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
            window.onresize = function () {
                app.screenSize = document.body.clientWidth;
            };
        },
        mounted: function () {
            let localOrder = localStorage.getItem('Order');
            if (localOrder != null) {
                this.selectVal = localOrder;
            };

            let localNuo = localStorage.getItem('outStockIsNuo');
            if (localNuo != null) {
                if (localNuo == "true") {
                    this.nuoShow = true;
                } else {
                    this.nuoShow = false;
                };
            };
        },
        methods: {
            //确认
            confirmCheck: function () {
                let thisList = this.barcodeList, postList = [];
                for (let i in thisList) {
                    postList.push(thisList[i].barcode)
                };

                axios.post('/Packagings/WarehouseOut', { barcode: postList, warehousordernum: this.toOrderNum, isDelete: this.nuoShow }).then(res => {
                    //console.log(res.data);
                    //this.$alert(res.data, '出库成功', {
                    //    confirmButtonText: '确定',
                    //    type: 'success',
                    //    callback: () => {
                    //        this.clearList();
                    //    }
                    //});
                    this.message = res.data;
                    this.centerDialogVisible = true;
                }).catch(err => {
                    console.warn("post失败")
                });
            },
            //扫码
            barScan: function (event) {
                let thisdata = event.target.value, listcheck = this.barcodeList;
                if (thisdata != "") {
                    //检查重复
                    for (let i in listcheck) {
                        if (listcheck[i].barcode == thisdata) {
                            this.$message({
                                showClose: true,
                                message: '已有重复条码！',
                                type: 'warning'
                            });
                            return;
                        };
                    };

                    axios.post('/Packagings/CheckOutsideBoxBadeCodeNumExist1', { ordernum: this.selectVal, outsidebarcode: thisdata }).then(res => {
                        //console.log(res.data);
                        if (res.data.message == "") {
                            listcheck.push(res.data);
                        } else {
                            this.$message({
                                showClose: true,
                                message: res.data.message,
                                type: 'warning'
                            });
                        };
                    }).catch(err => {
                        console.warn("post失败")
                    });
                } else {
                    this.$message({
                        showClose: true,
                        type: 'warning',
                        message: "请输入条码！"
                    });
                };
                this.barcode = "";
            },
            //获取完成信息
            getcompleteInfo: function () {
                if (this.selectVal != "") {
                    axios.post('/Packagings/GetcompleteInfo', {
                        ordernum: this.selectVal
                    }).then(res => {
                        //console.log(res.data);
                        this.completeInfo = res.data;
                    }).catch(err => {
                        console.warn("获取信息失败")
                    });
                };
            },
            //删除行
            deleteRow: function (index, row, data) {
                data.splice(index, 1);
            },
            //重置
            clearList: function () {
                this.barcode = "";
                this.barcodeList = [];
                this.message = [];
            },
            closeDialog: function () {
                this.clearList();
            },
            //是否挪用
            isnuo: function () {
                if (this.nuoShow == true) {
                    this.toOrderNum = "";
                } else {
                    this.toOrderNum = this.selectVal;
                };
            }
        },
        watch: {
            //订单号
            selectVal: function (v) {
                localStorage.setItem('Order', v);
                this.getcompleteInfo();
                if (v != "") {
                    this.$refs.inputRef.focus();
                    this.isnuo();
                };
            },
            nuoShow: function (v) {
                localStorage.setItem('outStockIsNuo', v);
                this.isnuo();
            },
        },
    });
</script>