using Microsoft.Ajax.Utilities;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Oracle.ManagedDataAccess.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Linq;
using System.Web;

namespace JianHeMES.Controllers
{
    public class CommonERPDB
    {
        #region------ ERP表类
        public class img_file
        {
            //[Key]
            //public int Id { get; set; }

            [Display(Name = "料件编号"), StringLength(50)]
            public string img01 { get; set; }

            [Display(Name = "物料品名"), StringLength(100)]
            public string ima02 { get; set; }

            [Display(Name = "物料规格"), StringLength(1000)]
            public string ima021 { get; set; }

            [Display(Name = "仓库编号"), StringLength(50)]
            public string img02 { get; set; }

            [Display(Name = "储位"), StringLength(50)]
            public string img03 { get; set; }

            [Display(Name = "批号"), StringLength(50)]
            public string img04 { get; set; }

            [Display(Name = "参考号码"), StringLength(50)]
            public string img05 { get; set; }

            [Display(Name = "参考序号"), StringLength(50)]
            public int? img06 { get; set; }

            [Display(Name = "采购单位/生产单位"), StringLength(50)]
            public string img07 { get; set; }

            [Display(Name = "收货数量"), StringLength(50)]
            public double? img08 { get; set; }

            [Display(Name = "库存单位"), StringLength(50)]
            public string img09 { get; set; }

            [Display(Name = "库存数量"), StringLength(50)]
            public double? img10 { get; set; }

            [Display(Name = "No Use"), StringLength(50)]
            public double? img11 { get; set; }

            [Display(Name = "No Use"), StringLength(50)]
            public double? img12 { get; set; }

            [Display(Name = "制造日期"), StringLength(50)]
            public DateTime? img13 { get; set; }

            [Display(Name = "最近一次盘点日期"), StringLength(50)]
            public DateTime? img14 { get; set; }

            [Display(Name = "最近一次收料日期"), StringLength(50)]
            public DateTime? img15 { get; set; }

            [Display(Name = "最近一次发料日期"), StringLength(50)]
            public DateTime? img16 { get; set; }

            [Display(Name = "最近一次异动日期"), StringLength(50)]
            public DateTime? img17 { get; set; }

            [Display(Name = "有效日期"), StringLength(50)]
            public DateTime? img18 { get; set; }

            [Display(Name = "库存等级"), StringLength(50)]
            public string img19 { get; set; }

            [Display(Name = "单位数量换算率"), StringLength(50)]
            public double? img20 { get; set; }

            [Display(Name = "单位数量换算率-对料件库存单"), StringLength(50)]
            public double? img21 { get; set; }

            [Display(Name = "仓储类别"), StringLength(50)]
            public string img22 { get; set; }

            [Display(Name = "是否为可用仓储"), StringLength(50)]
            public string img23 { get; set; }

            [Display(Name = "是否为ＭＲＰ可用仓储"), StringLength(50)]
            public string img24 { get; set; }

            [Display(Name = "保税与否"), StringLength(50)]
            public string img25 { get; set; }

            [Display(Name = "仓储所属会计科目"), StringLength(50)]
            public string img26 { get; set; }

            [Display(Name = "工单发料优先顺序"), StringLength(50)]
            public int? img27 { get; set; }

            [Display(Name = "销售出货优先顺序"), StringLength(50)]
            public int? img28 { get; set; }

            //[Display(Name = "未知"), StringLength(50)]
            //public string img29 { get; set; }

            [Display(Name = "直接材料成本"), StringLength(50)]
            public double? img30 { get; set; }

            [Display(Name = "间接材料成本"), StringLength(50)]
            public double? img31 { get; set; }

            [Display(Name = "厂外加工材料成本"), StringLength(50)]
            public double? img32 { get; set; }

            [Display(Name = "厂外加工人工成本"), StringLength(50)]
            public double? img33 { get; set; }

            [Display(Name = "库存单位对成本单位的转换率"), StringLength(50)]
            public double? img34 { get; set; }

            [Display(Name = "专案号码"), StringLength(50)]
            public string img35 { get; set; }

            [Display(Name = "外观编号"), StringLength(50)]
            public string img36 { get; set; }

            [Display(Name = "呆滞日期"), StringLength(50)]
            public DateTime? img37 { get; set; }

            [Display(Name = "备注"), StringLength(50)]
            public string img38 { get; set; }

            //[Display(Name = "所属工厂"), StringLength(50)]
            //public string imgplant { get; set; }

            //[Display(Name = "所属法人"), StringLength(50)]
            //public string imglegal { get; set; }

        }

        public class ima_file
        {
            [Display(Name = "物料编号"), StringLength(50)]
            public string ima01 { get; set; }

            [Display(Name = "物料品名"), StringLength(100)]
            public string ima02 { get; set; }

            [Display(Name = "物料规格"), StringLength(1000)]
            public string ima021 { get; set; }

        }

        public class cxcr006  //tc_cxc_file
        {
            [Display(Name = "料号"),StringLength(20)]
            public string tc_cxc01 { get; set; }

            [Display(Name = "品名"), StringLength(120)]
            public string tc_cxc02 { get; set; }

            [Display(Name = "规格"), StringLength(1000)]
            public string tc_cxc03 { get; set; }

            [Display(Name = "面积")]
            public double area { get; set; }

            [Display(Name = "本月结存数")]
            public double tc_cxc04 { get; set; }

            [Display(Name = "本月结存单价")]
            public double tc_cxc05 { get; set; }

            [Display(Name = "本月结存金额")]
            public double tc_cxc06 { get; set; }

            [Display(Name = "30天")]
            public double tc_cxc07 { get; set; }

            [Display(Name = "90天")]
            public double tc_cxc08 { get; set; }

            [Display(Name = "180天")]
            public double tc_cxc09 { get; set; }

            [Display(Name = "365天")]
            public double tc_cxc10 { get; set; }

            [Display(Name = "2年")]
            public double tc_cxc11 { get; set; }

            [Display(Name = "3年")]
            public double tc_cxc12 { get; set; }

            [Display(Name = "3-5年")]
            public double tc_cxc13 { get; set; }

            [Display(Name = "5年以上")]
            public double tc_cxc14 { get; set; }
        }

        public class csfr008  //sfb_file,sfa_file,ima_file
        {
            [Display(Name = "工单号"), StringLength(20)]
            public string sfb01 { get; set; }     //工单号

            [Display(Name = "工单备注"), StringLength(255)]
            public string sfbud01 { get; set; }   //工单备注
            
            [Display(Name = "工单录入日期")]
            public DateTime sfb81 { get; set; }   //工单录入日期

            [Display(Name = "生产数量")]      
            public double sfb08 { get; set; }    //生产数量

            [Display(Name = "入库数量")]
            public double sfb09 { get; set; }    //入库数量

            [Display(Name = "料号"), StringLength(40)]
            public string sfa03 { get; set; }    //料号

            [Display(Name = "品名"), StringLength(120)]
            public string ima02 { get; set; }     //品名

            [Display(Name = "规格"), StringLength(120)]
            public string ima021 { get; set; }    //规格

            [Display(Name = "单位"), StringLength(4)]
            public string sfa12 { get; set; }     //单位

            [Display(Name = "应发数量")]
            public double sfa05 { get; set; }     //应发数量

            [Display(Name = "已发数量")]
            public double sfa06 { get; set; }     //已发数量

            [Display(Name = "未发数量")]
            public double sfa05_sfa06  { get; set; }     //未发数量
    }

//        public  class ccg_file
//        {
//            [Display(Name = "工单编号"), StringLength(20)]
//            public string sfb01 { get; set; }    /*工单编号*/

//            [Display(Name = "工单型态")]
//            public int sfb02 { get; set; }       /*工单型态*/ /*储存该工单所属类别型态*/ /*正确值 1/2/5/7/11/12/13/15 */ /* 1: 一般工单  */  /* 5: 再加工工单*//* 7: 委外工单  */ /* 8: 重工委外工单   #Add By Snow */ /*11: 拆件式工单*/ /*13: 预测工单  *//*15: 试产工单  */

//            [Display(Name = "在制品会计科目"), StringLength(24)]
//            public string sfb03 { get; set; }    /*在制品会计科目*/
//                                                 /*在制品会计科目  aag01 */
//            [Display(Name = "在制品会计科目"), StringLength(24)]

//            public string  sfb04 { get; set; }           /*工单状态                               */
//                    /*储存该工单目前处理阶段状况*/
//                    /*正确值 1/2/3/4/5/6/7/8    */
//                    /*1: 确认生产工单(firm plan)*/
//                    /*2: 工单已发放,料表尚未列印*/
//                    /*3: 工单已发放,料表已列印  */
//                    /*4: 工单已发料             */
//                    /*5: 在制过程中             */
//                    /*6: 工单已完工,进入F.Q.C   */
//                    /*7: 完工入库               */
//                    /*8: 结案                   */

//           [Display(Name = "在制品会计科目"), StringLength(40)]

//            public string sfb05 { get; set; }         /*料件编号                               */
//                                                      /*料件编号   ima01                       */
//                                                      /*储存该工单将投入生产料件               */

//            public string sfb06 varchar2(10),            /*使用制程编号                           */
//                                     /*使用制程编号  ecu01                    */
//                                     /*储存该工单将投入生产料件时所用的制程编 */
//                                     /*号                                     */
//public string sfb07 varchar2(10),            /*版本                                   */
//                                     /*储存工单投入生产的料件版本             */
//sfb071 date,                    /*产品结构指定有效日期                   */
//                                /*储存工单投入生产的料件使用的产品结构指 */
//                                /*定有效日期                             */
//sfb08       number(15,3) NOT NULL,   /*生产数量                               */
//                                     /*预计投入生产的数量，单位为料件生产单位 */
//sfb081      number(15,3) NOT NULL,   /*已发料套数                             */
//sfb09       number(15,3) NOT NULL,   /*完工入库数量                           */
//                                     /*储存该工单已完工入库数量               */
//sfb10       number(15,3) NOT NULL,   /*再加工数量                             */
//                                     /*储存该工单再加工数量                   */
//sfb11       number(15,3) NOT NULL,   /*F.Q.C 数量                             */
//                                     /*储存该工单在全检（检验）数量           */
//sfb111      number(15,3) NOT NULL,   /*No Use                                 */
//sfb12       number(15,3) NOT NULL,   /*报废数量                               */
//                                     /*储存该工单报废数量                     */
//sfb121      number(15,3),            /*在制盘盈亏量                           */
//                                     /*在制盘盈亏量  add 99/04/27             */
//sfb122 number(15,3),            /*No Use                                 */
//sfb13 date,                    /*预计起始生产日期                       */
//                               /*储存该工单预计投入生产日期             */
//public string sfb14       varchar2(5),             /*预计起始生产时间                       */
//                                     /*预计起始生产时间(时:分)                */
//                                     /*储存该工单预计投入生产时间             */
//sfb15 date,                    /*预计结束生产日期                       */
//                               /*储存该工单预计完成生产日期             */
//public string sfb16       varchar2(5),             /*预计结束生产时间                       */
//                                     /*预计结束生产时间(时:分)                */
//                                     /*储存该工单预计完成生产时间             */
//sfb17 number(5),               /*已完工制程序号                         */
//                                     /*储存该工单目前已完工的最大制程序号     */
//sfb18 date,                    /*最近一次作业完工日期                   */
//                               /*最近一次作业完工日期(天)               */
//                               /*储存该工单 [已完工制程序号] 之完工日期 */
//public string sfb19       varchar2(5),             /*最近一次作业完工时间                   */
//                                     /*最近一次作业完工时间(时:分)            */
//                                     /*储存该工单 [已完工制程序号] 之完工时间 */
//                                     /*量产系统专用                           */
//sfb20 date,                    /*MPS/MRP 需求日期                       */
//                               /*储存该工单之预计 MPS/MPR 需求日期      */
//public string sfb21       varchar2(5),             /*MPS/MRP 需求时间                       */
//                                     /*MPS/MRP 需求时间(时:分)                */
//                                     /*储存该工单之预计 MPS/MPR 需求时间      */
//                                     /*量产系统专用                           */
//public string sfb22 varchar2(20),            /*订单编号/预测工单编号                  */
//                                     /*储存该工单之指定生产供给的订单单号     */
//sfb221 number(5),               /*订单项次/预测工单项次                  */
//                                     /*储存该工单之指定生产供给的订单项次     */
//public string sfb222 varchar2(20),            /*APS 单据编号                           */
//                                     /*APS 单据编号  no.4651 02/03/14(modify) */
//public string sfb23 varchar2(1),             /*备料档产生否                           */
//                                     /*储存该工单是否已产生备料资料           */
//                                     /*正确值 Y/N                             */
//                                     /*Y: 该工单已产生备料资料                */
//                                     /*N: 该工单尚未产生备料资料              */
//public string sfb24 varchar2(1),             /*制程追踪档产生否                       */
//                                     /*储存该工单是否已产生制程追踪资料       */
//                                     /*正确值 Y/N                             */
//                                     /*Y: 该工单已产生制程追踪资料            */
//                                     /*N: 该工单尚未产生制程追踪资料          */
//sfb25 date,                    /*实际开工日                             */
//                               /*储存该工单第一次发料日期, 于发料作业更新*/
//sfb251      date,                    /*预计发放日期                           */
//public string sfb26 varchar2(5),             /*发料日期                               */
//public string sfb27 varchar2(10),            /*专案号码                               */
//                                     /*储存该工单所属专案号码                 */
//public string sfb271 varchar2(30),            /*WBS编码                                */
//                                     /*专案号码-顺序                          */
//                                     /*储存该工单所属专案号码-顺序            */
//public string sfb28 varchar2(1),             /*工单结案状态                           */
//                                     /*正确值 1/2/3                           */
//                                     /*1: 发料已结束,不能再发料               */
//                                     /*2: 生产工时已结束,不能再发料及输入工时 */
//                                     /*3: 成本会计已结束,此工单不能再重新开启 */
//                                     /*   ，可转入历史档                      */
//public string sfb29 varchar2(1),             /*可用否                                 */
//                                     /*储存执行主排程计划或料需求计划时，是否 */
//                                     /*可考虑将该工单完工数量列入需求之供给   */
//                                     /*正确值 Y/N                             */
//                                     /*Y: 可考虑为供给                        */
//                                     /*N: 不可考虑为供给                      */
//public string sfb30 varchar2(10),            /*预计工单完工入库仓库别                 */
//                                     /*储存该工单完工后，预计存放的仓库别     */
//public string sfb31 varchar2(10),            /*预计工单完工入库储位                   */
//                                     /*储存该工单完工后，预计存放的储位       */
//public string sfb32 varchar2(2),             /*起始排程方法                           */
//                                     /*正确值 1/2/3/4/5                       */
//                                     /*1: window scheduling forward           */
//                                     /*2: window scheduling backward          */
//                                     /*3: weighted window scheduling          */
//                                     /*4: tracking scheduling forward         */
//                                     /*5: tracking scheduling backward        */
//public string sfb33 varchar2(2),             /*最近排程方法                           */
//                                     /*正确值 1/2/3/4/5                       */
//                                     /*1: window scheduling forward           */
//                                     /*2: window scheduling backward          */
//                                     /*3: weighted window scheduling          */
//                                     /*4: tracking scheduling forward         */
//                                     /*5: tracking scheduling backward        */
//sfb34 number(9,4),             /*C/R 比率                               */
//                                     /*C/R 比率(%)                            */
//                                     /*储存该工单紧急比率                     */
//                                     /*开始时应设定为 '1'，可透过工单紧急比率 */
//                                     /*重新计算作业重新设定                   */
//                                     /*其值愈小者，赋予愈高的分派优先顺序     */
//public string sfb35 varchar2(1),             /*异动码                                 */
//                                     /*异动码(Y/N)                            */
//                                     /*储存该工单自上次料需求计划后，如有变动 */
//                                     /*时，则需在此备注                       */
//                                     /*提供 nettable change MRP 使用          */
//sfb36 date,                    /*工单发料结束日期                       */
//                               /*按工单结案状况，会有各阶段结束日期；而 */
//                               /*本栏位记录料帐结束日期，即在工单经过此 */
//                               /*阶段后，系统即便不可再发料给该工单     */
//                               /*如需再发料，则需作工单的重新开启作业， */
//                               /*才被允许可再发料给该工单               */
//sfb37       date,                    /*工单发料及工时结束日                   */
//                                     /*按工单结案状况，会有各阶段结束日期；而 */
//                                     /*本栏位记录料帐及人工帐（工时）结束日期 */
//                                     /*，简而言之即在工单经过此阶段后，系统即 */
//                                     /*便不可再对该工单收集工时               */
//                                     /*如需再收集工时，则需作工单的重新开启作 */
//                                     /*业，才被允许可再收集工时给该工单       */
//sfb38 date,                    /*工单成本会计结束日期                   */
//                               /*按工单结案状况，会有各阶段结束日期；而 */
//                               /*本栏位记录该工单已在最后确定的阶段日期 */
//                               /*，简而言之即在工单经过此阶段后，系统即 */
//                               /*便不可再对该工单发料及收集工时，而且亦 */
//                               /*无法再重新开启                         */
//public string sfb39       varchar2(1),             /*完工方式                               */
//                                     /*储存该工单在料帐上，使用捡料及发料系统 */
//                                     /*或使用领料及事后扣帐系统               */
//                                     /*正确值 1/2                             */
//                                     /*1: 捡料及发料系统                      */
//                                     /*   Picking List 与 Push System         */
//                                     /*2: 领料及事后扣帐系统                  */
//                                     /*   Pull List 与 Backflush System       */
//sfb40 number(5),               /*优先顺序                               */
//                                     /*储存该工单派工的优先顺序               */
//                                     /*正确值 应不小于零                      */
//                                     /*其值愈小者顺序愈高                     */
//public string sfb41 varchar2(1),             /*冻结码                                 */
//                                     /*冻结码(frozen flag)                    */
//                                     /*储存该工单为需求之供给时，是否可更动其 */
//                                     /*时程，以利需求之取得                   */
//                                     /*正确值 Y/N                             */
//                                     /*Y: 时程已被固定之工单                  */
//                                     /*N: 时程尚未被固定之工单                */
//sfb42 number(5),               /*工单展开阶数                           */
//                                     /*储存该工单对下阶自动产生工单的往下阶数 */
//sfb81 date,                    /*输入日期                               */
//                               /*储存工单输入日期                       */
//public string sfb82       varchar2(10),            /*制造部门/委外厂商                      */
//public string sfb85 varchar2(20),            /*PBI NO(Picking Batch ID)               */
//public string sfb86 varchar2(20),            /*母工单号码                             */
//public string sfb87 varchar2(1),             /*确认否                                 */
//                                     /*确认否(Y/N/X)                          */
//public string sfb88 varchar2(20),            /*料表编号                               */
//public string sfb91 varchar2(20),            /*制造通知单                             */
//public string sfb92 number(5),               /*项次                                   */
//public string sfb93 varchar2(1),             /*制程否                                 */
//public string sfb94 varchar2(1),             /*FQC否                                  */
//public string sfb95 varchar2(20),            /*特性代码                               */
//public string sfb96 varchar2(255),           /*备注                                   */
//public string sfb97 varchar2(20),            /*手册编号                               */
//                                     /*手册编号   (A050)                      */
//public string sfb98 varchar2(10),            /*成本中心                               */
//public string sfb99 varchar2(1),             /*重工否                                 */
//                                     /*重工否(Y/N)                            */
//public string sfb100 varchar2(1),             /*委外型态                               */
//                                     /*委外型态                        养生计划*/
//                                     /*1.委外工单对委外采购单型态为一对一     */
//                                     /*2.委外工单对委外采购单型态为一对多     */
//                                     /*预设 '1'                               */
//                                     /*两者的差别在于,资料的一致性            */
//sfb101 number(5),               /*变更序号                               */
//                                     /*变更序号                        养生计划*/
//public string sfbacti varchar2(1),             /*资料有效码                             */
//                                     /*系统维护                               */
//public string sfbuser varchar2(10),            /*资料所有者                             */
//                                     /*系统维护                               */
//public string sfbgrup varchar2(10),            /*资料所有群                             */
//                                     /*系统维护                               */
//public string sfbmodu varchar2(10),            /*资料更改者                             */
//                                     /*系统维护                               */
//sfbdate date,                    /*最近修改日                             */
//                                 /*系统维护                               */
//public string sfb1001     varchar2(40),            /*保税核准文号                           */
//public string sfb1002 varchar2(1),             /*保税核销否                             */
//public string sfb1003 varchar2(20),            /*保税放行单号                           */
//public string sfb102 varchar2(10),            /*生产线                                 */
//public string sfb50 varchar2(4),             /*活动代号                               */
//public string sfb51 varchar2(10),            /*理由码                                 */
//sfb103 number(5),               /*工单制程变更序号                       */
//public string sfbud01 varchar2(255),           /*自订栏位-Textedit                      */
//public string sfbud02 varchar2(40),            /*自订栏位-文字                          */
//public string sfbud03 varchar2(40),            /*自订栏位-文字                          */
//public string sfbud04 varchar2(40),            /*自订栏位-文字                          */
//public string sfbud05 varchar2(40),            /*自订栏位-文字                          */
//public string sfbud06 varchar2(40),            /*自订栏位-文字                          */
//sfbud07 number(15,3),            /*自订栏位-数值                          */
//sfbud08 number(15,3),            /*自订栏位-数值                          */
//sfbud09 number(15,3),            /*自订栏位-数值                          */
//sfbud10 number(10),              /*自订栏位-整数                          */
//sfbud11 number(10),              /*自订栏位-整数                          */
//sfbud12 number(10),              /*自订栏位-整数                          */
//sfbud13 date,                    /*自订栏位-日期                          */
//sfbud14     date,                    /*自订栏位-日期                          */
//sfbud15 date,                    /*自订栏位-日期                          */
//public string sfb43       varchar2(1),             /*签核状况                               */
//public string sfb44 varchar2(10),            /*申请人                                 */
//public string sfbmksg varchar2(1),             /*是否签核                               */
//public string sfbplant varchar2(10),            /*所属工厂                               */
//public string sfblegal varchar2(10),            /*所属法人                               */
//public string sfboriu varchar2(10),            /*资料建立者                             */
//public string sfborig varchar2(10),            /*资料建立部门                           */
//public string sfb104 varchar2(1)  /*备置否(Y/N)*/
//        }


        public class Financedetails
        {
            [Display(Name = "A 料号"), StringLength(40)]
            public string A { get; set; }

            [Display(Name = "B 品名"), StringLength(120)]
            public string B { get; set; }

            [Display(Name = "C 规格"), StringLength(1000)]
            public string C { get; set; }

            [Display(Name = "D 报废")]
            public double D { get; set; }

            [Display(Name = "E 本月结存数")]
            public double E { get; set; }

            [Display(Name = "F 结存单价")]
            public double F { get; set; }

            [Display(Name = "G 结存金额")]
            public double G { get; set; }

            [Display(Name = "H 超180天呆料")]
            public double H { get; set; }

            [Display(Name = "I 超呆料金额")]
            public double I { get; set; }

            [Display(Name = "J K未发料汇总")]
            public double J { get; set; }

            [Display(Name = "K K需求（备库订单+备库物料）")]
            public double K { get; set; }

            [Display(Name = "L K需求汇总金额")]
            public double L { get; set; }

            [Display(Name = "M 非K未发料")]
            public double M { get; set; }

            [Display(Name = "N 非K需求")]
            public double N { get; set; }

            [Display(Name = "O 超过180天库存")]
            public double O { get; set; }

            [Display(Name = "P 非K需求金额")]
            public double P { get; set; }

            [Display(Name = "Q 其它库存")]
            public double Q { get; set; }

            [Display(Name = "R 其它库存金额")]
            public double R { get; set; }

            [Display(Name = "S 超过180天")]
            public double S { get; set; }

            [Display(Name = "T 多")]
            public double T { get; set; }

            [Display(Name = "U K+非K")]
            public double U { get; set; }

            [Display(Name = "V 是否为签核备库")]
            public double V { get; set; }

            [Display(Name = "W 30天")]
            public double W { get; set; }

            [Display(Name = "X K需求")]
            public double X { get; set; }

            [Display(Name = "Y K金额")]
            public double Y { get; set; }

            [Display(Name = "Z 非K需求")]
            public double Z { get; set; }

            [Display(Name = "AA 非K金额")]
            public double AA { get; set; }

            [Display(Name = "AB 其它库存金额")]
            public double AB { get; set; }

            [Display(Name = "AC	30天金额")]
            public double AC { get; set; }

            [Display(Name = "AD	90天")]
            public double AD { get; set; }

            [Display(Name = "AE	90天金额")]
            public double AE { get; set; }

            [Display(Name = "AF K需求")]
            public double AF { get; set; }

            [Display(Name = "AG K金额")]
            public double AG { get; set; }

            [Display(Name = "AH 非K需求")]
            public double AH { get; set; }

            [Display(Name = "AI 非K金额")]
            public double AI { get; set; }

            [Display(Name = "AJ  其它库存金额")]
            public double AJ { get; set; }

            [Display(Name = "AK	180天")]
            public double AK { get; set; }

            [Display(Name = "AL 180天金额")]
            public double AL { get; set; }

            [Display(Name = "AM K需求")]
            public double AM { get; set; }

            [Display(Name = "AN K金额")]
            public double AN { get; set; }

            [Display(Name = "AO 非K需求")]
            public double AO { get; set; }

            [Display(Name = "AP 非K金额")]
            public double AP { get; set; }

            [Display(Name = "AQ 其它库存金额")]
            public double AQ { get; set; }

            [Display(Name = "AR	365天")]
            public double AR { get; set; }

            [Display(Name = "AS	365天金额")]
            public double AS { get; set; }

            [Display(Name = "AT K需求")]
            public double AT { get; set; }

            [Display(Name = "AU K金额")]
            public double AU { get; set; }

            [Display(Name = "AV 非K需求")]
            public double AV { get; set; }

            [Display(Name = "AW 非K金额")]
            public double AW { get; set; }

            [Display(Name = "AX 其它库存金额")]
            public double AX { get; set; }

            [Display(Name = "AY 2年")]
            public double AY { get; set; }

            [Display(Name = "AZ 2年金额")]
            public double AZ { get; set; }

            [Display(Name = "BA K需求")]
            public double BA { get; set; }

            [Display(Name = "BB K金额")]
            public double BB { get; set; }

            [Display(Name = "BC 非K需求")]
            public double BC { get; set; }

            [Display(Name = "BD 非K金额")]
            public double BD { get; set; }

            [Display(Name = "BE 其它库存金额")]
            public double BE { get; set; }

            [Display(Name = "BF 3年")]
            public double BF { get; set; }

            [Display(Name = "BG 3年金额")]
            public double BG { get; set; }

            [Display(Name = "BH 3-5年")]
            public double BH { get; set; }

            [Display(Name = "BI 3-5年金额")]
            public double BI { get; set; }

            [Display(Name = "BJ 5年以上")]
            public double BJ { get; set; }

            [Display(Name = "BK 5年以上金额")]
            public double BK { get; set; }

            [Display(Name = "BL 分类")]
            public double BL { get; set; }

            [Display(Name = "BM K需求")]
            public double BM { get; set; }

            [Display(Name = "BN K金额")]
            public double BN { get; set; }

            [Display(Name = "BO 非K需求")]
            public double BO { get; set; }

            [Display(Name = "BP 非K金额")]
            public double BP { get; set; }

            [Display(Name = "BQ 其它库存金额")]
            public double BQ { get; set; }

            [Display(Name = "BR 3年以上")]
            public double BR { get; set; }

            [Display(Name = "BS K需求")]
            public double BS { get; set; }

            [Display(Name = "BT K金额")]
            public double BT { get; set; }

            [Display(Name = "BU 非K需求")]
            public double BU { get; set; }

            [Display(Name = "BV 非K金额")]
            public double BV { get; set; }

            [Display(Name = "BW 其它库存金额")]
            public double BW { get; set; }

            [Display(Name = "BX 3年以上金额")]
            public double BX { get; set; }

            [Display(Name = "BY UKN")]
            public double BY { get; set; }

            [Display(Name = "BZ Q")]
            public double BZ { get; set; }
        }

        #endregion

        #region------ ERP查询方法


        //安全库存物料清单查询
        public static List<img_file> ERP_Query_SafetyStock(List<string> material_List)
        {
            string data = string.Empty;
            //JObject result = new JObject();
            DataTable OutDataTable = new DataTable();
            OutDataTable.TableName = "data";
            DataRow dataRow;
            List<img_file> result_list = new List<img_file>();
            using (OracleConnection cn = GetOracleConnection())
            {
                cn.Open();
                string sql = "";
                foreach (var item in material_List)
                {
                    if (sql == "") sql = "Select img_file.*,ima_file.* from img_file inner join ima_file on img_file.img01=ima_file.ima01 where img01 ='" + item + "'";
                    else sql = sql + " or img01 = '" + item + "'";
                }
                OracleCommand cmd = new OracleCommand(sql, cn);
                cmd.CommandType = System.Data.CommandType.Text;
                OracleDataReader dtr = cmd.ExecuteReader();
                if (dtr.Read())
                {
                    for (int j = 0; j < dtr.FieldCount; j++)
                    {
                        OutDataTable.Columns.Add(dtr.GetName(j));
                    }

                    #region------ 修改列名
                    //OutDataTable.Columns["img01"].ColumnName = "料件编号";
                    //OutDataTable.Columns["img02"].ColumnName = "仓库编号";
                    //OutDataTable.Columns["img03"].ColumnName = "储位";
                    //OutDataTable.Columns["img04"].ColumnName = "批号";
                    //OutDataTable.Columns["img05"].ColumnName = "参考号码";
                    //OutDataTable.Columns["img06"].ColumnName = "参考序号";
                    //OutDataTable.Columns["img07"].ColumnName = "采购单位";
                    //OutDataTable.Columns["img08"].ColumnName = "收货数量";
                    //OutDataTable.Columns["img09"].ColumnName = "库存单位";
                    //OutDataTable.Columns["img10"].ColumnName = "库存数量";
                    //OutDataTable.Columns["img11"].ColumnName = "No Use";
                    //OutDataTable.Columns["img12"].ColumnName = "No Use";
                    //OutDataTable.Columns["img13"].ColumnName = "制造日期";
                    //OutDataTable.Columns["img14"].ColumnName = "最近一次盘点日期";
                    //OutDataTable.Columns["img15"].ColumnName = "最近一次收料日期";
                    //OutDataTable.Columns["img16"].ColumnName = "最近一次发料日期";
                    //OutDataTable.Columns["img17"].ColumnName = "最近一次异动日期";
                    //OutDataTable.Columns["img18"].ColumnName = "有效日期";
                    //OutDataTable.Columns["img19"].ColumnName = "库存等级";
                    //OutDataTable.Columns["img20"].ColumnName = "单位数量换算率";
                    //OutDataTable.Columns["img21"].ColumnName = "单位数量换算率-对料件库存单";
                    //OutDataTable.Columns["img22"].ColumnName = "仓储类别";
                    //OutDataTable.Columns["img23"].ColumnName = "是否为可用仓储";
                    //OutDataTable.Columns["img24"].ColumnName = "是否为ＭＲＰ可用仓储";
                    //OutDataTable.Columns["img25"].ColumnName = "保税与否";
                    //OutDataTable.Columns["img26"].ColumnName = "仓储所属会计科目";
                    //OutDataTable.Columns["img27"].ColumnName = "工单发料优先顺序";
                    //OutDataTable.Columns["img28"].ColumnName = "销售出货优先顺序";
                    ////OutDataTable.Columns["img29"].ColumnName = "未知列";
                    //OutDataTable.Columns["img30"].ColumnName = "直接材料成本";
                    //OutDataTable.Columns["img31"].ColumnName = "间接材料成本";
                    //OutDataTable.Columns["img32"].ColumnName = "厂外加工材料成本";
                    //OutDataTable.Columns["img33"].ColumnName = "厂外加工人工成本";
                    //OutDataTable.Columns["img34"].ColumnName = "库存单位对成本单位的转换率";
                    //OutDataTable.Columns["img35"].ColumnName = "专案号码";
                    //OutDataTable.Columns["img36"].ColumnName = "外观编号";
                    //OutDataTable.Columns["img37"].ColumnName = "呆滞日期";
                    //OutDataTable.Columns["img38"].ColumnName = "备注";
                    ////OutDataTable.Columns["imgplant"].ColumnName = "所属工厂";
                    ////OutDataTable.Columns["imglengal"].ColumnName = "所属法人";
                    #endregion

                    do
                    {
                        while (dtr.Read())
                        {
                            dataRow = OutDataTable.NewRow();
                            for (int j = 0; j < dtr.FieldCount; j++)
                            {
                                data = dtr[j].ToString();
                                dataRow[j] = data;
                            }
                            OutDataTable.Rows.Add(dataRow);
                            result_list.Add(new img_file
                            {
                                img01 = (string)dataRow["img01"],
                                ima02 = (string)dataRow["ima02"],
                                ima021 = (string)dataRow["ima021"],
                                img02 = (string)dataRow["img02"],
                                img03 = (string)dataRow["img03"],
                                img04 = (string)dataRow["img04"],
                                img05 = (string)dataRow["img05"],
                                img06 = (string)dataRow["img06"] == "" ? 0 : Convert.ToInt16(dataRow["img06"]),
                                img07 = (string)dataRow["img07"],
                                img08 = (string)dataRow["img08"] == "" ? 0 : Convert.ToDouble(dataRow["img08"]),
                                img09 = (string)dataRow["img09"],
                                img10 = (string)dataRow["img10"] == "" ? 0 : Convert.ToDouble(dataRow["img10"]),
                                img11 = (string)dataRow["img11"] == "" ? 0 : Convert.ToDouble(dataRow["img11"]),
                                img12 = (string)dataRow["img12"] == "" ? 0 : Convert.ToDouble(dataRow["img12"]),
                                img13 = StringTODateTime((string)dataRow["img13"]),
                                img14 = StringTODateTime((string)dataRow["img14"]),
                                img15 = StringTODateTime((string)dataRow["img15"]),
                                img16 = StringTODateTime((string)dataRow["img16"]),
                                img17 = StringTODateTime((string)dataRow["img17"]),
                                img18 = StringTODateTime((string)dataRow["img18"]),
                                img19 = (string)dataRow["img19"],
                                img20 = (string)dataRow["img20"] == "" ? 0 : Convert.ToDouble(dataRow["img20"]),
                                img21 = (string)dataRow["img21"] == "" ? 0 : Convert.ToDouble(dataRow["img21"]),
                                img22 = (string)dataRow["img22"],
                                img23 = (string)dataRow["img23"],
                                img24 = (string)dataRow["img24"],
                                img25 = (string)dataRow["img25"],
                                img26 = (string)dataRow["img26"],
                                img27 = (string)dataRow["img27"] == "" ? 0 : Convert.ToInt16(dataRow["img27"]),
                                img28 = (string)dataRow["img28"] == "" ? 0 : Convert.ToInt16(dataRow["img28"]),
                                //img29 = (string)dataRow["img29"],
                                img30 = (string)dataRow["img30"] == "" ? 0 : Convert.ToDouble(dataRow["img30"]),
                                img31 = (string)dataRow["img31"] == "" ? 0 : Convert.ToDouble(dataRow["img31"]),
                                img32 = (string)dataRow["img32"] == "" ? 0 : Convert.ToDouble(dataRow["img32"]),
                                img33 = (string)dataRow["img33"] == "" ? 0 : Convert.ToDouble(dataRow["img33"]),
                                img34 = (string)dataRow["img34"] == "" ? 0 : Convert.ToDouble(dataRow["img34"]),
                                img35 = (string)dataRow["img35"],
                                img36 = (string)dataRow["img36"],
                                img37 = StringTODateTime((string)dataRow["img37"]),
                                img38 = (string)dataRow["img38"],
                                //imgplant = (string)dataRow["imgplant"],
                                //imglegal = (string)dataRow["imglegal"],
                            });
                        }
                    } while (dtr.NextResult());
                    //foreach (var item in material_List)
                    //{
                    //    var OneMaterialList = result_list.Where(c => c.img01 == item && c.img10 > 0).ToList();
                    //    result.Add(item, JsonConvert.SerializeObject(OneMaterialList));
                    //}
                }
                dtr.Close();
                cn.Close();
            }
            return result_list;
        }

        //按物料号或物料名称查询
        public static List<img_file> ERP_MaterialQuery(string materialNumber, string productName)
        {
            string data = string.Empty;
            List<string> material_List = new List<string>
            {
                materialNumber
            };
            //JObject result = new JObject();
            DataTable OutDataTable = new DataTable();
            OutDataTable.TableName = "data";
            DataRow dataRow;
            List<img_file> result_list = new List<img_file>();
            using (OracleConnection cn = GetOracleConnection())
            {
                cn.Open();
                string sql = "";
                foreach (var item in material_List)
                {
                    if (sql == "") sql = "Select img_file.*,ima_file.* from img_file inner join ima_file on img_file.img01=ima_file.ima01 where img01 ='" + item + "'";
                    else sql = sql + " or img01 = '" + item + "'";
                }
                OracleCommand cmd = new OracleCommand(sql, cn);
                cmd.CommandType = System.Data.CommandType.Text;
                OracleDataReader dtr = cmd.ExecuteReader();
                if (dtr.Read())
                {
                    for (int j = 0; j < dtr.FieldCount; j++)
                    {
                        OutDataTable.Columns.Add(dtr.GetName(j));
                    }

                    #region------ 修改列名
                    //OutDataTable.Columns["img01"].ColumnName = "料件编号";
                    //OutDataTable.Columns["img02"].ColumnName = "仓库编号";
                    //OutDataTable.Columns["img03"].ColumnName = "储位";
                    //OutDataTable.Columns["img04"].ColumnName = "批号";
                    //OutDataTable.Columns["img05"].ColumnName = "参考号码";
                    //OutDataTable.Columns["img06"].ColumnName = "参考序号";
                    //OutDataTable.Columns["img07"].ColumnName = "采购单位";
                    //OutDataTable.Columns["img08"].ColumnName = "收货数量";
                    //OutDataTable.Columns["img09"].ColumnName = "库存单位";
                    //OutDataTable.Columns["img10"].ColumnName = "库存数量";
                    //OutDataTable.Columns["img11"].ColumnName = "No Use";
                    //OutDataTable.Columns["img12"].ColumnName = "No Use";
                    //OutDataTable.Columns["img13"].ColumnName = "制造日期";
                    //OutDataTable.Columns["img14"].ColumnName = "最近一次盘点日期";
                    //OutDataTable.Columns["img15"].ColumnName = "最近一次收料日期";
                    //OutDataTable.Columns["img16"].ColumnName = "最近一次发料日期";
                    //OutDataTable.Columns["img17"].ColumnName = "最近一次异动日期";
                    //OutDataTable.Columns["img18"].ColumnName = "有效日期";
                    //OutDataTable.Columns["img19"].ColumnName = "库存等级";
                    //OutDataTable.Columns["img20"].ColumnName = "单位数量换算率";
                    //OutDataTable.Columns["img21"].ColumnName = "单位数量换算率-对料件库存单";
                    //OutDataTable.Columns["img22"].ColumnName = "仓储类别";
                    //OutDataTable.Columns["img23"].ColumnName = "是否为可用仓储";
                    //OutDataTable.Columns["img24"].ColumnName = "是否为ＭＲＰ可用仓储";
                    //OutDataTable.Columns["img25"].ColumnName = "保税与否";
                    //OutDataTable.Columns["img26"].ColumnName = "仓储所属会计科目";
                    //OutDataTable.Columns["img27"].ColumnName = "工单发料优先顺序";
                    //OutDataTable.Columns["img28"].ColumnName = "销售出货优先顺序";
                    ////OutDataTable.Columns["img29"].ColumnName = "未知列";
                    //OutDataTable.Columns["img30"].ColumnName = "直接材料成本";
                    //OutDataTable.Columns["img31"].ColumnName = "间接材料成本";
                    //OutDataTable.Columns["img32"].ColumnName = "厂外加工材料成本";
                    //OutDataTable.Columns["img33"].ColumnName = "厂外加工人工成本";
                    //OutDataTable.Columns["img34"].ColumnName = "库存单位对成本单位的转换率";
                    //OutDataTable.Columns["img35"].ColumnName = "专案号码";
                    //OutDataTable.Columns["img36"].ColumnName = "外观编号";
                    //OutDataTable.Columns["img37"].ColumnName = "呆滞日期";
                    //OutDataTable.Columns["img38"].ColumnName = "备注";
                    ////OutDataTable.Columns["imgplant"].ColumnName = "所属工厂";
                    ////OutDataTable.Columns["imglengal"].ColumnName = "所属法人";
                    #endregion

                    do
                    {
                        while (dtr.Read())
                        {
                            dataRow = OutDataTable.NewRow();
                            for (int j = 0; j < dtr.FieldCount; j++)
                            {
                                data = dtr[j].ToString();
                                dataRow[j] = data;
                            }
                            OutDataTable.Rows.Add(dataRow);
                            result_list.Add(new img_file
                            {
                                img01 = (string)dataRow["img01"],
                                ima02 = (string)dataRow["ima02"],
                                ima021 = (string)dataRow["ima021"],
                                img02 = (string)dataRow["img02"],
                                img03 = (string)dataRow["img03"],
                                img04 = (string)dataRow["img04"],
                                img05 = (string)dataRow["img05"],
                                img06 = (string)dataRow["img06"] == "" ? 0 : Convert.ToInt16(dataRow["img06"]),
                                img07 = (string)dataRow["img07"],
                                img08 = (string)dataRow["img08"] == "" ? 0 : Convert.ToDouble(dataRow["img08"]),
                                img09 = (string)dataRow["img09"],
                                img10 = (string)dataRow["img10"] == "" ? 0 : Convert.ToDouble(dataRow["img10"]),
                                img11 = (string)dataRow["img11"] == "" ? 0 : Convert.ToDouble(dataRow["img11"]),
                                img12 = (string)dataRow["img12"] == "" ? 0 : Convert.ToDouble(dataRow["img12"]),
                                img13 = StringTODateTime((string)dataRow["img13"]),
                                img14 = StringTODateTime((string)dataRow["img14"]),
                                img15 = StringTODateTime((string)dataRow["img15"]),
                                img16 = StringTODateTime((string)dataRow["img16"]),
                                img17 = StringTODateTime((string)dataRow["img17"]),
                                img18 = StringTODateTime((string)dataRow["img18"]),
                                img19 = (string)dataRow["img19"],
                                img20 = (string)dataRow["img20"] == "" ? 0 : Convert.ToDouble(dataRow["img20"]),
                                img21 = (string)dataRow["img21"] == "" ? 0 : Convert.ToDouble(dataRow["img21"]),
                                img22 = (string)dataRow["img22"],
                                img23 = (string)dataRow["img23"],
                                img24 = (string)dataRow["img24"],
                                img25 = (string)dataRow["img25"],
                                img26 = (string)dataRow["img26"],
                                img27 = (string)dataRow["img27"] == "" ? 0 : Convert.ToInt16(dataRow["img27"]),
                                img28 = (string)dataRow["img28"] == "" ? 0 : Convert.ToInt16(dataRow["img28"]),
                                //img29 = (string)dataRow["img29"],
                                img30 = (string)dataRow["img30"] == "" ? 0 : Convert.ToDouble(dataRow["img30"]),
                                img31 = (string)dataRow["img31"] == "" ? 0 : Convert.ToDouble(dataRow["img31"]),
                                img32 = (string)dataRow["img32"] == "" ? 0 : Convert.ToDouble(dataRow["img32"]),
                                img33 = (string)dataRow["img33"] == "" ? 0 : Convert.ToDouble(dataRow["img33"]),
                                img34 = (string)dataRow["img34"] == "" ? 0 : Convert.ToDouble(dataRow["img34"]),
                                img35 = (string)dataRow["img35"],
                                img36 = (string)dataRow["img36"],
                                img37 = StringTODateTime((string)dataRow["img37"]),
                                img38 = (string)dataRow["img38"],
                                //imgplant = (string)dataRow["imgplant"],
                                //imglegal = (string)dataRow["imglegal"],
                            });
                        }
                    } while (dtr.NextResult());
                    //foreach (var item in material_List)
                    //{
                    //    var OneMaterialList = result_list.Where(c => c.img01 == item && c.img10 > 0).ToList();
                    //    result.Add(item, JsonConvert.SerializeObject(OneMaterialList));
                    //}
                }
                dtr.Close();
                cn.Close();
            }
            if (!String.IsNullOrEmpty(productName)) result_list = result_list.Where(c => c.ima02 == productName).ToList();
            return result_list;
        }

        //财务明细表查询
        public static List<cxcr006> ERP_FinanceDetialsQuery()
        {
            string data = string.Empty;
            List<cxcr006> result_list = new List<cxcr006>();
            DataTable OutDataTable = new DataTable();
            OutDataTable.TableName = "data";
            DataRow dataRow;
            using (OracleConnection cn = GetOracleConnection())
            {
                cn.Open();
                string sql = "SELECT tc_cxc01,tc_cxc02,tc_cxc03,0,tc_cxc04,tc_cxc05,tc_cxc06,tc_cxc07,tc_cxc08,tc_cxc09,tc_cxc10,tc_cxc11, tc_cxc12,tc_cxc13,tc_cxc14 FROM tc_cxc_file ORDER BY tc_cxc01";
                OracleCommand cmd = new OracleCommand(sql, cn);
                cmd.CommandType = System.Data.CommandType.Text;
                OracleDataReader dtr = cmd.ExecuteReader();
                if (dtr.Read())
                {
                    for (int j = 0; j < dtr.FieldCount; j++)
                    {
                        OutDataTable.Columns.Add(dtr.GetName(j));
                    }
                    do
                    {
                        while (dtr.Read())
                        {
                            dataRow = OutDataTable.NewRow();
                            for (int j = 0; j < dtr.FieldCount; j++)
                            {
                                data = dtr[j].ToString();
                                dataRow[j] = data;
                            }
                            OutDataTable.Rows.Add(dataRow);
                            result_list.Add(new cxcr006
                            {
                                tc_cxc01 = (string)dataRow["tc_cxc01"],  //料号
                                tc_cxc02 = (string)dataRow["tc_cxc02"],  //品名
                                tc_cxc03 = (string)dataRow["tc_cxc03"],  //规格
                                area = Convert.ToDouble((string)dataRow["0"]),             //面积
                                tc_cxc04 = Convert.ToDouble((string)dataRow["tc_cxc04"]),  //本月结存数
                                tc_cxc05 = Convert.ToDouble((string)dataRow["tc_cxc05"]),  //本月结存单价
                                tc_cxc06 = Convert.ToDouble((string)dataRow["tc_cxc06"]),  //本月结存金额
                                tc_cxc07 = Convert.ToDouble((string)dataRow["tc_cxc07"]),  //30天
                                tc_cxc08 = Convert.ToDouble((string)dataRow["tc_cxc08"]),  //90天
                                tc_cxc09 = Convert.ToDouble((string)dataRow["tc_cxc09"]),  //180天
                                tc_cxc10 = Convert.ToDouble((string)dataRow["tc_cxc10"]),  //365天
                                tc_cxc11 = Convert.ToDouble((string)dataRow["tc_cxc11"]),  //2年
                                tc_cxc12 = Convert.ToDouble((string)dataRow["tc_cxc12"]),  //3年
                                tc_cxc13 = Convert.ToDouble((string)dataRow["tc_cxc13"]),  //3-5年
                                tc_cxc14 = Convert.ToDouble((string)dataRow["tc_cxc14"]),  //5年以上
                            });
                        }
                    } while (dtr.NextResult());
                }
                dtr.Close();
                cn.Close();
            }
            return result_list;
        }

        //MC未发料表查询
        public static List<csfr008> ERP_MC_NuIssueDetialsQuery(DateTime inputdate, DateTime enddate)
        {
            string data = string.Empty;
            List<csfr008> result_list = new List<csfr008>();
            DataTable OutDataTable = new DataTable();
            OutDataTable.TableName = "data";
            DataRow dataRow;
            using (OracleConnection cn = GetOracleConnection())
            {
                cn.Open();
                //string sql = "select sfb01,sfbud01,sfb81,sfb08,sfb09,sfa03,ima02,ima021,sfa12,sfa05,sfa06 from sfb_file,sfa_file,ima_file where((sfb01 in (select sfb01 from sfb_file where sfb04 <> '8' and sfb87 <> 'X')) and sfb81 >= to_date('19-01-01', 'YY-MM-DD') and sfb81 <= to_date('19-01-31', 'YY-MM-DD')) and sfb01 = sfa01 and sfa03 = ima01 union select sfb01,sfbud01,sfb81,sfb08,sfb09, sfa03,ima02,ima021,sfa12,sfa05,sfa06 from sfb_file, sfa_file, ima_file where((sfb01 in (select sfb01 from sfb_file where sfb04 = '8' and sfb38 >= to_date('19-01-01', 'YY-MM-DD') and sfb38 <= to_date('19-01-31', 'YY-MM-DD')))) and sfb01 = sfa01 and sfa03 = ima01 order by sfb81";

                string inputdatestring = string.Format("{0:d}", inputdate).Substring(2);
                string enddatestring = string.Format("{0:d}", enddate).Substring(2);

                string sql = "select sfb01,sfbud01,sfb81,sfb08,sfb09,sfa03,ima02,ima021,sfa12,sfa05,sfa06 from sfb_file,sfa_file,ima_file where((sfb01 in (select sfb01 from sfb_file where sfb04 <> '8' and sfb87 <> 'X')) and sfb81 >= to_date('" + inputdatestring + "', 'YY-MM-DD') and sfb81 <= to_date('"+ enddatestring + "', 'YY-MM-DD')) and sfb01 = sfa01 and sfa03 = ima01 union select sfb01,sfbud01,sfb81,sfb08,sfb09, sfa03,ima02,ima021,sfa12,sfa05,sfa06 from sfb_file, sfa_file, ima_file where((sfb01 in (select sfb01 from sfb_file where sfb04 = '8' and sfb38 >= to_date('" + inputdatestring + "', 'YY-MM-DD') and sfb38 <= to_date('"+ enddatestring +"', 'YY-MM-DD')))) and sfb01 = sfa01 and sfa03 = ima01 order by sfb81";

                //  sfb81：订单录入日期
                //  sfb38：订单结案日期

                OracleCommand cmd = new OracleCommand(sql, cn);
                cmd.CommandType = System.Data.CommandType.Text;
                OracleDataReader dtr = cmd.ExecuteReader();
                if (dtr.Read())
                {
                    for (int j = 0; j < dtr.FieldCount; j++)
                    {
                        OutDataTable.Columns.Add(dtr.GetName(j));
                    }
                    do
                    {
                        while (dtr.Read())
                        {
                            dataRow = OutDataTable.NewRow();
                            for (int j = 0; j < dtr.FieldCount; j++)
                            {
                                data = dtr[j].ToString();
                                dataRow[j] = data;
                            }
                            OutDataTable.Rows.Add(dataRow);
                            result_list.Add(new csfr008
                            {
                                sfb01= (string)dataRow["sfb01"],                                  //工单号
                                sfbud01= (string)dataRow["sfbud01"],                              //工单备注
                                sfb81= Convert.ToDateTime((string)dataRow["sfb81"]),              //工单录入日期
                                sfb08 = Convert.ToDouble((string)dataRow["sfb08"]),                //生产数量
                                sfb09= Convert.ToDouble((string)dataRow["sfb09"]),                //入库数量
                                sfa03= (string)dataRow["sfa03"],                                  //料号
                                ima02= (string)dataRow["ima02"],                                  //品名
                                ima021= (string)dataRow["ima021"],                                //规格
                                sfa12= (string)dataRow["sfa12"],                                  //单位
                                sfa05= Convert.ToDouble((string)dataRow["sfa05"]),                //应发数量
                                sfa06= Convert.ToDouble((string)dataRow["sfa06"]),                //已发数量
                                sfa05_sfa06= Convert.ToDouble((string)dataRow["sfa05"]) - Convert.ToDouble((string)dataRow["sfa06"]),    //未发数量
                            });
                        }
                    } while (dtr.NextResult());
                }
                dtr.Close();
                cn.Close();
            }
            return result_list;
        }

  //      //在制工单
  //      public static

  //          SELECT ccg_file.* , ima12, ima02, ima021, ima911 FROM ccg_file , ima_file
  //WHERE ccg04= ima01    AND ccg02 = '2020' and ccg03 = '02'
  //  AND ccg06 = '1'   AND ima12 like '%'

        #endregion

        #region------ 其他方法
        private static OracleConnection GetOracleConnection()
        {
            OracleConnection conn = new OracleConnection();
            conn.ConnectionString = "User Id=hzdb;Password=hzdb;Data Source=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.1.5)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=topprod)))";
            return conn;
        }

        //String转换DateTime
        public static DateTime? StringTODateTime(string str)
        {
            DateTime? result = null;
            if (str == "")
            {
                return result;
            }
            else
            {
                result = Convert.ToDateTime(str);
                return result;
            }
        }
        #endregion

    }
}