@model IEnumerable<JianHeMES.Models.Burn_in_MosaicScreen>

@{
    ViewBag.Title = "老化拼屏查询";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<style>
    * {
        margin: 0;
        padding: 0;
    }

    .grid-card {
        margin-bottom: 10px;
    }

    .el-card {
        border: 1px solid #9C9791;
    }

    .el-main, .el-aside {
        padding: 8px 15px;
    }

    .el-header {
        padding: 0 15px;
        height: auto !important;
    }

    .el-card__header {
        text-align: center;
        border-bottom: 1px solid #9C9791;
        padding: 8px 15px;
    }

    .cardbody {
        border: 1px solid #D2CFCF;
        margin: -1px;
    }

    .el-card__body {
        height: 250px;
        overflow-y: auto;
        overflow-x: hidden;
        padding: 0px;
    }

    .cardbody-right {
        padding: 5px;
        text-align: center
    }

    .cardbody-left {
        padding: 5px 0px;
        border-right: 1px solid #D2CFCF;
        text-align: center;
        vertical-align: middle;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .barcodeSpan {
        /*cursor: pointer;*/
        padding: 1px 3px;
        display: inline-block;
        border-radius: 6px;
    }

        .barcodeSpan:hover {
            background-color: #efe2c5;
        }

    .statuinfo {
        float: right;
        margin: 0 5px;
        height: 28px;
        line-height: 28px;
    }

    @@media screen and (max-width:768px) {
        .statuinfo {
            float: left;
        }
    }


    .el-dialog__header, .el-dialog__footer {
        padding: 10px 20px;
    }

    .el-dialog--center .el-dialog__body {
        padding: 5px 0;
    }

    .dialogMainContainer {
        width: 100%;
        text-align: center;
    }

    .el-input {
        width: 200px;
    }

    .inputframe {
        width: 300px;
        text-align: right;
        margin: 1px auto;
    }

    .divframe {
        width: 300px;
        text-align: left;
        max-height: 300px;
        overflow: auto;
    }

    .el-checkbox__label {
        font-size: 12px;
    }

    .el-checkbox {
        margin: 5px;
    }
</style>

<div id="app" v-cloak>
    <h2 class="text-center">@ViewBag.Title</h2>
    <el-container>
        <el-header>
            <el-row>
                <a href="/Burn_in_MosaicScreen/mosaicScreen_B"><el-button size="mini">开始拼屏</el-button></a>
                <a href="/Burn_in_MosaicScreen/mosaicScreen_ShelfQueryHistory"><el-button size="mini">历史记录</el-button></a>
                @*<el-button size="small">@Html.ActionLink("结束拼屏", "mosaicScreen_F")</el-button>*@
                <div class="statuinfo">
                    <span style="display: inline-block; background: green;width: 10px;height: 10px;"></span> 已拼屏且正常老化中&nbsp;
                    <span style="display: inline-block; background: red;width: 10px;height: 10px;"></span> 异常&nbsp;
                    <span style="display: inline-block; background: black;width: 10px;height: 10px;"></span> 未开始老化
                </div>
            </el-row>
        </el-header>
        <el-main v-loading="loading" style="min-height:600px;">
            <el-row :gutter="10">
                <template v-for="item in dataList">
                    <el-col :xs="24" :sm="12" :md="8" :lg="6" :xl="6">
                        <el-card shadow="hover" class="grid-card">
                            <div slot="header" v-on:click="showDialog(item.ShelfNum,item.content)" style="cursor:pointer">
                                <span>{{'老化架号:'+item.ShelfNum+' (总数:'+ shelfCount(item.content)+')'}}</span>
                                @*<el-button size="mini" round style="font-size:11px;padding:5px;">修改架号</el-button>*@
                            </div>
                            <div v-for="order in item.content">
                                <el-container class="cardbody">
                                    <el-aside style="width:100px;" class="cardbody-left">{{order.ordernum}}<br />(数量:{{Object.keys(order.barcodelist).length}})</el-aside>
                                    <el-main class="cardbody-right">
                                        <template v-for="i in order.barcodelist">
                                            <el-popover placement="right"
                                                        title="条码异常信息"
                                                        trigger="hover"
                                                        v-bind:disabled="i.status=='2'?false:true">
                                                <div>{{i.Abnormal}}</div>
                                                <a :href="'/Query/barcodeInfo?1='+i.barcode" target="_blank" slot="reference">
                                                    <div class="barcodeSpan" v-bind:style="(i.status=='1')?({color:'green'}):(i.status=='2')?({color:'red'}):({color:'black'})">{{i.barcode}}</div>
                                                </a>
                                            </el-popover>
                                        </template>
                                    </el-main>
                                </el-container>
                            </div>
                        </el-card>
                    </el-col>
                </template>
            </el-row>
            <el-row v-show="isData==false">
                <el-alert title="目前没有拼屏记录！"
                          type="info"
                          :closable="false"
                          center
                          show-icon>
                </el-alert>
            </el-row>
            <el-dialog title="修改老化架号"
                       :visible.sync="dialogVisible"
                       width="96%"
                       center>
                <div class="dialogMainContainer">
                    <div class="inputframe">
                        <span>新老化架号：</span>
                        <el-input placeholder="请输入新老化架号"
                                  v-model.trim="dialogNewShelf"
                                  maxlength="4"
                                  size="medium"
                                  autofocus
                                  clearable>
                        </el-input>
                    </div>
                    <div class="inputframe">
                        <span>扫码勾选：</span>
                        <el-input placeholder="请输入需要勾选的条码"
                                  v-model="scanBarcode"
                                  v-on:keyup.enter.native="checkBarcode($event)"
                                  size="medium"
                                  clearable>
                        </el-input>
                    </div>
                    <div class="inputframe" style="text-align:left;">
                        <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" @@change="handleCheckAllChange">全选</el-checkbox>
                        <el-checkbox-group v-model="checkedList" @@change="handleCheckedListChange" class="divframe">
                            <el-checkbox v-for="item in dialogBarcodeList" :label="item" :key="item">{{item}}</el-checkbox>
                        </el-checkbox-group>
                    </div>
                </div>
                <span slot="footer" class="dialog-footer">
                    <el-button @@click="dialogVisible=false">取 消</el-button>
                    <el-button type="primary" @@click="editShelfNum" :disabled="checkedList.length==0||dialogNewShelf==''">确 定</el-button>
                </span>
            </el-dialog>
        </el-main>
    </el-container>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            dataList: [],
            isData: false,
            loading: true,
            dialogVisible: false,
            checkAll: false,
            isIndeterminate: false,
            dialogBarcodeList: [],
            checkedList: [],
            dialogOldShelf: "",
            dialogNewShelf: "",
            scanBarcode: ""
        },
        methods: {
            request: function () {
                //this.dataList = [];
                axios.post("/Burn_in_MosaicScreen/mosaicScreen_ShelfQueryData").then(response => {
                    //console.log(response.data)
                    if (response.data == "没有数据") {
                        this.dataList = [];
                        this.isData = false;
                    } else {
                        this.dataList = response.data;
                        this.isData = true;
                    };
                    this.loading = false;
                }).catch(error => {
                    console.warn("读取数据失败" + error);
                    this.loading = false;
                });
            },
            shelfCount: function (v) {
                let vCount = 0;
                for (let s in v) {
                    vCount += Object.keys(v[s].barcodelist).length;
                };
                return vCount;
            },
            //全选按钮
            handleCheckAllChange(val) {
                this.checkedList = val ? this.dialogBarcodeList : [];
                this.isIndeterminate = false;
            },
            //监听勾选
            handleCheckedListChange(value) {
                let checkedCount = value.length;
                this.checkAll = checkedCount === this.dialogBarcodeList.length;
                this.isIndeterminate = checkedCount > 0 && checkedCount < this.dialogBarcodeList.length;
            },
            //打开dialog
            showDialog: function (v, list) {
                //重置数据
                this.checkAll = false;
                this.isIndeterminate = false;
                this.dialogBarcodeList = [];
                this.checkedList = [];
                this.dialogOldShelf = v;
                this.dialogNewShelf = "";
                this.scanBarcode = "";
                //获取点击的架号的条码数组------
                let thisList = [];
                for (let order in list) {
                    let thisOrderList = list[order].barcodelist;
                    for (let barcode in thisOrderList) {
                        thisList.push(thisOrderList[barcode].barcode);
                    };
                };
                this.dialogBarcodeList = thisList;
                //------
                this.dialogVisible = true;
            },
            //扫码勾选
            checkBarcode: function (v) {
                if (v.target.value == "") {
                    return;
                };
                let barcodelist = this.dialogBarcodeList, checklist = this.checkedList;
                //检查条码组里有没有该条码
                for (let b in barcodelist) {
                    if (barcodelist[b] == v.target.value) {
                        //若有，检查已勾选列表有没有重复条码
                        for (let c in checklist) {
                            if (checklist[c] == v.target.value) {
                                this.$message({
                                    showClose: true,
                                    message: "条码号 " + v.target.value + " 已勾选！",
                                    type: 'warning'
                                });
                                this.scanBarcode = "";
                                return;
                            };
                        };
                        checklist.push(v.target.value);
                        this.scanBarcode = "";
                        this.isIndeterminate = true;
                        return;
                    };
                };
                //提示
                this.$message({
                    showClose: true,
                    message: "架号 " + this.dialogOldShelf + " 上没有该条码号！",
                    type: 'warning'
                });
                this.scanBarcode = "";
            },
            editShelfNum: function () {
                axios.post("/Burn_in_MosaicScreen/editShelfNum", {
                    oldShelfNum: this.dialogOldShelf,
                    newShelfNum: this.dialogNewShelf,
                    barcodeList: this.checkedList
                }).then(res => {
                    this.$message({
                        type: 'success',
                        message: '已将所选条码的老化架号从"' + this.dialogOldShelf + '"修改为: ' + this.dialogNewShelf
                    });
                    this.loading = true;
                    this.request();
                }).catch(error => {
                    console.warn("失败");
                });
                this.dialogVisible = false;

                //this.$prompt('如需修改，请输入正确的老化架号:', '修改老化架号', {
                //    confirmButtonText: '确定',
                //    cancelButtonText: '取消',
                //    inputPattern: /^\d{4}$/,
                //    inputErrorMessage: '老化架号不正确！'
                //}).then(({ value }) => {
                //    //修改老化架号
                //    axios.post("/Burn_in_MosaicScreen/editShelfNum", {
                //        oldShelfNum: v,
                //        newShelfNum: value,
                //        barcodeList:[]
                //    }).then(res => {
                //        this.$message({
                //            type: 'success',
                //            message: '老化架号' + v + '修改为: ' + value
                //        });
                //        this.loading = true;
                //        this.request();
                //    }).catch(error => {
                //        console.warn("失败");
                //    });
                //}).catch(() => {
                //    console.warn("取消");
                //});
            }
        },
        created: function () {
            this.request();
            setInterval(function () {
                app.request();
            }, 60000)
        }
    });
</script>