@model JianHeMES.Models.SMT_ProductionLineInfo

@{
    ViewBag.Title = "SMT_产线信息修改页面";
}
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<h3>SMT_产线信息修改页面</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="app" class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.LineNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LineNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LineNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProducingOrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <el-select v-model.trim="selectVal"
                           v-on:change="selectHandle"
                           :popper-append-to-body="false"
                           :multiple-limit="3"
                           placeholder="输入内容可查询"
                           multiple
                           filterable
                           default-first-option
                           style="width:280px"
                           size="medium"
                           clearable>
                    <el-option v-for="item in selectOptions"
                               :key="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
                @Html.EditorFor(model => model.ProducingOrderNum, new { htmlAttributes = new { @class = "form-control hidden" } })
                @Html.ValidationMessageFor(model => model.ProducingOrderNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Team, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GroupLeader, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupLeader, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupLeader, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, ViewBag.StatusValue as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "SMT_Manage")
</div>
@RenderPage("~/Views/Shared/_SelectInput.cshtml")
<script>
    var app = new Vue({
        el: "#app",
        data: {
            selectOptions: [],
            selectVal: [],
        },
        created: function () {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.selectOptions = res.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
        },
        mounted: function () {
            let thisorder = $("#ProducingOrderNum").val().split(',');
            for (let i of thisorder) {
                this.selectVal.push(i);
            };
        },
        methods: {
            selectHandle: function (v) {
                let orderString;
                if (v != "") {
                    for (let i in v) {
                        if (i == 0) {
                            orderString = v[i];
                        } else {
                            orderString += ',' + v[i];
                        };
                    };
                    $("#ProducingOrderNum").val(orderString);
                } else {
                    $("#ProducingOrderNum").val('');
                };
            }
        }
    });
</script>