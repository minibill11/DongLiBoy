@model IEnumerable<JianHeMES.Models.Assemble>

@{
    ViewBag.Title = "组装信息查询";
}
@Scripts.Render("~/Scripts/highcharts")
<link href="~/Scripts/Bootstraps/bootstrap-select.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-select.js"></script>

<style type="text/css">
    /*手型指针*/
    .progress {
        cursor: pointer;
        margin-bottom: 0px;
    }


    .selectpicker {
        border: 1px solid #ccc;
    }

    .dropdown-menu > li > a {
        padding: 3px 10px;
    }

    .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 150px;
    }

    @@media screen and (max-width: 768px) {
        .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
            width: 135px;
        }

        .selectpicker {
            font-size: 13px;
        }
    }
    /*Cage*/
    .fqc-first {
        height: 65px;
    }

    .fqc-content-topbutton {
        width: 130px;
        height: 34px;
        margin: 15px 120px;
        border: none;
        border-radius: 5px;
        box-shadow: 0 2px 3px #888888;
        background-color: #e0e0e0;
        transition: all linear .2s;
    }

    .fqc-content-topbutton:hover {
            background-color: burlywood;
        }

    .fqc-index-content {
        height: 35px;
        margin-top: 8px;
        margin-bottom: 0px;
    }

    .fqc-index-content-inner {
        text-align: left;
        float: left;
        height: 35px;
        width: 250px;
    }

    .fqc-index-content-inner:nth-child(1) {
            width: 230px;
            margin-left: 95px;
        }

    .fqc-index-content-inner:nth-child(2) {
            width: 240px;
        }

    .fqc-index-content-inner:nth-child(3) {
            width: 180px;
            margin-left: 25px;
        }

    .btn-group > .btn:first-child {
        border: 1px solid rgba(178, 167, 167, 0.5);
    }

    .fqc-index-content-inner:nth-child(3) > input {
        width: 150px;
    }

    .fqc-index-content-inner:nth-child(4) > input {
        width: 135px;
        height: 34px;
        display: inline-block;
    }

    .fqc-index-content-inner:nth-child(4) > button {
        float: right;
        margin-left: 15px;
        height: 34px;
        border: none;
        background-color: #e0e0e0;
        border-radius: 5px;
        transition: all linear .1s;
    }

    .fqc-index-content-inner:nth-child(4) > button:hover {
            background-color: burlywood;
            color: #fff;
            box-shadow: 0 2px 3px #888888;
        }

    .titlediv div{
    display:inline-block;
    }
    .titlediv b{
        display:inline-block;
        padding-bottom:4px;
    }
    .title-inner span{
        display:inline-block;
    }
    .title-inner span:hover{
        background-color:#888888;
    }
    .title-inner b{
        display:inline;
    }

/*表格样式*/
    .mytbody tr td{
        display:inline-block;
        padding:0;
    }
    .tinner{
        float:left;
    }
    .tinner:nth-child(1),table tbody tr td:nth-child(1){
        width:98px;
        text-align:center;
    }
    .tinner:nth-child(2),table tbody tr td:nth-child(2){
        width:130px;
        text-align:center;
    }
    .tinner:nth-child(3),table tbody tr td:nth-child(3){
        width:145px;
        text-align:center;
    }
    .tinner:nth-child(4),table tbody tr td:nth-child(4){
        width:110px;
        text-align:center;
    }
    .tinner:nth-child(5),table tbody tr td:nth-child(5){
        width:75px;
        text-align:center;
    }
    .tinner:nth-child(6),table tbody tr td:nth-child(6){
        width:145px;
        text-align:center;
    }
    .tinner:nth-child(7),table tbody tr td:nth-child(7){
        width:120px;
        text-align:center;
    }
    .tinner:nth-child(8),table tbody tr td:nth-child(8){
        width:180px;
        text-align:center;
    }
    .tinner:nth-child(9),table tbody tr td:nth-child(9){
        width:40px;
        text-align:center;
    }
    .tinner:nth-child(10),table tbody tr td:nth-child(10){
        width:88px;
        text-align:center;
    }

    table tbody tr{
        border-bottom:1px solid #ccc;
        height:35px;
    }
    
</style>
@*loasding-begin*@
<div class="spinner2">
    <div class="spinner-container container1">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
    </div>
    <div class="spinner-container container2">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
    </div>
    <div class="spinner-container container3">
        <div class="circle1"></div>
        <div class="circle2"></div>
        <div class="circle3"></div>
        <div class="circle4"></div>
    </div>
</div>
@*loading-finish*@
<h2 class="text-center" style="margin-top:10px;">@ViewBag.Title</h2>

<div class="text-center">
    <p class="text-success text-center btn btn-default six">
        @Html.ActionLink("PQC工位", "PQCCheckB")
    </p>
</div>
@using (Html.BeginForm("AssembleIndex", "Assembles", FormMethod.Post, new { id = "searchForm", @class = "text-center" }))
{
    @Html.AntiForgeryToken()
    <div class="container fqc-index-content">
        <form asp-controller="CalibrationRecords" asp-action="Index" method="post">
            <div class="fqc-index-content-inner">
                <span>订单号：</span>@Html.DropDownList("orderNum", (List<SelectListItem>)ViewBag.OrderList, "全部", new { @class = "selectpicker", data_live_search = "true", data_style = "form-control" })
            </div>
            <div class="fqc-index-content-inner">
                <span>模组条码号：</span><input type="text" id="barcodeNumber" class="form-control" style="display:inline;width:150px;" name="BoxBarCode" />
            </div>
            <div class="fqc-index-content-inner">
                <span>
                    PQC工位：
                    @Html.DropDownList("PQCNormal", (List<SelectListItem>)ViewBag.PQCNormal, "全部", new { @class = "form-control", style = "display:inline; width: 80px" })
                </span>
            </div>
            <div class="fqc-index-content-inner">
                <span>备注:</span>
                <input type="text" class="form-control" style="display:inline;width:150px;" name="Remark" />
                @*<input type="hidden" id="PageIndex" name="PageIndex" value="0" />*@
                <button id="searchcButton">查找</button>
                <input type="submit" id="searchButton" class="btn btn-default hidden" value="查找" />
            </div>
        </form>
    </div>
}

<div class="titlediv" style="margin-top:10px;border-bottom:1px solid black;height:37px;">
    <div class="tinner"> <b>订单号</b></div>
    <div class="tinner"> <b>箱体模组条码 </b>
        <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',1,'up','tt')"></span>
        <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab',1,'down','tt')"></span></div>
    <div class="tinner"> <b>开始时间</b> <div class="title-inner">
        <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',2,'up','times')"></span>
        <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab',2,'down','times')"></span> </div></div>
    <div class="tinner"> <b>PQC负责人 </b> <div class="title-inner">
        <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',3,'up','strings')"></span>
        <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab', 3, 'down', 'strings')"></span> </div></div>
    <div class="tinner"> <b>产线</b> <div class="title-inner">
        <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',4,'up','init')"></span>
        <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab', 4, 'down', 'init')"></span> </div></div>
    <div class="tinner"> <b>完成时间</b> <div class="title-inner">
        <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',5,'up','times')"></span>
        <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab',5,'down','times')"></span> </div></div>
    <div class="tinner"> <b>PQC时长</b>
        <div class="title-inner">
            <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',6,'up','tt')"></span>
            <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab',6,'down','tt')"></span>
        </div>
    </div>
    <div class="tinner"> <b>PQC异常</b></div>
    <div class="tinner"> <b>备注</b></div>
    <div class="tinner"> <b>PQC是<br>否完成 </b>
        <div class="title-inner">
            <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('MyHeadTab',9,'up','checkbox')"></span>
            <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('MyHeadTab', 9, 'down', 'checkbox')"></span>
        </div>
    </div>
</div>

<div style="max-height:550px;overflow: auto;margin-top:4px;clear:left;">
    <table id="MyHeadTab">
        <tdoby class="mytbody">
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                 <tr>
                    <td class="sourse">
                            @Html.DisplayFor(modelItem => item.OrderNum)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.BoxBarCode)</td>
                    <td>@Html.DisplayFor(modelItem => item.PQCCheckBT)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssemblePQCPrincipal)</td>
                    <td>@Html.DisplayFor(modelItem => item.AssembleLineId)</td>
                    <td>@Html.DisplayFor(modelItem => item.PQCCheckFT)</td>
                    <td>@Html.DisplayFor(modelItem => item.PQCCheckTime).ToString().Split('.')[0]</td>
                    <td>@Html.DisplayFor(modelItem => item.PQCCheckAbnormal)</td>
                    <td>@Html.DisplayFor(modelItem => item.Remark)</td>
                    <td>@Html.DisplayFor(modelItem => item.PQCCheckFinish)</td>
                </tr>
                }
            }
        </tdoby>
    </table>
</div>

<script>
    function checkRoles(list, roleName) {   //检测权限
        var flag = false
        if (list && roleName) {
            for (let item in list) {
                if (list[item] == roleName) {
                    flag = true
                }
            }
        }
        return flag
    }

    var roles = JSON.parse(localStorage.getItem("rigths"));
    if (checkRoles(roles, 'PQC检查')) {
        $('.one').show()
        $('.two').show()
        $('.three').show()
        $('.four').show()
        $('.five').show()
        $('.six').show()
    } else {
        $('.one').hide()
        $('.two').hide()
        $('.three').hide()
        $('.four').hide()
        $('.five').hide()
        $('.six').hide()
    }
        function sortTable(tableId,indexs,upOrDown,types) {//点击按钮实现表格排序的方法；目前支持纯字符串排序+整数排序+标准时间格式排序
            var oTab = document.getElementById(tableId);
            var arr = [];
            var indexs = indexs;
            if (upOrDown === "up") {
                if (types === "init") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //整数排序
                        var n1 = parseInt(tr1.cells[indexs].innerHTML);
                        var n2 = parseInt(tr2.cells[indexs].innerHTML);
                        return n2 - n1;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "times") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //标准时间格式排序排序
                        var n1 = new Date((tr1.cells[indexs].innerHTML)).getTime();
                        var n2 = new Date((tr2.cells[indexs].innerHTML)).getTime();
                        return n2 - n1;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "strings") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //纯字符串排序
                        var n1 = (tr1.cells[indexs].innerHTML).charCodeAt();
                        var n2 = (tr2.cells[indexs].innerHTML).charCodeAt();
                        return n2 - n1;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "checkbox") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //选择框排序
                        var n1 = tr1.cells[indexs].children;
                        var n2 = tr2.cells[indexs].children;
                        if ($(n1).attr('checked')) {
                            n1.value = 1
                        } else {
                            n1.value = 0
                        }
                        if ($(n2).attr('checked')) {
                            n2.value = 1
                        } else {
                            n2.value = 0
                        }
                        return n2.value - n1.value

                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "tt") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    arr.sort(function (tr1, tr2) {        //时分秒排序
                        var n1 = timeToSec(tr1.cells[indexs].innerHTML);
                        var n2 = timeToSec(tr2.cells[indexs].innerHTML);
                        return n2 - n1;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                }
            } else if (upOrDown === "down") {
                if (types === "init") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //整数排序
                        var n1 = parseInt(tr1.cells[indexs].innerHTML);
                        var n2 = parseInt(tr2.cells[indexs].innerHTML);
                        return n1 - n2;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "times") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //标准时间格式排序排序
                        var n1 = new Date((tr1.cells[indexs].innerHTML)).getTime();
                        var n2 = new Date((tr2.cells[indexs].innerHTML)).getTime();
                        return n1 - n2;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "strings") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //纯字符串排序
                        var n1 = (tr1.cells[indexs].innerHTML).charCodeAt();
                        var n2 = (tr2.cells[indexs].innerHTML).charCodeAt();
                        return n1 - n2;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "checkbox") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    console.log(arr)
                    arr.sort(function (tr1, tr2) {       //选择框排序
                        var n1 = tr1.cells[indexs].children;
                        var n2 = tr2.cells[indexs].children;
                        if ($(n1).attr('checked')) {
                            n1.value = 1
                        } else {
                            n1.value = 0
                        }
                        if ($(n2).attr('checked')) {
                            n2.value = 1
                        } else {
                            n2.value = 0
                        }
                        return n1.value - n2.value
                        
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                } else if (types === "tt") {
                    for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                        arr[i] = oTab.tBodies[0].rows[i];
                    }
                    arr.sort(function (tr1, tr2) {        //时分秒排序
                        var n1 = timeToSec(tr1.cells[indexs].innerHTML);
                        var n2 = timeToSec(tr2.cells[indexs].innerHTML);
                        return n1 - n2;
                    });
                    for (var i = 0; i < arr.length; i++) {
                        oTab.tBodies[0].appendChild(arr[i]);
                    }
                }
            }
        }

        function timeToSec(time) {     //时分秒字符串格式转换为毫秒
            if (time.indexOf(":") != -1) {
                
                var hour = time.split(':')[0]
                var min = time.split(':')[1]
                var sec = time.split(':')[2]
                var s = Number(hour * 3600) + Number(min * 60) + Number(sec)
                return s * 1000
            }
            else if (time.indexOf("A") != -1 || time.indexOf("F") != -1) {
                var targetNum = time.substring(10);
                return Number(targetNum, 10);
            }
        }


        function chackboxVal(input) {    //checkbox状态转换为数值

            if (input.checked == false) {
                input = 1
            } else {
                input = 0
            }
            return input;
        }
</script>

