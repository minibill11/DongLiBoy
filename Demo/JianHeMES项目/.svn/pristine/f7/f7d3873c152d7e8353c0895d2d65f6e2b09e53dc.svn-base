@{
    ViewBag.Title = "老化信息首页";
}
@* css放置处 *@
@section cssStyle {
    <link rel="stylesheet/less" type="text/css" href="~/Content/styleFile/moduleManagement/module.less" />
}
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            @*菜单*@
            <h1>@ViewBag.Title</h1>
        </el-header>
        <el-main class="main">
            <el-row class="text-center">
                <el-form :inline="true" size="small">
                    <el-form-item label="选择订单">
                        <select-input v-model.trim="Ordernum" :disabled="false" :appendbody="false" :options="ordernumOptions" :isfocus="true" size="medium"></select-input>
                    </el-form-item>
                    <el-form-item label="">
                        <el-button type="primary" @@click="onQuerySubmit">查询</el-button>
                        <a href="Burn_in_B" v-show="islimit('单个模组老化开始')" style="margin-left:10px;"><el-button type="primary" size="small" plain>单个模组开始老化</el-button></a>
                        <a href="Burn_in_Batch_B" v-show="islimit('批量模组老化开始')" style="margin-left:10px;"><el-button type="primary" size="small" plain>批量模组开始老化</el-button></a>
                        <a href="AbnormalRecordInput" style="margin-left:10px;"><el-button type="primary" size="small" plain>模组老化过程异常输入</el-button></a>
                        <a href="Burn_in_Batch_F" v-show="islimit('批量模组老化完成')" style="margin-left:10px;"><el-button type="primary" size="small" plain>批量完成老化</el-button></a>
                        <a href="BurnInShelfQuery" style="margin-left:10px;"><el-button type="primary" size="small" plain>老化架查询</el-button></a>
                    </el-form-item>
                </el-form>
            </el-row>
            <info-component v-show="tableList.length>0" :infodata="infodata" :screensize="screenSize"></info-component>
            <el-row class="text-center">
                @RenderPage("~/Views/Assembles/_index_table.cshtml")
            </el-row>
        </el-main>
    </el-container>
</div>
@* 分部页放置处 *@
@section renderPage {
    @RenderPage("~/Views/Shared/_SelectInput.cshtml")
    @RenderPage("~/Views/Assembles/_index_info.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script src="~/Scripts/echarts4.0.4.min.js"></script>
    <script src="~/Content/styleFile/moduleManagement/module.js"></script>
    <script>
        const app = {
            data: function () {
                return {
                    tableList: [],//存储表格总数据
                    infodata: {},
                }
            },
            mixins: [setModuleManagement],
            created: function () {
                //获取订单列表
                this.getOrdernumList();
            },
            //函数方法
            methods: {
                //获取订单号选择框下拉清单
                getOrdernumList() {
                    axios.post('/Assembles/OrderList').then(res => {
                        this.ordernumOptions = res.data;
                    }).catch(err => {
                        console.warn(err);
                    });
                },
                //总表条件查询
                onQuerySubmit() {
                    if (this.Ordernum == null || this.Ordernum == '') {
                        this.$message('未选择订单');
                        return;
                    };
                    axios.request({
                        method: 'post',
                        url: `${vm.MESHOST}/api/Burn_inAPI/NewIndex`,
                        data: { ordernum: this.Ordernum },
                        //headers: { 'Authorization': localStorage.getItem('authorization') }
                    }).then(res => {
                        let rtd = res.data.Data, info = {}, list = [];
                        info.ordernum = this.Ordernum;
                        info.baseinfo = rtd.baseinfo;
                        info.statuList = rtd.statuList;
                        info.groupPie = {
                            title: { text: '班组完成饼图' },
                            series: [{ data: rtd.groupPie }]
                        };
                        info.statuePie = {
                            title: { text: '异常正常饼图' },
                            series: [{ data: rtd.statuePie }]
                        };
                        this.infodata = info;
                        for (let i of rtd.table) {
                            list.push({
                                ordernum: i.group,
                                barcode: 'title'
                            });
                            list = list.concat(i.tableList);
                        };
                        this.tableList = list;
                    });
                },
            },
        };
    </script>
}