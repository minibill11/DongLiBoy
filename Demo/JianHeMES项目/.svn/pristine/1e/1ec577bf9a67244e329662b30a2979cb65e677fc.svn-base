
@{
    ViewBag.Title = "OutsideBoxLableLogoChange";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    .inputframe{
        display:flex;
        justify-content:center;
    }
    .inputframe span{
        display:flex;
        flex-direction:column;
        justify-content:center;
    }
    .tableContainer{
        width:50%;
        margin: 25px auto;
        
    }
    .cell{
        text-align:center;
    }
</style>
<h5>@*OutsideBoxLableLogoChange*@</h5>

<div id="app">
    <div class="inputframe">
        <span>订单号：</span>
        <el-select v-model.trim="selectVal" placeholder="输入内容可查询" filterable size="medium">
            <el-option v-for="item in selectOptions"
                       :key="item.value"
                       :value="item.value">
            </el-option>
        </el-select>
    </div>
    <div class="tableContainer">
        <el-table :data="tableData"
                  border
                  v-bind:span-method="objectSpanMethod"
                  style="width: 100%">
            <el-table-column prop="ScreenNum"
                             label="屏序"
                             width="180">
            </el-table-column>
            <el-table-column prop="OuterBoxBarcode"
                             label="条码"
                             width="180">
            </el-table-column>
            <el-table-column label="LOGO">
                <template slot-scope="scope">
                    <el-tooltip :content="scope.row.IsLogo=='100'?'有LOGO':'无LOGO'" placement="top">
                        <el-switch v-model="scope.row.IsLogo"
                                   active-color="#13ce66"
                                   v-on:change="switchChange(scope.row,scope.$index)"
                                   inactive-color="#ff4949"
                                   active-value="100"
                                   inactive-value="0">
                        </el-switch>
                    </el-tooltip>
                </template>
            </el-table-column>
        </el-table>
    </div>
    <el-button size="mini" type="success" v-on:click="goback">返回</el-button>
</div>

<script>
    let app = new Vue({
        el: "#app",
        data: {
            selectOptions: [],
            selectVal: null,
            value5: '100',
            tableData: [],
            spanArr:[]
        },
        mounted() {
            axios.post('/Packagings/GetOrderList').then(res => {

                this.selectOptions = res.data;
                //this.selectOptions2 = rer.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
        },
        methods: {
            switchChange(row, indexs) {
                console.log(row)  // 发生改变则表示跟原值相反
                console.log(indexs)
                axios.post("/Packagings/OutsideBoxLableLogoChange", { ordernum: row.OrderNum, outerboxbarcode: row.OuterBoxBarcode, logo: row.IsLogo == '0' ? false : true }).then(res=> {
                    console.log(res.data)
                    if (res.data == "无修改.") {
                        this.$message({
                            message: "修改失败！",
                            type: "warning"
                        });
                    } else {
                        this.$message({
                            message: res.data,
                            type: "success"
                        })
                    }
                }).catch(err=> {
                    this.$message({
                        message: "连接失败！",
                        type: "warning"
                    })
                })
                this.$message({
                    message: "改变状态成功！",
                    type: "success"
                });

            },
            goback(){
                window.history.back();
            },
            objectSpanMethod({row,column,rowIndex,columnIndex}) {
                if (columnIndex === 0) {
                    if (this.spanArr[rowIndex]) { // [3,0,0,2,0,3,0,0]
                        return {
                            rowspan: this.spanArr[rowIndex],
                            colspan: 1
                        }
                    } else {
                        return {
                            rowspan: 0,
                            colspan: 0
                        }
                    }
                }
            },
        },
        watch: {
            selectVal() {
                if (this.selectVal != null) {
                    axios.post('/Packagings/OutsideBoxLableLogoGet', { ordernum: this.selectVal }).then(res=> {
                        //console.log(res.data);
                        let Datas = []
                        for (let item in res.data) {
                            Datas.push(JSON.parse(res.data[item]))
                        }

                        let targetData = []
                        Datas.forEach(item=> {
                            item.forEach(items=> {
                                if (items.IsLogo == true) {
                                    items.IsLogo = '100'
                                } else {
                                    items.IsLogo = '0'
                                }
                                targetData.push(items)
                            })
                        });
                        //console.log(targetData);
                        this.tableData = targetData
                        //console.log(JSON.parse(res.data.屏序4))
                        //res.data.forEach
                    }).catch(err=> {
                        this.$message({
                            message: "连接失败！",
                            type: "warning"
                        })
                    })
                }
            },
            tableData() {
                if (this.tableData.length != 0) {
                    getSpan(this.tableData);
                    console.log(app.spanArr)
                }
            }
        }
    });

    // 获取按照当前表格数据而得到的合并信息
    function getSpan(arrs) {
        app.spanArr  = []; // 方法开始时初始化
        let contactDot = 0;
        arrs.forEach((item, index) => {
            if (index === 0) {
                app.spanArr.push(1)
            } else {
                if (item.ScreenNum === arrs[index - 1].ScreenNum) {
                    app.spanArr[contactDot] += 1;
                    app.spanArr.push(0)
                } else {
                    contactDot = index
                    app.spanArr.push(1)
                }
            }
        })
    }
</script>
