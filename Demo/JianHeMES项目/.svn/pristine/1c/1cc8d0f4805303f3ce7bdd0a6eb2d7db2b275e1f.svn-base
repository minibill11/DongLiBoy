@{
    ViewBag.Title = "出库";
}
@* css放置处 *@
@section cssStyle {
    <link rel="stylesheet/less" type="text/css" href="~/Content/styleFile/warehouseMaterial/warehouse.less" />
}
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            @*菜单*@
            <module-menu-component name="Material_Outbound" title="@ViewBag.Title"></module-menu-component>
        </el-header>
        <el-main v-loading="loading">
            <el-row class="main">
                <el-col :span="12" :xs="24">
                    <div class="flex-item">
                        <label>班组</label>
                        <div>
                            <el-select v-model="Group"
                                       placeholder="请选择班组"
                                       size="medium">
                                <el-option v-for="item in groupOptions"
                                           :key="item"
                                           :label="item"
                                           :value="item">
                                </el-option>
                            </el-select>
                        </div>
                    </div>
                    <div class="flex-item">
                        <label>出库类型</label>
                        <div>
                            <el-select v-model="materiaTyper"
                                       placeholder="出库类型"
                                       size="medium">
                                <el-option label="工单出库" value="工单出库"></el-option>
                                <el-option label="超领出库" value="超领出库"></el-option>
                            </el-select>
                        </div>
                    </div>
                    <div class="flex-item">
                        <label>领料人工号</label>
                        <div>
                            <el-input placeholder="领料人工号"
                                      v-model.trim="jobnum"
                                      size="medium"
                                      clearable>
                            </el-input>
                        </div>
                    </div>
                    <div class="flex-item">
                        <label>领料人姓名</label>
                        <div>
                            <el-input placeholder="领料人姓名"
                                      v-model.trim="name"
                                      size="medium"
                                      clearable>
                            </el-input>
                        </div>
                    </div>
                    <div class="flex-item">
                        <label>领料部门</label>
                        <div>
                            <el-input placeholder="领料部门"
                                      v-model.trim="Department"
                                      size="medium"
                                      clearable>
                            </el-input>
                        </div>
                    </div>
                    <div class="flex-item barcodeDiv" v-bind:class="message!=''?'is-error':''">
                        <label>条码号</label>
                        <div>
                            <div class="el-input el-input--medium el-input--suffix" @*v-bind:class="disabledState?'is-disabled':''"*@>
                                <input v-model.trim="barcode"
                                       v-on:keyup.enter="scanKeyup($event)"
                                       ref="barcodeRef"
                                       autocomplete="off"
                                       placeholder="输入条码后回车"
                                       @*v-bind:disabled="disabledState?'disabled':false"*@
                                       class="el-input__inner">
                            </div>
                            <div class="el-form-item__error" v-show="message!=''">
                                {{message}}
                            </div>
                        </div>
                    </div>

                    <div class="flex-item">
                        <div>
                            @*<el-button size="medium">重置</el-button>*@
                            <el-button type="primary" size="small" @@click="postConfirm">确认</el-button>
                        </div>
                    </div>
                    <div class="flex-item">
                        <div class="wareListTable">
                            <span>条码数量：{{barcodeList.length}}</span>
                            <el-table :data="barcodeList"
                                      height="280"
                                      style="width:300px"
                                      border>
                                <el-table-column prop="barcode"
                                                 label="条码清单">
                                </el-table-column>
                                <el-table-column prop="edit"
                                                 label=""
                                                 width="40">
                                    <template slot-scope="scope">
                                        <el-button @@click.native.prevent="deleteRow(scope.$index,scope.row)"
                                                   type="text"
                                                   size="mini"
                                                   style="margin:0;padding:0;width:100%;">
                                            <i class="el-icon-error"></i>
                                        </el-button>
                                    </template>
                                </el-table-column>
                            </el-table>
                        </div>
                    </div>
                </el-col>
                <el-col :span="12" :xs="24" class="rightFrame">
                    <div class="wareListTable">
                        <span>先入先出：{{kucunList.length}}</span>
                        <el-table :data="kucunList"
                                  max-height="280"
                                  style="max-width:450px;"
                                  border>
                            <el-table-column prop="MaterialNumber"
                                             label="物料编号"
                                             min-width="80">
                            </el-table-column>
                            <el-table-column prop="MaterialBacrcode"
                                             label="条码号"
                                             min-width="160">
                            </el-table-column>
                            <el-table-column prop="LeaveFactoryTime"
                                             label="生产日期"
                                             min-width="80">
                            </el-table-column>
                            <el-table-column prop="EffectiveDay"
                                             label="有效天数"
                                             min-width="100"
                                             sortable>
                            </el-table-column>
                        </el-table>
                    </div>
                    <ware-stock-component></ware-stock-component>
                </el-col>
            </el-row>
        </el-main>
    </el-container>
</div>
@* 分部页放置处 *@
@section renderPage {
    @RenderPage("_warehouseMenu.cshtml")
    @RenderPage("_wareStock.cshtml")
}
@* js放置处 *@
@section jsScript {
    <script src="~/Content/styleFile/warehouseMaterial/warehouse.js"></script>
    <script>
        const app = {
            data: function () {
                return {
                    message: "",
                    barcode: "",
                    barcodeList: [],
                    materiaTyper: "",
                    name: "",
                    jobnum: "",
                    kucunList: []
                }
            },
            mixins: [warehouse],
            mounted: function () {
                this.$refs.barcodeRef.focus();
            },
            methods: {
                //确认完成
                postConfirm() {
                    this.loading = true;
                    if (this.barcodeList.length == 0 || this.Group == "" || this.materiaTyper == "" || this.jobnum == "" || this.name == "") {
                        this.$message.warning("信息不完整！");
                        this.loading = false;
                        return;
                    };
                    let material_Outbound = [];
                    for (let i of this.barcodeList) {
                        material_Outbound.push(i.barcode);
                    };
                    //录入数据
                    axios.post('/Warehouse_Material/Material_Outbound', {
                        material_Outbound: material_Outbound,//条码列表
                        materiaTyper: this.materiaTyper,
                        group: this.Group,
                        department: this.Department,
                        jobnum: this.jobnum,
                        name: this.name
                    }).then(res => {
                        if (res.data.Res) {
                            this.$message.success(res.data.Meg);
                            this.barcode = "";
                            this.barcodeList = [];
                            this.kucunList = [];
                            this.loading = false;
                        } else {
                            this.$message.error(res.data.Meg);
                            this.loading = false;
                        };
                    }).catch(err => {
                        console.warn("post失败")
                        this.loading = false;
                    });
                },
                //扫码
                scanKeyup(v) {
                    if (this.barcode != "") {
                        //检查重复
                        for (let i of this.barcodeList) {
                            if (i.barcode == this.barcode) {
                                this.$message.warning("已有重复条码！");
                                this.barcode = '';
                                return;
                            };
                        };
                        this.ValidationBacrcode();
                    } else {
                        this.$message.warning("请输入条码！");
                    };
                },
                //检查条码
                ValidationBacrcode() {
                    axios.post('/Warehouse_Material/ValidationBacrcode', {
                        materialBacrcode: this.barcode,//条码
                        type: '出库'
                    }).then(res => {
                        if (res.data.res) {
                            //this.$message.success(res.data.meg);
                            this.barcodeList.push({
                                barcode: this.barcode,
                                Tips: ""
                            });
                            this.MaterialsFirstIn(this.barcode);
                            this.barcode = "";
                        } else {
                            this.$message.error(res.data.meg);
                            this.$refs.barcodeRef.select();
                            this.loading = false;
                        };
                    }).catch(err => {
                        console.warn("post失败")
                        this.loading = false;
                    });
                },
                //删除行
                deleteRow(index, row) {
                    this.barcodeList.splice(index, 1);
                },
                //获取库存清单
                MaterialsFirstIn(v) {
                    this.kucunList = [];
                    axios.post('/Warehouse_Material/MaterialsFirstIn', {
                        materialBacrcode: v
                    }).then(res => {
                        this.kucunList = res.data;
                    }).catch(err => {
                        console.warn("post失败")
                    });
                }
            },
        };
    </script>
}