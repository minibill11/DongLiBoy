@*选择搜索框*@
<script type="text/template" id="selectInput">
    <div>
        <el-row class="demo-autocomplete">
            <el-col :span="12">
                <div class="sub-title">激活即列出输入建议</div>
                <el-autocomplete class="inline-input"
                                 v-model="state1"
                                 :popper-append-to-body="false"
                                 highlight-first-item
                                 select-when-unmatched
                                 :fetch-suggestions="querySearch"
                                 placeholder="请输入内容"
                                 @@select="handleSelect"></el-autocomplete>
            </el-col>
            <el-col :span="12">
                <div class="sub-title">输入后匹配输入建议</div>
                <el-autocomplete class="inline-input"
                                 v-model="state2"
                                 :fetch-suggestions="querySearch"
                                 placeholder="请输入内容"
                                 @@select="handleSelect"></el-autocomplete>
            </el-col>
        </el-row>
    </div>
</script>
<script>
    Vue.component('select-input', {
        props: ['val','options'],
        template: document.getElementById("selectInput"),
        data: function () {
            return {
                restaurants: [],
                state1: '',
                state2: ''
            }
        },
        methods: {
            querySearch(queryString, cb) {
                var restaurants = this.restaurants;
                var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;
                // 调用 callback 返回建议列表的数据
                cb(results);
            },
            createFilter(queryString) {
                return (restaurant) => {
                    return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) > -1);
                };
            },
            loadAll() {
                return [
                    { "value": "测试" },
                ];
            },
            handleSelect(item) {
                console.log(item);
            }
        },
        mounted() {
            this.restaurants = this.loadAll();
        }
    });
</script>
