@model JianHeMES.Models.Customer_Complaints

@{
    ViewBag.Title = "编辑客诉订单";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Content/styleFile/solder/solderJavascript.js"></script>

<style>
    .pdfItem:hover {
        background-color: #808080;
    }

    .tableContainer {
        width: 75%;
        margin: 25px auto;
    }

    table {
        width: 100%;
        font-size: 16px;
    }

    table {
        table-layout: fixed;
        width: 100%;
    }

    td {
        word-break: break-all;
        text-align: center;
    }

    textarea {
        max-height: 550px !important;
        max-width: 100% !important;
        border: none;
        padding: 2px;
    }

    input {
        border: none;
        padding: 2px;
    }
</style>
<h2 style="text-align:center;margin-top:15px;margin-bottom:5px;font-size:18px;">编辑客诉订单</h2>
<div id="app">
    <div class="text-right">
        <a href="/Customer_Complaints/Index"><el-button size="small" class="cret" type="primary" plain>返回首页</el-button></a>
    </div>
    <div class="tableContainer">
        <div style="display:flex;justify-content:flex-end;">
            <span>客诉编号:</span>
            <span style="display:inline-block;width:200px;"><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.ComplaintNumber" /></span>
        </div>
        <table border="1">
            <tbody>
                @* 申 请 单 位 填 写 *@
                <tr style="height:40px">
                    <td rowspan="7">申 请 单 位 填 写</td>
                    <td>客户名称</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.CustomerName" /></td>
                    <td>订单号</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.OrderNum" /></td>
                    <td>模组数量/面积</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.ModuleNumber" /></td>
                </tr>
                <tr style="height:40px">
                    <td>所需区域</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.RequiredArea" /></td>
                    <td>产品型号</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.ProductModel" /></td>
                    <td>发货日期</td>
                    <td>
                        <el-date-picker v-model="dataInfos.DeliveryDate"
                                        type="date"
                                        v-bind:disabled="!alreadyDone"
                                        style="width:100%;height:100%;"
                                        placeholder="选择日期">
                        </el-date-picker>
                    </td>
                </tr>
                <tr style="height:40px">
                    <td>投诉日期</td>
                    <td>
                        <el-date-picker v-model="dataInfos.ComplaintsDate"
                                        type="date"
                                        v-bind:disabled="!alreadyDone"
                                        style="width:100%;height:100%;"
                                        placeholder="选择日期">
                        </el-date-picker>
                    </td>
                    <td>屏体面积</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.ScreenArea" /></td>
                    <td>控制系统及电源</td>
                    <td><input v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Control" /></td>
                </tr>
                <tr style="height:40px">
                    <td>投诉内容</td>
                    <td colspan="5">
                        <textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Complaint_Content">
                        </textarea>
                    </td>
                </tr>
                <tr style="height:150px">
                    <td>异常描述</td>
                    <td colspan="5">
                        <textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Abnormal_Describe"></textarea>
                    </td>
                </tr>
                <tr style="height:150px">
                    <td>投诉代码</td>
                    <td colspan="5" style="text-align:left;padding:25px;">
                        <span style="margin:8px;display:inline-block;" v-for="(item,index) in dataInfos.targetData">
                            <input v-bind:disabled="!alreadyDone" v-on:change="checkboxChanged(item,index)" v-model="item.flag" type="checkbox" />
                            <span style="cursor:pointer;" v-on:click="uploadImg(item,index)">{{item.code}}<span v-show="item.flag">【<span style="color:red;">{{item.CodeNumber}}</span>】</span></span>
                        </span>
                        <span>
                            <el-button size="mini" @@click="showAddOtherCode = true">其它</el-button>
                        </span>
                    </td>
                </tr>
                <tr style="height:150px">
                    <td>异常图片</td>
                    <td colspan="5">
                        <el-carousel v-show="showJPG" height="150px" style="width:60%;margin:0 auto;" trigger="click" v-bind:interval="4000">
                            <el-carousel-item v-for="(item,index) in dataInfos.Picture_jpg" key="item">
                                <img style="width:100%;height:78%;" v-on:click="showBigImg(item,index,'JPG')" v-bind:src="item" />
                                <span style="z-index:99;cursor:pointer;">{{getCustomerCode(item,'JPG')}}</span>
                                <el-button size="mini" @@click="remoceFile(item,index,'jpg')" v-show="flag">移除</el-button>
                            </el-carousel-item>
                        </el-carousel>
                        @*<el-carousel v-show="showPDF" height="150px" style="width:60%;margin:0 auto;" trigger="click" v-bind:interval="4000">
                                <el-carousel-item v-for="(item,index) in dataInfos.Picture_pdf" key="item">
                                    <img style="width:100%;height:78%;" v-on:click="showBigImg(item,index,'PDF')" v-bind:src="item" />
                                    <span style="z-index:99">{{getCustomerCode(item,'PDF')}}</span>
                                </el-carousel-item>
                            </el-carousel>*@
                        <div style="max-height:100px;overflow:scroll;" v-show="showPDF">
                            <div class="pdfItem" v-for="(item,index) in dataInfos.Picture_pdf" key="item">
                                {{getCustomerCode(item,'PDF')}}<span style="cursor:pointer;" @@click="checkPDF(item,index)">(点击查看)</span>
                                <button @@click.prevent="remoceFile(item,index,'pdf')" v-show="flag">移除</button>
                            </div>
                        </div>
                    </td>
                </tr>

                @* 接单部门填写 *@
                <tr style="height:50px">
                    <td rowspan="7">接单部门填写</td>
                    <td>原因分析</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Cause_Analysis"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>临时处理措施</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Interim_Disposal"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>长期处理措施</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Longterm_Treatment"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>责任归属</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Liability"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>最终处理结果</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Final_Result"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>备注</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.Remark"></textarea></td>
                </tr>
                <tr style="height:50px">
                    <td>结案日期</td>
                    <td colspan="5">
                        <el-date-picker v-model="dataInfos.SettlementDate"
                                        type="date"
                                        v-bind:disabled="!alreadyDone"
                                        style="width:100%;height:100%;"
                                        placeholder="选择日期">
                        </el-date-picker>
                    </td>
                </tr>
                @* 处理意见会签栏 *@
                <tr style="height:70px">
                    <td rowspan="7">处理意见会签栏</td>
                    <td>责任部门</td>
                    <td colspan="5"><textarea v-bind:disabled="!alreadyDone" style="width:100%;height:100%;" v-model="dataInfos.ResponDepartment"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>国内/外工程部</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.EngineDepartment"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>品质部</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.QualityDepartment"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>品技中心</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.Quality_TechDepartment"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>运营副总</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.Operation"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>副总经理</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.VicePresident"></textarea></td>
                </tr>
                <tr style="height:70px">
                    <td>总经理</td>
                    <td colspan="5"><textarea style="width:100%;height:100%;" v-model="dataInfos.General_Manager"></textarea></td>
                </tr>
            </tbody>
        </table>

        <div style="display:flex;justify-content:space-between;margin-top:8px;">
            <div style="margin-left:10px;font-size:11px;">（申请条件说明：当生产交付产品出现重大品质问题解决后存在隐患退货或无法改善使用时）</div>
            <div style="font-size:12px;">表单编号：QD-039-E</div>
        </div>
        <div>
            <el-button style="float:right;" size="mini" type="success" @@click="saveData">保存</el-button>
        </div>

        @* 添加错误代码弹框 *@
        <el-dialog title="添加客诉代码"
                   v-bind:visible.sync="showAddCode"
                   width="30%"
                   v-bind:before-close="cancelAdd">
            <div>
                <span>投诉代码：</span>
                <span>{{selectCode.code}}</span>
            </div>
            <div>
                <span>代码数量：</span>
                <span>
                    <input style="border:1px solid #ccc;" type="text" v-model="selectCode.CodeNumber" />
                </span>
            </div>
            <div>
                <span>tips：多选请按CTRL键</span>
                <form action="/Customer_Complaints/UploadFile_Abnormal" method="post">
                    <input type="file" id="files" multiple="multiple" name="pictureFile" />
                    <input style="display:none;" name="orderNum" v-model="dataInfos.OrderNum" />
                    <input style="display:none;" name="complaintsDate" v-model="dataInfos.ComplaintsDate" />
                    <input style="display:none;" name="complaintscode" v-model="uploadCode.code" />
                    <input style="display:none;" type="submit" value="submit" class="upload" />
                </form>
            </div>
            <span slot="footer" class="dialog-footer">
                <el-button @@click="cancelAdd">取 消</el-button>
                <el-button type="primary" @@click="comfirmAddCode">确 定</el-button>
            </span>
        </el-dialog>

        @* 上传图片弹框 *@
        <el-dialog title="上传图片"
                   v-bind:visible.sync="showUpLoad"
                   width="30%">
            <div>
                <span>代码数量：</span>
                <span>
                    <input style="border:1px solid #ccc;" type="text" v-model="uploadCode.CodeNumber" />
                </span>
                <el-button size="mini" @@click="editCode(uploadCode)">修改</el-button>
            </div>
            <div>
                <span>tips：多选请按CTRL键</span>
                <form action="/Customer_Complaints/UploadFile_Abnormal" method="post">
                    <input type="file" id="files" multiple="multiple" name="pictureFile" />
                    <input style="display:none;" name="orderNum" v-model="dataInfos.OrderNum" />
                    <input style="display:none;" name="complaintsDate" v-model="dataInfos.ComplaintsDate" />
                    <input style="display:none;" name="complaintscode" v-model="uploadCode.code" />
                    <input style="display:none;" type="submit" value="submit" class="upload" />
                </form>
            </div>
            <span slot="footer" class="dialog-footer">
                <el-button @@click="cancelUpLoad">取 消</el-button>
                <el-button type="primary" @@click="comfirmUpLoad">确 定</el-button>
            </span>
        </el-dialog>

        @* 查看大图弹框 *@
        <el-dialog title="大图预览"
                   v-bind:visible.sync="showBigImaDialog"
                   width="80%"
                   center>
            <el-carousel trigger="click" v-bind:interval="8000">
                <el-carousel-item v-for="(item,index) in fullPath" key="item">
                    <img style="width:100%;height:78%;" v-bind:src="item" />
                    <span style="z-index:99;display:inline-block;width:100%;text-align:center;">{{getCustomerCode(item)}}</span>
                </el-carousel-item>
            </el-carousel>
        </el-dialog>

        @* 其它错误代码弹框 *@
        <el-dialog title="其它错误代码"
                   v-bind:visible.sync="showAddOtherCode"
                   width="30%"
                   v-bind:before-close="cancelAdd">
            <div>
                <span>投诉代码：</span>
                <span>
                    <input style="border:1px solid #ccc;" type="text" v-model="otherCode" />
                </span>
            </div>
            <div style="margin-top:15px;">
                <span>代码数量：</span>
                <span>
                    <input style="border:1px solid #ccc;" type="text" v-model="otherCodeNums" />
                </span>
            </div>
            <span slot="footer" class="dialog-footer">
                <el-button @@click="showAddOtherCode = false;otherCode='';otherCodeNums=''">取 消</el-button>
                <el-button type="primary" @@click="comfirmAddOtherCode">确 定</el-button>
            </span>
        </el-dialog>
    </div>
</div>

<script>
    const app = new Vue({
        el: "#app",
        data: {
            dataInfos: {},
            alreadyDone: false,
            showAddCode: false,
            showUpLoad: false,
            selectCode: {},
            uploadCode: {},
            uploadFile: null,
            showJPG: false,
            showPDF: false,
            fullPath: "",
            showBigImaDialog: false,
            showAddOtherCode: false,
            otherCode: "",
            otherCodeNums: "",
            flag: false,
            id: 0
        },
        mounted() {
            // 获取地址栏id
            this.id = getQueryVariable("id");
            this.getData(this.id);
            this.flag = checkRoles(roles, '删除图片')
        },
        methods: {
            // 获取数据
            getData(id) {
                axios.post("/Customer_Complaints/QueryCustomer", { id: id }).then(res => {
                    console.log(res.data);
                    this.dataInfos = res.data[0];
                    if (this.dataInfos.Picture_jpg) {
                        if (this.dataInfos.Picture_jpg.length > 0) {
                            this.showJPG = true;
                        }
                    }
                    if (this.dataInfos.Picture_pdf) {
                        if (this.dataInfos.Picture_pdf.length > 0) {
                            this.showPDF = true;
                        }
                    }
                    if (this.dataInfos.ResponDepartment == '' || this.dataInfos.ResponDepartment == null) {
                        this.alreadyDone = true;
                    }
                    let targetData = []
                    for (let i = 1; i < 33; i++) {
                        let els = i.toString().length > 1 ? `0${i}` : `00${i}`;
                        targetData.push({ CodeNumber: '', flag: false, code: els });
                    };
                    if (res.data[0].Table.length > 0) {
                        res.data[0].Table.forEach((itemIn, index) => {
                            targetData.forEach(item => {
                                if (itemIn.Complaintscode == item.code) {
                                    item.CodeNumber = itemIn.CodeNumber;
                                    item.flag = true;
                                    delete res.data[0].Table[index];
                                };
                            });
                        });
                        res.data[0].Table.forEach(i => {
                            targetData.push({ CodeNumber: i.CodeNumber, flag: true, code: i.Complaintscode });
                        });
                    };
                    this.dataInfos.targetData = targetData;
                }).catch(err => {
                    this.$message({
                        message: "网络错误",
                        type: "warning"
                    });
                })
            },
            // 保存
            saveData() {
                if (true) {
                    axios.post("/Customer_Complaints/ModifyProcessing", { complaints: this.dataInfos }).then(res => {
                        console.log(res.data)
                        if (res.data.Repairbill == true) {
                            this.$message({
                                message: "操作成功!",
                                type: "success"
                            });
                            window.location.href = `/Customer_Complaints/Details/?id=${getQueryVariable("id")}`
                        } else {
                            this.$message({
                                message: "修改失败!",
                                type: "warning"
                            });
                        }
                    }).catch(err => {
                        this.$message({
                            message: "网络错误",
                            type: "warning"
                        });
                    })
                } else {
                    this.$message({
                        message: "责任部门已签字，不能再修改!",
                        type: "warning"
                    });
                }
            },
            // checkbox 改变
            checkboxChanged(item, index) {
                //console.log(item);
                if (item.flag == true) {
                    this.showAddCode = true;
                    this.selectCode = item;
                } else {
                    this.deleteCode(item, index);
                };
            },
            //删除代码
            deleteCode(item, index) {
                axios.post("/Customer_Complaints/DeleteCode", {
                    id: this.id,
                    code: item.code
                }).then(res => {
                    if (res.data.Mes) {
                        this.$message.success(res.data.Change);
                        item.CodeNumber = '';
                        if (index >= 32) {
                            this.dataInfos.targetData.splice(index, 1);
                        };
                    } else {
                        this.$message.error(res.data.Change);
                        item.flag = true;
                    };
                    this.$forceUpdate();
                }).catch(err => {
                    console.log(err);
                });
            },
            // 确认添加代码
            comfirmAddCode() {
                if (this.selectCode.CodeNumber != '' || this.selectCode.images != null) {
                    let arr = []
                    this.selectCode.Complaintscode = this.selectCode.code
                    this.selectCode.OutsideKey = this.dataInfos.Id
                    this.selectCode.Id = this.dataInfos.Id
                    arr.push(this.selectCode)
                    axios.post("/Customer_Complaints/EditComplaintcode", {
                        customer: arr, id: this.dataInfos.Id,
                        responDepartment: this.dataInfos.ResponDepartment
                    }).then(res => {
                        //console.log(res.data)
                        if (res.data.Mes == true) {
                            this.showAddCode = false;
                            this.$message({
                                message: "添加成功",
                                type: "success"
                            });
                            if ($("#files")[0].files.length > 0) {
                                this.uploadCode.code = this.selectCode.code
                                this.comfirmUpLoad();
                            }
                        } else {
                            this.$message({
                                message: res.data.Change,
                                type: "warning"
                            });
                        };
                    }).catch(err => {
                        this.$message({
                            message: "网络错误",
                            type: "warning"
                        });
                    })
                } else {
                    this.$message({
                        message: "必须填写数量还有选择图片",
                        type: "warning"
                    });
                }
            },
            // 取消保存
            cancelAdd() {
                this.dataInfos.targetData.forEach(item => {
                    if (item.code == this.selectCode.code) {
                        item.flag = false;
                        item.CodeNumber = null;
                        this.showAddCode = false;
                        return false;
                    }
                });

            },
            // 点击投诉代码显示上传图片框
            uploadImg(item, index) {
                //console.log(item)
                //console.log(index)
                if (item.flag == false) {
                    //this.$message({
                    //    message: "未勾选客诉代码不能上传图片",
                    //    type: "warning"
                    //});
                } else {
                    this.uploadCode = item;
                    this.showUpLoad = true
                };
            },
            //修改投诉代码的数量
            editCode(item) {
                axios.post("/Customer_Complaints/ModifyCodeNumber", {
                    id: this.id,
                    code: item.code,
                    newcodeNumber: item.CodeNumber
                }).then(res => {
                    if (res.data.Mes) {
                        this.$message.success(res.data.Change);
                        item.CodeNumber = res.data.Code;
                    } else {
                        this.$message.error(res.data.Change);
                    };
                    this.showUpLoad = false;
                }).catch(err => {
                    console.log(err);
                });
            },
            // 取消上传
            cancelUpLoad() {
                this.showUpLoad = false;
                this.uploadCode = {};
                this.uploadFile = null;
            },
            comfirmUpLoad() {
                this.showUpLoad = false
                //$(".files")[0].files

                let images = $("#files")[0].files;
                let arr = [];
                for (item in images) {
                    arr.push(images[item])
                }
                arr.pop();
                arr.pop();
                let form = new FormData()
                const config = {
                    headers: { "Content-Type": "multipart/form-data" }
                };
                form.append('complaintscode', this.uploadCode.code);
                form.append('complaintsDate', this.dataInfos.ComplaintsDate);
                form.append('orderNum', this.dataInfos.OrderNum);
                for (let i = 0; i < arr.length; i++) {
                    form.append('UploadFile_Abnormal' + i, arr[i]);
                    form.append('pictureFile', arr[i].name);
                }
                axios.post("/Customer_Complaints/UploadFile_Abnormal", form, config).then(res => {
                    console.log(res.data)
                    if (res.data == 'True') {
                        this.$message({
                            message: "上传成功！",
                            type: "success"
                        });
                        window.location.reload();
                    } else {
                        this.$message({
                            message: "上传图片失败",
                            type: "warning"
                        });
                    }
                }).catch(err => {
                    this.$message({
                        message: "网络错误",
                        type: "warning"
                    });
                });
            },
            // 截取文件名中的客诉代码
            getCustomerCode(val, types) {
                if (val.length > 0) {
                    let str = val.split('/');
                    let str2 = str.pop().split('.')
                    console.log(str2[0])
                    if (types == 'JPG') {
                        return `客诉编码(JPG)：${str2[0]}`
                    } else if (types == 'PDF') {
                        return `客诉编码(PDF)：${str2[0]}`
                    }
                    return `客诉编码：${str2[0]}`
                } else {
                    return ''
                }
            },
            // 查看大图
            showBigImg(item, index, types) {
                if (types == 'JPG') {
                    this.fullPath = this.dataInfos.Picture_jpg;
                } else {
                    this.fullPath = this.dataInfos.Picture_pdf;
                };
                this.showBigImaDialog = true;
            },
            // 确定添加其它错误代码
            comfirmAddOtherCode() {
                if (this.otherCode != '' && this.otherCodeNums != "") {
                    let arr = [];
                    let dats = {}
                    dats.Complaintscode = this.otherCode
                    dats.OutsideKey = this.dataInfos.Id
                    dats.Id = this.dataInfos.Id
                    dats.CodeNumber = this.otherCodeNums
                    arr.push(dats);
                    axios.post("/Customer_Complaints/EditComplaintcode", {
                        customer: arr, id: this.dataInfos.Id,
                        responDepartment: this.dataInfos.ResponDepartment
                    }).then(res => {
                        if (res.data.Mes == true) {
                            this.showAddCode = false;
                            this.$message({
                                message: "添加成功",
                                type: "success"
                            });
                            let obj = { CodeNumber: this.otherCodeNums, flag: true, code: this.otherCode };
                            this.dataInfos.targetData.push(obj);
                            this.showAddOtherCode = false;
                        } else {
                            this.$message({
                                message: res.data.Change,
                                type: "warning"
                            });
                        }
                    }).catch(err => {
                        this.$notify({
                            message: "网络错误!",
                            type: "warning"
                        })
                    })
                } else {
                    this.$notify({
                        message: "请补全数据!",
                        type: "warning"
                    })
                }
            },
            // 查看PDF
            checkPDF(item, index) {
                //console.log(item)
                window.open(`${item}`)
            },
            // 移除图片
            remoceFile(item, index, type) {
                console.log(item.split('/').pop().split("_")[0])
                if (this.flag) {
                    this.$confirm('此操作将永久删除该客诉文件, 是否继续?', '提示', {
                        confirmButtonText: '确定',
                        cancelButtonText: '取消',
                        type: 'warning'
                    }).then(() => {
                        axios.post("/Customer_Complaints/DeleteFile", {
                            path: item, orderNum: this.dataInfos.OrderNum, complaintsDate: this.dataInfos.ComplaintsDate,
                            complaintscode: item.split('/').pop().split("_")[0]
                        }).then(res => {
                            if (res.data == true) {
                                if (type == 'jpg') {
                                    this.dataInfos.Picture_jpg.splice(index, 1);
                                } else {
                                    this.dataInfos.Picture_pdf.splice(index, 1);
                                }
                                this.$message({
                                    type: 'success',
                                    message: '操作成功!'
                                });
                            } else {
                                this.$message({
                                    type: 'warning',
                                    message: '操作失败!'
                                });
                            }
                        }).catch(err => {
                            this.$message({
                                type: 'warning',
                                message: '网络错误'
                            });
                        })
                    }).catch(() => {
                        this.$message({
                            type: 'info',
                            message: '已取消删除'
                        });
                    });
                } else {
                    // 没有权限什么都不提示
                }
            }
        }
    });
    function getQueryVariable(variable) {
        var query = window.location.search.substring(1);
        var vars = query.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) { return pair[1]; }
        }
        return (false);
    }

</script>


<div>
    @Html.ActionLink("返回", "Index")
</div>
