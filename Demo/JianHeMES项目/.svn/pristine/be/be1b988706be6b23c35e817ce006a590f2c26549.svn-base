@model JianHeMES.Models.Personnel_daily

@{
    ViewBag.Title = "添加今天本部门人事日报信息";
}

<h3 class="col-xs-offset-3">@ViewBag.Title</h3>
<script src="~/Scripts/axios.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.address != null)
        {
            <a href="../Personnel/Edit/@ViewBag.address">修改</a>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                <select id="gll" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="PC部">PC部</option>
                    <option value="MC部">MC部</option>
                </select>
                <select id="cjm" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    @*<option value="精机部">精机部</option>
                        <option value="钣金部">钣金部</option>*@
                </select>
                <select id="ylm" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="装配二部">装配二部</option>
                    <option value="老化包装二部">老化包装二部</option>
                </select>
                <select id="gl" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="装配一部">装配一部</option>
                    <option value="老化包装一部">老化包装一部</option>
                    <option value="配套部">配套部</option>
                </select>
                <select id="lx" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="SMT一部">SMT一部</option>
                    <option value="SMT二部">SMT二部</option>
                </select>
                <select id="lll" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="人力资源部">人力资源部</option>
                    <option value="财务部">财务部</option>
                    <option value="品技中心总监">品技中心总监</option>
                    <option value="工厂厂长">工厂厂长</option>
                </select>
                <select id="zhangxiaowei" class="form-control" style="display:none">
                    <option value="">请选择</option>
                    <option value="行政后勤部">行政后勤部</option>
                    <option value="厂务中心">厂务中心</option>
                </select>
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Principal, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Principal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Principal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Aurhorized_personnel, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Aurhorized_personnel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Aurhorized_personnel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Need_personnel, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Need_personnel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Need_personnel, "", new { @class = "text-danger" })
                若无刚需人数，则刚需人数填＝编制人数。
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Employees_personnel, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Employees_personnel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Employees_personnel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Today_dutynum, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Today_dutynum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Today_dutynum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Engineering, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Engineering, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Engineering, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Workers_personnel, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Workers_personnel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Workers_personnel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Today_on_board_employees, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Today_on_board_employees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Today_on_board_employees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Today_on_board_workers, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Today_on_board_workers, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Today_on_board_workers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Todoy_dimission_employees_over7days, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Todoy_dimission_employees_over7days, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Todoy_dimission_employees_over7days, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Todoy_dimission_employees_nvever_over7days, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Todoy_dimission_employees_nvever_over7days, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Todoy_dimission_employees_nvever_over7days, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Todoy_dimission_workers, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Todoy_dimission_workers, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Todoy_dimission_workers, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resigned_that_month, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Resigned_that_month, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resigned_that_month, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Resigned_workers_that_month, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Resigned_workers_that_month, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resigned_workers_that_month, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-3 col-md-9">
                <input type="submit" value="添加今天人事日报信息" class="btn btn-default" />
                <br /><br />
                <div>
                    @Html.ActionLink("返回", "Daily")
                </div>
            </div>
        </div>
    </div>
}


@{
    var UserName = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).UserName;
    var UserRole = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Role;
    var UserDepartment = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Department;
}
<script>
    $(function () {
        let uname = '@UserName';
        let datas = ''
        axios.post("/Personnel/QueryClerk", { clerkName: uname }).then(res=> {
            console.log(res.data)
            // 返回的数据是登录人可选项。需要先把部门提取出来作为选项再显示对应部门的数据
            if (res.data.length > 0) {
                datas = res.data;
                $("#cjm").show();
                //$("#cjm").empty();
                $("#Department").hide();
                res.data.forEach(item=> {
                    $("#cjm").append(`<option value='${item.Department}'>${item.Department}</option>`)
                });
            } else if (false) {
                $("#Department").val(res.data[0].Department);
                $("#Principal").val(res.data[0].Principal);
                $("#Aurhorized_personnel").val(res.data[0].Aurhorized_personnel);
                $("#Need_personnel").val(res.data[0].Need_personnel);
            } else {
                alert("暂无补全数据！")
            }
        }).catch(err=> {
            console.log(err)
        });
        $("#cjm").change(function () {
            if ($("#cjm").val() == '') {
                $("#Principal").val('');
                $("#Aurhorized_personnel").val('');
                $("#Need_personnel").val('');
            }
            datas.forEach(item=> {
                if (item.Department == $("#cjm").val()) {
                    $("#Principal").val(item.Principal);
                    $("#Aurhorized_personnel").val(item.Aurhorized_personnel);
                    $("#Need_personnel").val(item.Need_personnel);
                    $("#Department").val(item.Department)
                    return false;
                } else { }
            })
        })
    });
</script>