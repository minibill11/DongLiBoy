@{
    ViewBag.Title = "班组信息";
}

@*  <summary>
    1.班组信息查看/新增/删除
    </summary>*@

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />@*2.13版本 elementui css文件*@
<script src="~/Content/styleFile/packaging/index.js"></script>@*2.13版本 elementui js文件*@
<style>
    [v-cloak] {
        display: none;
    }

    .el-main {
        padding: 0;
        min-height: 600px;
    }

    .el-header {
        height: auto !important;
        padding: 0;
    }

    .box-card {
        width: 300px;
        margin: 0 auto;
    }

    h4, h3 {
        margin-top: 10px;
    }

    .el-card__body, .el-card__header {
        padding: 10px;
    }

    .el-card__body {
        min-height: 300px;
    }

    .el-tag {
        margin: 7px 10px 0 0;
    }

    .button-new-tag {
        margin: 7px 10px 0 0;
        height: 32px;
        line-height: 30px;
        padding-top: 0;
        padding-bottom: 0;
    }

    .input-new-tag {
        width: 90px;
        margin: 7px 10px 0 0;
        vertical-align: bottom;
    }
</style>
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            <div v-show="screenSize>=768">
                <h3 class="text-center">@ViewBag.Title</h3>
            </div>
            <div v-show="screenSize<768">
                <h4>@ViewBag.Title</h4>
            </div>
        </el-header>
        <el-main v-loading="loading">
            <el-row>
                <el-card class="box-card">
                    <div slot="header" class="clearfix text-center">
                        <span style="font-size:18px;">所属部门：<b>{{department}}</b></span>
                    </div>
                    <el-tag :key="tag"
                            v-for="tag in dynamicTags"
                            closable
                            :disable-transitions="false"
                            @@close="handleClose(tag)">
                        {{tag}}
                    </el-tag>
                    <br />
                    <el-input class="input-new-tag"
                              v-if="inputVisible"
                              v-model="inputValue"
                              ref="saveTagInput"
                              size="small"
                              @@keyup.enter.native="handleInputConfirm"
                              @@blur="handleInputConfirm">
                    </el-input>
                    <el-button v-else class="button-new-tag" size="small" @@click="showInput">+ 新增班组</el-button>
                </el-card>
            </el-row>
        </el-main>
    </el-container>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            loading: false,
            screenSize: document.body.clientWidth,
            department: "",
            dynamicTags: [],
            inputVisible: false,
            inputValue: ''

        },
        //页面创建时执行
        created: function () {
            window.onresize = function () {
                app.screenSize = document.body.clientWidth;
            };
        },
        mounted: function () {
            this.getData();
        },
        methods: {
            //获取已存在信息
            getData() {
                this.loading = true;
                axios.post("/Users/DisplayGroup").then(res => {
                    //console.log(res.data);
                    //未登陆则返回null
                    if (res.data == '') {
                        this.$message.warning("登陆状态已丢失，请重试打开页面！")
                    } else {
                        this.department = res.data.department;
                        this.dynamicTags = res.data.Group;
                    };
                    this.loading = false;
                }).catch(err => {
                    console.warn(err);
                    this.loading = false;
                });
            },
            //删除班组, 未登录返回‘失败’，成功返回‘成功’
            handleClose(tag) {
                this.$confirm(`确认删除班组：" ${tag} "？`, '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    this.loading = true;
                    axios.post("/Users/DeleteGroup", { group: tag }).then(res => {
                        //console.log(res.data);
                        if (res.data == '失败') {
                            this.$message.warning("登陆状态已丢失，请重试打开页面！")
                        } else {
                            this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);
                            this.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                        };
                        this.loading = false;
                    }).catch(err => {
                        console.warn(err);
                        this.loading = false;
                    });
                }).catch(() => {
                });
            },
            showInput() {
                this.inputVisible = true;
                this.$nextTick(_ => {
                    this.$refs.saveTagInput.$refs.input.focus();
                });
            },
            //新增班组, 未登录返回‘失败’，其它原因返回信息，成功返回‘成功’
            handleInputConfirm() {
                let inputValue = this.inputValue;
                if (inputValue) {
                    this.loading = true;
                    axios.post("/Users/CreateGroup", { group: inputValue }).then(res => {
                        //console.log(res.data);
                        if (res.data == '失败') {
                            this.$message.warning("登陆状态已丢失，请重试打开页面！");
                        } else if (res.data == '成功') {
                            this.$message.success("添加成功");
                            this.dynamicTags.push(inputValue);
                        } else {
                            this.$message.warning(res.data);
                        };
                        this.inputVisible = false;
                        this.inputValue = '';
                        this.loading = false;
                    }).catch(err => {
                        console.warn(err);
                        this.inputVisible = false;
                        this.inputValue = '';
                        this.loading = false;
                    });
                } else {
                    this.inputVisible = false;
                    this.inputValue = '';
                };
            }
        }
    });
</script>