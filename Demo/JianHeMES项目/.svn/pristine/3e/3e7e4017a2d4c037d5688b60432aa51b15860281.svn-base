@model IEnumerable<JianHeMES.Models.EquipmentBasicInfo>

@{
    ViewBag.Title = "设备首页";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Content/styleFile/solder/solderJavascript.js"></script>
<style>
    .redcolor{
        color:red;
    }
    .cell {
        padding: 2px !important;
    }

    .el-input__inner {
        padding: 1px !important;
    }

    .el-input {
        width: 120px !important;
        display: inline-block !important;
        margin: 4px;
    }

    .equipment-index-inputcontainer {
        display: flex;
        justify-content: center;
    }

        .equipment-index-inputcontainer div {
            display: inline;
        }

    .container {
        padding: 0;
    }

    .color2 {
        color: red;
        font-size: 16px;
    }

    .has-gutter tr th .cell, .el-table__row td .cell {
        text-align: center;
    }

    .el-table__header tr,
    .el-table__header th {
        font-size: 13px;
        padding: 0;
        height: 30px;
    }

    .el-table__body tr,
    .el-table__body td {
        padding: 0;
        font-size: 12px;
        height: 30px;
    }

    textarea {
        height: 30px;
        width: 15%;
    }

    .inputtext {
        margin-top: 25px;
        display: inline-flex;
        width: 100%;
    }

    h4 {
        width: 75%;
        font-size: 20px;
        text-align: center;
    }

    .bottomInfo {
        display: flex;
        justify-content: space-between;
    }

    .pone {
        align-self: flex-end;
        font-size: 14px;
    }

    a:visited {
        color: palevioletred;
    }
    /* 已访问的链接 */
</style>

<h2 style="text-align:center;margin-top:15px;margin-bottom:5px;font-size:21px;">设备台账</h2>

@*<span>@Html.ActionLink("产线查看", "Index2")</span>*@
<div id="app">
    @*<p style="display:flex;justify-content:center;margin-top:10px;">
            <a class="checkLines" href="/Equipment/Index2"><el-button type="primary" size="mini" plain>产线查看</el-button></a>
            <a class="batvhInputEquipments" href="/Equipment/BatchInputEquipment"><el-button type="primary" size="mini" plain>批量添加</el-button></a>
            <a class="checkRepiabill" href="/Equipment/EquipmentRepairbill_Query"><el-button type="primary" size="mini" plain>报修单查询</el-button></a>
            <a class="checkTally" href="/Equipment/Equipment_Tally"><el-button type="primary" size="mini" plain>点检表查询</el-button></a>
            <a class="chechTimePlan" href="/Equipment/Equipment_MonthlyMaintenance_plan"><el-button type="primary" size="mini" plain>月保养时间计划表</el-button></a>
            <a class="targetSumary" href="/Equipment/Equipment_Quality_target"><el-button type="primary" size="mini" plain>指标达成统计汇总</el-button></a>
        </p>*@
    <p style="display:flex;justify-content:center;margin-top:10px;">
        <a class="shebeitaizhang" href="/Equipment/First_equipment"><el-button type="primary" size="mini" plain>设备台账</el-button></a>
        <a class="chechTimePlan" href="/Equipment/Equipment_MonthlyMaintenance_plan"><el-button type="primary" size="mini" plain>月保养计划</el-button></a>
        <a class="checkTally" href="/Equipment/Equipment_Tally"><el-button type="primary" size="mini" plain>点检表记录表</el-button></a>
        <a class="checkRepiabill" href="/Equipment/EquipmentRepairbill_Query"><el-button type="primary" size="mini" plain>仪器设备报修单</el-button></a>
        <a class="checkRepiabill" href="/Equipment/Equipment_safety"><el-button type="primary" size="mini" plain>安全库存清单</el-button></a>
        <a class="targetSumary" href="/Equipment/Equipment_Quality_target"><el-button type="primary" size="mini" plain>指标达成率</el-button></a>
        @*<a class="checkLines" href="/Equipment/Index2"><el-button type="primary" size="mini" plain>产线查看</el-button></a>*@
        @*<a class="batvhInputEquipments" href="/Equipment/BatchInputEquipment"><el-button type="primary" size="mini" plain>批量添加</el-button></a>*@
    </p>

    <div>
        <div class="equipment-index-inputcontainer">

            @*<div>
                    <span>资产编号</span>
                    <el-select clearable filterable size="mini" v-model="assetnumber" placeholder="请输入资产编号">
                        <el-option v-for="item in assetnumberoptions"
                                   v-bind:key="item.value"
                                   v-bind:label="item.label"
                                   v-bind:value="item.value">
                        </el-option>
                    </el-select>
                </div>*@

            <div>
                <span>设备编号</span>
                @*<el-input size="mini" v-model="equipmentnumber" placeholder="请输入设备号"></el-input>*@
                <el-select clearable filterable size="mini" v-model="equipmentnumber" placeholder="请输入设备号">
                    <el-option v-for="item in equipmentnumberoptions"
                               v-bind:key="item.value"
                               v-bind:label="item.label"
                               v-bind:value="item.value">
                    </el-option>
                </el-select>
            </div>

            <div>
                <span>设备名称</span>
                <el-input size="mini" v-model="equipmentname" placeholder="请输入设备名称"></el-input>
            </div>
            @*<div>
                    <span>型号/规格</span>
                    <el-input size="mini" v-model="modelspecification" placeholder="请输入型号/规格"></el-input>
                </div>*@
            <div>
                <span>使用部门</span>
                @*<el-input size="mini" v-model="userdepartment" placeholder="请输入使用部门"></el-input>*@
                <el-select clearable filterable size="mini" v-model="userdepartment" placeholder="请选择使用部门">
                    <el-option v-for="item in deparOpions"
                               v-bind:key="item.value"
                               v-bind:label="item.label"
                               v-bind:value="item.value">
                    </el-option>
                </el-select>
            </div>
            @*</div>
                <div class="equipment-index-inputcontainer">*@
            @*<div>
                    <span>存放地点</span>
                    <el-input size="mini" v-model="storageplace" placeholder="请输入存放地点"></el-input>
                </div>
                <br />
                <div>
                    <span>车间</span>
                    <el-input size="mini" v-model="workshop" placeholder="请输入车间"></el-input>
                </div>
                <div>
                    <span>工段</span>
                    <el-input size="mini" v-model="section" placeholder="请输入工段"></el-input>
                </div>*@
            <div>
                <span>设备状态</span>
                <el-select clearable size="mini" filterable v-model="status" placeholder="请选择设备状态">
                    <el-option v-for="item in options"
                               v-bind:key="item.value"
                               v-bind:label="item.label"
                               v-bind:value="item.value">
                    </el-option>
                </el-select>
            </div>

            @*<div>
                    <span>品牌</span>
                    <el-input size="mini" v-model="brand" placeholder="请输入品牌"></el-input>
                </div>
                <div>
                    <span>备注</span>
                    <el-input size="mini" v-model="remark" placeholder="请输入备注内容"></el-input>
                </div>*@

            <div style="margin-left:8px;">
                <el-button id="search" style="height:36px;" type="primary" v-on:click="checkinfos" size="small">查询</el-button>
                <a class="batvhInputEquipments" href="/Equipment/BatchInputEquipment"><el-button type="primary" size="mini" plain>批量添加</el-button></a>
                <a class="checkLines" href="/Equipment/Index"><el-button type="primary" size="mini" plain>产线查看</el-button></a>
            </div>

        </div>
    </div>

    <el-table v-loading="loading" size="mini" v-bind:data="tableData" style="width: 100%" max-height="590" border stripe>
        @* sortable *@
        <el-table-column prop="index" label="序号" width="35">
        </el-table-column>
        <el-table-column prop="SerialNumber" label="原序号" width="45">
        </el-table-column>
        <el-table-column prop="EquipmentNumber" sortable label="设备编号" width="85">
        </el-table-column>
        <el-table-column prop="AssetNumber" sortable label="资产编号" width="85">
        </el-table-column>
        <el-table-column prop="EquipmentName" sortable label="设备名称" width="105">
        </el-table-column>
        <el-table-column prop="Brand" label="品牌" width="75">
        </el-table-column>
        <el-table-column prop="ModelSpecification" label="型号/规格" width="75">
        </el-table-column>
        <el-table-column prop="ManufacturingNumber" label="出厂编号" width="128">
        </el-table-column>
        <el-table-column prop="Quantity" label="数量" width="51">
        </el-table-column>
        <el-table-column prop="ActionDate" label="启用时间" width="83">
        </el-table-column>
        <el-table-column prop="DepreciableLife" label="折旧年限（月）" width="115">
        </el-table-column>
        <el-table-column prop="UserDepartment" sortable label="使用部门" width="93">
        </el-table-column>
        <el-table-column prop="StoragePlace" label="存放地点" width="90">
        </el-table-column>
        <el-table-column prop="Status" label="使用状态" width="68">
            <template slot-scope="scope">
                <el-button style="padding:1px;" v-bind:type="checkStatusType(scope.row.Status)" size="mini">{{scope.row.Status}}</el-button>
            </template>
        </el-table-column>
        <el-table-column prop="Remark" label="备注" width="104">
        </el-table-column>
        <el-table-column label="操作" width="61">
            <template slot-scope="scope">
                <a v-bind:href="basehref + '?num='+ scope.row.EquipmentNumber" v-on:click="changeTrColor(scope.row,$index)" target="_blank">详细</a>
                @*<el-button v-on:click.native.prevent="showDetials(scope.$index, tableData)"
                               type="text"
                               size="small">
                        详细
                    </el-button>*@
            </template>
        </el-table-column>
    </el-table>
    <div v-show="showFooter">
        <span v-for="item in sumaryData" style="margin-left:25px;">
            <el-button style="padding:1px;margin-right:5px;" size="mini" v-bind:type="checkStatusType(item.name)">{{item.name}}：</el-button>
            共<span v-bind:class="item.count==0?'':'redcolor'">{{item.count}}</span>台
        </span>
    </div>
</div>


<script>

    var roles = JSON.parse(localStorage.getItem("rigths"))   //
    function checkRoles(list, roleName) {   //检测权限
        var flag = false
        if (list && roleName) {
            for (let item in list) {
                if (list[item] == roleName) {
                    flag = true
                }
            }
        }
        return flag
    }


    document.onkeydown = function (event) {
        var e = event || window.event;    // 兼容IE
        if (e && e.keyCode == 13) { //回车键的键值为13
            $("#search").click();
        }
    };
    function GMTToStr(time) {
        if (time != null) {
            let date = new Date(time)
            console.log(date);
            let Str = date.getFullYear() + '-' +
                (date.getMonth() + 1) + '-' +
                date.getDate()
                //+ ' ' +
                //date.getHours() + ':' +
                //date.getMinutes() + ':' +
                //date.getSeconds()
            return Str
        } else {
            return ''
        }
    }

    let vm = new Vue({
        el: "#app",
        data: {
            showFooter:false,
            showindex:false,
            trindex:null,
            loading:false,
            basehref:'/Equipment/Details',
            inputInfo: null,
            flag: false,
            flags: false,
            count: null,
            tableData: [],
            equipmentnumber: null,
            assetnumber: null,
            equipmentname: null,
            modelspecification: null,
            userdepartment: null,
            storageplace: null,
            workshop: null,
            section: null,
            brand:null,
            status: null,
            remark: '',
            options: [{
                value: '运行',
                label: '运行'
            },{
                value: '停机',
                label: '停机'
            }, {
                value: '维修',
                label: '维修'
            }],
            deparOpions:[],
            equipmentnumberoptions: [],
            assetnumberoptions:[],
            sumaryData:[]
        },
        methods: {
            postdata() {

            },
            indexMethod(){
                return index +1;
            },
            goinsede(){
                console.log("clicked!")
            },
            showDetials(index) {
                this.$message({
                    message: "跳转到详细页面！---id",
                    type: "success"
                })
            },
            checkinfos() {
                if (this.brand != null|| this.equipmentnumber != null || this.assetnumber != null || this.equipmentname != null || this.modelspecification != null || this.userdepartment != null || this.storageplace != null || this.workshop != null || this.section != null || this.status != null || this.remark != null) {
                    this.loading = true;
                    axios.post("/Equipment/Index", {
                        equipmentnumber: this.equipmentnumber,brand:this.brand, assetnumber: this.assetnumber, equipmentname: this.equipmentname, modelspecification: this.modelspecification, userdepartment: this.userdepartment,
                        storageplace: this.storageplace, workshop: this.workshop, section: this.section, status: this.status, remark: this.remark
                    }).then(res=> {
                        //console.log(res.data)
                        let arr = []
                        for (let item in res.data) {
                            arr.push(res.data[item])
                        }
                        let arr2 = []
                        for (let i = 0; i < arr.length; i++) {
                            arr2.push(JSON.parse(arr[i].replace(/\\/g, '')))

                            arr2[i].ActionDate = GMTToStr(arr2[i].ActionDate)
                            arr2[i].index = i+1
                        }
                        //console.log(arr2)
                        this.tableData = arr2;
                        this.loading = false;
                        //console.log(arr2)
                    }).catch(err=> {
                        this.$message({
                            message: "连接服务器失败！",
                            type: "warning"
                        })
                    })
                } else {
                    this.$message({
                        message: "请输入需要查询讯息！",
                        type:"warning"
                    })
                }
            },
            // 监听设备状态返回按钮type
            checkStatusType(item) {
                if (item == "运行") {
                    return `success`
                } else if (item == "停机") {
                    return `warning`
                } else if (item == "维修") {
                    return `danger`
                }
            },
            // 获取设备使用部门
            getDeparList() {
                axios.post("/Equipment/Userdepartment_list").then(res=> {

                    res.data.forEach(item=> {
                        let obj = {
                            value: item,
                            label: item
                        };
                        this.deparOpions.push(obj);
                    })
                })
            },
            getequipmentnumberoptions() {
                axios.post("/Equipment/EQNumberList").then(res=> {
                    //console.log(res.data)
                    res.data.forEach(item=> {
                        let obj = { label: item, value: item }
                        this.equipmentnumberoptions.push(obj)
                    })
                })
            },
            getassetnumberoptions() {
                axios.post("/Equipment/AssetNumberList").then(res=> {
                    console.log(res.data)
                    res.data.forEach(item=> {
                        let obj = { label: item, value: item }
                        this.assetnumberoptions.push(obj)
                    })
                })
            },
            // 点击行变色标记
            changeTrColor(row,index) {
                this.trindex = index
            },
            //tableRowClassName({row, rowIndex,this.trindex}) {
            //    if (rowIndex === index) {
            //        return 'success-row';
            //    }
            //    return '';
            //}
        },
        mounted(){
            this.getDeparList();
            this.getequipmentnumberoptions()
            this.getassetnumberoptions();
        },
        watch: {
            tableData() {
                this.sumaryData = [];
                if (this.tableData.length > 0) {
                    this.showFooter = true;
                    let obj1 = { name: "运行" ,count:0};
                    let obj3 = { name: "停机", count: 0 };
                    let obj2 = { name: "维修", count: 0 };
                    this.tableData.forEach(item=> {
                        if (item.Status == "运行") {
                            obj1.count++;
                        } else if (item.Status == "停机") {
                            obj3.count++;
                        } else if (item.Status == "维修") {
                            obj2.count++;
                        } 
                    });
                    this.sumaryData.push(obj1, obj3, obj2)
                } else {
                    this.showFooter = false;
                    this.sumaryData = [];
                }
            }
        }
    })
    if (checkRoles(roles, '设备添加')) {
        $('.tianjiashebei').show()
    } else {
        $('.tianjiashebei').hide()
    }

</script>

