@model JianHeMES.Models.Burn_in
@{
    ViewBag.Title = "批量老化";
}

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<h2 class="hidden-xs">@ViewBag.Title</h2>
<h5 class="visible-xs text-center">批量开始老化</h5>
<style>
    .color-show {
        display: flex;
        flex-wrap: wrap;
    }

    .color-box {
        width: 50%;
        text-align: center;
        transition: transform .3s;
        padding: 6px 4px;
    }

    .green {
        color: green;
    }

    .red {
        color: red;
    }

    .selectComponent .el-input__inner {
        width: 280px;
        margin: 5px 0;
    }

    .form-control {
        max-width: 280px;
    }


    .table > tbody > tr > td, .table > tbody > tr > th {
        padding: 1px 2px;
        text-align: center;
        vertical-align: middle;
        font-size: 12px;
        height: 24px;
    }

    .table-bordered > tbody > tr > th, .table-bordered > tbody > tr > td {
        border: 1px solid #555;
    }

    .green {
        color: green;
    }

    .red {
        color: red;
    }

    @@media screen and (max-width:768px) {
        .form-group, .control-label {
            margin-bottom: 0px;
        }

        h5 {
            margin-top: 5px;
            margin-bottom: 0px;
        }

        hr {
            margin: 10px 0px 0px;
        }

        .xsnum, .table {
            margin-bottom: 5px;
        }

        .color-box {
            padding: 4px 0 !important;
            height: 25px;
        }
    }

    .el-table .cell, .el-table--mini td, .el-table th > .cell, .el-table--mini th, .el-table .cell, .el-table--border td:first-child .cell {
        padding: 0;
        font-size: 12px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="app" class="form-horizontal">
        <h4 class="hidden-xs">老化工作</h4>
        <hr class="hidden-xs" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label col-md-4">班组</label>
                <div class="col-md-8">
                    <group-select></group-select>
                </div>
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <select-input id="OrderNum" name="OrderNum" v-model.trim="ordernum.value" :disabled="false" :appendbody="false" :options="ordernum.options" :isfocus="true" size="small"></select-input>
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
                <br class="hidden-xs" /><br class="hidden-xs" />
                @Html.LabelFor(model => model.BurnInShelfNum, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BurnInShelfNum, new { htmlAttributes = new { @class = "form-control", maxlength = "4", onkeyup = "this.value=this.value.toUpperCase().replace(/[^0-9]/g,'')", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.BurnInShelfNum, "", new { @class = "text-danger" })
                    <span style="font-size:11px;color:#888;font-weight:300;white-space:nowrap;">
                        注：装配一部1号老化架架号为:1001<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        装配二部3号老化架架号为:2003
                    </span>
                </div>
            </div>
            <div class="col-md-6"></div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <label class="control-label col-md-4" for="content">输入模块条码</label>
                <div class="col-md-8">
                    <input type="text" class="form-control" placeholder="请输入模块条码" v-model.trim="newTask" id="content" onKeyUp="value = value.replace(/[^A-Za-z0-9]/g, '')" style="display:inline;text-transform:uppercase" autocomplete="off">
                    <button id="addclick" class="btn btn-default" v-on:click="addTask">添加</button>
                    <br class="hidden-xs" /><span v-show="prompt" style="color: red;">不能输入相同条码</span>
                </div>
                <div class="form-group"><div class="col-md-12"></div></div>
                <div class="col-md-8 col-md-offset-4">
                    <button class="btn btn-default" style="color:dodgerblue" v-on:click="inspect">检查条码</button>
                    <input type="button" value="开始老化" class="btn btn-default" v-on:click="submitANDclearTask" v-show="beginShow" />
                </div>
                <div class="form-group"><div class="col-md-12"></div></div>
                <hr />
                <label class="control-label col-md-4 hidden-xs">模块条码清单:</label>
                <label class="control-label text-center visible-xs">模块条码清单</label>
                <div class="col-md-8 hidden-xs" style="height:450px;overflow:auto">
                    <div class="form-group color-show">
                        <template v-for="(task,index) in tasks">
                            <li v-if="tasks.length>0" readonly="readonly" class="color-box form-control">
                                <span>{{task}}</span>
                                <button type="button" v-on:click="removeTask(task)" title="移除条码" style="border: none; float: right;">✗</button>
                            </li>
                        </template>
                    </div>
                </div>
                <div class="col-md-8 visible-xs xsnum">
                    <div class="form-group color-show">
                        <template v-for="(task,index) in tasks">
                            <li v-if="tasks.length>0" readonly="readonly" class="color-box form-control" style="font-size:12px; padding:7px 5px">
                                <span>{{task}}</span>
                                <button type="button" v-on:click="removeTask(task)" title="移除条码" style="border: none; float: right;padding:0;width:20px;">✗</button>
                            </li>
                        </template>
                    </div>
                </div>
            </div>
            <div class="col-md-6" v-loading="loading">
                <el-table :data="commonalitylist"
                          style="width: 100%"
                          max-height="300"
                          size="mini"
                          border>
                    <el-table-column label="条码号"
                                     align="center"
                                     sortable
                                     prop="BarcodeNum_Record">
                    </el-table-column>
                    <el-table-column label="PQC"
                                     width="35"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.Accemble_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                    <el-table-column label="FQC"
                                     width="35"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.FQC_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                    <el-table-column label="拼屏"
                                     width="35"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.MosaiScreen_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                    <el-table-column label="老化"
                                     width="35"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.Burn_in_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                    <el-table-column label="校正"
                                     width="35"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.Calibration_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                    <el-table-column label="包装"
                                     width="45"
                                     align="center"
                                     prop="barcode">
                        <template slot-scope="scope">
                            <span v-bind:class="scope.row.Appearance_Record==true?trueclass:falseclass"></span>
                        </template>
                    </el-table-column>
                </el-table>
            </div>
            <div class="col-md-6 hidden-xs" v-loading="loading" style="margin-top:10px;">
                <el-table :data="returnList"
                          style="width: 100%"
                          max-height="300"
                          size="mini"
                          border>
                    <el-table-column label="条码号"
                                     width="130"
                                     align="center"
                                     sortable
                                     prop="BarcodeList">
                    </el-table-column>
                    <el-table-column label="是否在订单中"
                                     align="center"
                                     width="60"
                                     prop="BarcodeInOrder">
                    </el-table-column>
                    <el-table-column label="在其他订单号中"
                                     align="center"
                                     width="85"
                                     prop="BarcodeInOtherOrder">
                    </el-table-column>
                    <el-table-column label="是否可以老化"
                                     align="center"
                                     width="60"
                                     prop="BarcodeComfirm">
                    </el-table-column>
                    <el-table-column label="开始时间"
                                     width="60"
                                     align="center"
                                     prop="BarcodeBeginTime">
                    </el-table-column>
                    <el-table-column label="完成时间"
                                     width="60"
                                     align="center"
                                     prop="BarcodeFinishTime">
                    </el-table-column>
                    <el-table-column label="老化状态"
                                     align="center"
                                     prop="BarcodeStatus">
                    </el-table-column>
                </el-table>
            </div>
            <div class="col-md-6 visible-xs" style="font-size:12px;margin-top:10px;" v-loading="loading">
                <el-table :data="returnList"
                          style="width: 100%"
                          max-height="300"
                          size="mini"
                          border>
                    <el-table-column label="条码号"
                                     align="center"
                                     sortable
                                     prop="BarcodeList">
                    </el-table-column>
                    <el-table-column label="是否可以老化"
                                     align="center"
                                     width="80"
                                     prop="BarcodeComfirm">
                    </el-table-column>
                    <el-table-column label="老化状态"
                                     align="center"
                                     width="100"
                                     prop="BarcodeStatus">
                    </el-table-column>
                </el-table>
            </div>
        </div>
        <div class="col-md-4" style="display:none">
            <textarea autofocus="autofocus" cols="5" id="BarCodesNum" name="BarCodesNum" @*rows="15"*@ class="form-control" v-model="tasks"></textarea>
            @Html.ValidationMessageFor(model => model.BarCodesNum, "", new { @class = "text-danger" })
        </div>
        <div class="form-group"><div class="col-md-12"></div></div>
    </div>
}
<div>
    @Html.ActionLink("返回", "New_Index")
</div>

@*  引入组件：
    1/_groupSelect，下拉选择框组件
*@
@RenderPage("~/Views/Users/_groupSelect.cshtml")
@RenderPage("~/Views/Shared/_SelectInput.cshtml")
<script type="text/javascript">
    var app = new Vue({ //创建Vue对象实例
        el: "#app", //挂载DOM元素的ID
        data: {
            loading: false,
            tasks: [],
            newTask: "", //input默认值
            same: true,
            prompt: false,
            beginShow: false,
            returnList: [],
            okList: [],
            commonalitylist: [],
            trueclass: {
                'glyphicon': true,
                'glyphicon-ok': true,
                'green': true
            },
            falseclass: {
                'glyphicon': true,
                'glyphicon-remove': true,
                'red': true
            },
            ordernum: {
                value: '',
                options: []
            },
        },
        methods: {
            addTask: function (event) {
                event.preventDefault();
                this.beginShow = false;
                this.prompt = false;
                sames = app.same;
                if (app.newTask != "") {
                    app.newTask = app.newTask.toUpperCase();
                    app.newTask = app.newTask.replace(/[^A-Za-z0-9]/g, '');
                    app.tasks.forEach(function (item, index) {
                        if (app.newTask == item) {
                            console.log(index);
                            sames = false;
                            app.prompt = true;
                            app.newTask = "";
                        }
                    });
                    if (sames) { //没有相同数据才允许添加
                        app.tasks.push(app.newTask);
                        app.newTask = "";
                        $("#content").focus();
                        console.log(app.tasks); //数组
                    }
                }
            },
            removeTask: function (task) { //删除条码，重新排序数组，焦点回到input，保存删除后的数据
                this.beginShow = false;
                this.prompt = false;
                //指向Vue实例中的tasks
                removetasks = this.tasks;
                //remove
                removetasks.forEach(function (item, index) {
                    if (item == task) {
                        removetasks.splice(index, 1);
                    }
                });
                console.log(app.tasks); //数组
                $("#content").focus();
            },
            submitANDclearTask: function (event) { //提交post内容，清空本地存储表单
                event.preventDefault();
                if ($("#banzuGroup").val() == "") {
                    this.$message.warning("请选择班组");
                    return;
                };
                $.ajax({
                    type: 'post',
                    url: '/Burn_in/Burn_in_Batch_Begin',
                    data: {
                        OrderNum: app.ordernum.value,
                        BurnInShelfNum: $("#BurnInShelfNum").val(),
                        BarCodesNumList: app.tasks,
                        Department1: $("#banzuDepartment").val(),
                        Group: $("#banzuGroup").val()
                    },
                    success: function (data) {
                        //console.log(data);
                        app.beginShow = false;
                        app.tasks = [];
                        app.returnList = [];
                        app.okList = [];
                        alert(data);
                        location.reload();
                        $("#BurnInShelfNum").focus();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("批量老化失败");
                        $("#content").focus();
                    }
                });
            },
            inspect: function (event) {
                event.preventDefault();
                this.prompt = false;
                this.commonalitylist = [];
                this.returnList = [];
                this.beginShow = false;
                //var cut = this.NumList.substr(0, this.NumList.length - 1).split("\n");
                //console.log(JSON.stringify(app.tasks));
                if (app.tasks != '') {
                    var btndis = 0;
                    event.target.disabled = "disabled";
                    this.loading = true;
                    $.ajax({
                        type: 'post',
                        url: '/Burn_in/CheckBarCodesList_B',
                        data: {
                            OrderNum: app.ordernum.value,
                            BurnInShelfNum: $("#BurnInShelfNum").val(),
                            BarCodesNumList: app.tasks
                        },
                        success: function (data) {
                            console.log(data);
                            app.okList = [];
                            for (var i = 0; i < data[0].BarcodeList.length; i++) {
                                if (data[0].BarcodeComfirm[i] == "Yes") {
                                    app.okList.push(data[0].BarcodeList[i])
                                };
                                app.returnList.push({
                                    BarcodeList: data[0].BarcodeList[i],
                                    BarcodeInOrder: data[0].BarcodeInOrder[i],
                                    BarcodeInOtherOrder: data[0].BarcodeInOtherOrder[i][0],
                                    BarcodeComfirm: data[0].BarcodeComfirm[i],
                                    BarcodeBeginTime: data[0].BarcodeBeginTime[i],
                                    BarcodeFinishTime: data[0].BarcodeFinishTime[i],
                                    BarcodeStatus: data[0].BarcodeStatus[i]
                                });
                            };
                            if (app.returnList.length == app.okList.length) {
                                app.beginShow = true;
                            };
                            if (btndis == 1) {
                                event.target.disabled = "";
                                app.loading = false;
                                $("#content").focus();
                            } else {
                                btndis = 1;
                            };
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("请输入条码");
                            app.loading = false;
                            $("#content").focus();
                        }
                    });


                    $.ajax({
                        url: "/Commonality/GetBarcode_List_Each_Section_Prompt",
                        type: "post",
                        data: {
                            barcodelist: app.tasks,
                        },
                        success: function (data) {
                            //console.log(data)
                            let objData = JSON.parse(data)
                            for (let item in objData) {
                                objData[item].BarcodeNum_Record = item;
                                app.commonalitylist.push(objData[item]);
                            };

                            if (btndis == 1) {
                                event.target.disabled = "";
                                app.loading = false;
                                $("#content").focus();
                            } else {
                                btndis = 1;
                            };
                        },
                        error: function (er) {
                            app.loading = false;
                            alert("连接失败！")
                        }
                    });
                } else { $("#content").focus(); };
            },
        },
        mounted: function () {
            axios.post('/OrderMgms/GetOrderList').then(res => {
                this.ordernum.options = res.data;
            });
            var localOrder = localStorage.getItem('Order');
            if (localOrder != null) {
                this.ordernum.value = localOrder;
            };

            $("#BurnInShelfNum").keypress(function (e) {
                if (e.which == 13) {// 判断所按是否回车键
                    if ($("#BurnInShelfNum").val() != '') {
                        $("#content").select();
                        return false;// 取消默认的提交行为
                    } else {
                        return false;
                    }
                };
            });

            $("#BurnInShelfNum").focus();
        },
        watch: {
            'ordernum.value'(val) {
                if (val != '' && val != null) {
                    localStorage.setItem('Order', val);
                    $("#BurnInShelfNum").select();
                    this.beginShow = false;
                }
            },
        }
    });
</script>

