@{
    ViewBag.Title = "部门班组数据录入";
}
@* css放置处 *@
@section cssStyle {
    <link href="~/Content/vxe.css" rel="stylesheet" />
    <style>
        #app {
            padding: 20px 20px 0 20px;
            font-family: '微软雅黑';
        }

        .title {
            font-weight: 400;
            font-size: 24px;
        }

        .form-box {
            width: 100%;
            padding: 20px 0 0 0;
        }

        .form_button_box {
            width: 100%;
            padding: 10px 0 0 0;
        }
        /*    表格*/
        .table-height {
            width: 100%;
            height: 58vh;
        }

        .img-upload {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
        }

        .option-box {
            width: 100%;
            display: flex;
            flex-direction: column;
            flex-wrap: wrap;
            align-items: flex-start;
        }

        .el-upload--picture-card {
            width: 80px;
            height: 80px;
            line-height: 80px;
        }

        .el-upload-list--picture-card .el-upload-list__item {
            width: 80px;
            height: 80px;
        }
    </style>
}

<div id="app">
    <div class="title">
        部门班组数据录入
    </div>

    @*表单*@
    <div class="form-box">
        <el-form :inline="true" :model="formInfo" label-position="right" label-width="100px">
            <div>
                <el-form-item label="检查类型：">
                    <el-select v-model="formInfo.check_Type" placeholder="日检">
                        <el-option label="日检" value="日检"></el-option>
                        <el-option label="周检" value="周检"></el-option>
                        <el-option label="抽检" value="抽检"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item v-if="formInfo.check_Type == '周检'" label="第几周：">
                    <el-input v-model="formInfo.detail_week" typeof="number" placeholder="请输入数字"></el-input>
                </el-form-item>
                <el-form-item label="检查时间：">
                    <el-date-picker type="date" value-format='yyyy-MM-dd' placeholder="选择日期" v-model="formInfo.check_date"></el-date-picker>
                </el-form-item>
            </div>
            <div>
                <el-form-item label="部门：">
                    <el-select v-model="formInfo.department" placeholder="请选择部门">
                        <el-option v-for="item in department_options"
                                   :key="item.value"
                                   :label="item.label"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="位置：">
                    <el-select v-model="formInfo.position" placeholder="请选择位置">
                        <el-option label="位置一" value="位置一"></el-option>
                        <el-option label="位置二" value="位置二"></el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="区域号：">
                    <el-select v-model="formInfo.region" placeholder="请选择区域号">
                        <el-option v-for="item in district_options"
                                   :key="item.value"
                                   :label="item.label"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
                <el-form-item label="责任人">
                    <el-input v-model="formInfo.user" placeholder="请输入"></el-input>
                </el-form-item>
            </div>
            @*表格*@
            <div class="table-height">
                <vxe-grid border
                          size="small"
                          height="auto"
                          align="center"
                          :columns="tableColumn"
                          :data="tableData">
                    <template v-slot:standard="{ row }">
                        <el-checkbox-group v-model="row.option" class="option-box">
                            <el-checkbox v-for="item in row.selectoption" :label="item" :key="item">
                                {{item}}
                            </el-checkbox>
                        </el-checkbox-group>
                    </template>
                    <template v-slot:description="{ row }">
                        <el-input type="textarea"
                                  autosize
                                  placeholder="请输入内容"
                                  v-model="row.ProblemDescription">
                        </el-input>
                    </template>
                    <template v-slot:img_before_default="{ row,rowIndex  }">
                        <div class="img-upload">
                            <el-image class="el-upload-list__item-thumbnail" v-for="(url,index) in row.BeforeImprovement"
                                      :key="index"
                                      fit="cover"
                                      :preview-src-list="row.BeforeImprovement"
                                      :src="url"
                                      style="width:70px;height:70px;margin:2px"
                                      v-on:contextmenu.prevent="onDelete(url,row,rowIndex,1)" lazy>
                            </el-image>
                            <el-button size="mini" type="primary" v-on:click="addImg(row,rowIndex,1)">添加照片</el-button>
                        </div>
                    </template>
                    <template v-slot:img_after_default="{ row,rowIndex }">
                        <div class="img-upload">
                            <el-image class="el-upload-list__item-thumbnail" v-for="(url,index) in row.AfterImprovement"
                                      :key="index"
                                      fit="cover"
                                      :preview-src-list="row.AfterImprovement"
                                      :src="url"
                                      style="width:70px;height:70px;margin:2px"
                                      v-on:contextmenu.prevent="onDelete(url,row,rowIndex,2)" lazy>
                            </el-image>
                            <el-button size="mini" type="primary" v-on:click="addImg(row,rowIndex,2)">添加照片</el-button>
                        </div>
                    </template>
                    <template v-slot:rectification_time="{ row }">
                        <el-date-picker v-model="row.RectificationTime"
                                        type="datetime"
                                        style="width:150px;"
                                        placeholder="选择日期">
                        </el-date-picker>
                    </template>
                    <template v-slot:rectification_confim="{ row }">
                        <el-select v-model="row.Rectification_Confim" clearable placeholder="请选择">
                            <el-option v-for="item in rectification_confim_list"
                                       :key="item.value"
                                       :label="item.label"
                                       :value="item.value">
                            </el-option>
                        </el-select>
                    </template>
                </vxe-grid>
            </div>
            @*底部*@
            <div class="form_button_box">
                <el-button type="primary" v-on:click="onSubmit">确认上传</el-button>
                <el-button>取消</el-button>
            </div>
        </el-form>
        <!--上传照片-->
        <el-dialog v-bind:visible.sync="dialogVisible" width="500px">
            <el-upload action="/KPI/ImageUpload"
                       list-type="picture-card"
                       multiple
                       :file-list="fileList"
                       :auto-upload="false"
                       :on-change="selectFile"
                       :on-preview="handlePictureCardPreview"
                       :on-remove="handleRemove">
                <i class="el-icon-plus"></i>
            </el-upload>
            <span slot="footer" class="dialog-footer">
                <el-button v-on:click="onCancel">取 消</el-button>
                <el-button type="primary" v-on:click="uploadFile">确定上传</el-button>
            </span>
        </el-dialog>
        <el-dialog :visible.sync="showVisible">
            <img width="100%" :src="dialogImageUrl" alt="">
        </el-dialog>
    </div>


</div>
@* 分部页放置处 *@
@section renderPage {
}
@* js放置处 *@
@section jsScript {
    <script src="https://cdn.jsdelivr.net/npm/xe-utils"></script>
    <script src="https://cdn.jsdelivr.net/npm/vxe-table"></script>

    <script>
        const app = {
            data: function () {
                return {
                    //下拉选项
                    department_options: [],
                    district_options: [],
                    //上传图片
                    dialogImageUrl: '',
                    showVisible: false,
                    dialogVisible: false, //控制图片上传弹框
                    fileList:[],
                    files: [],           //存储选中的照片
                    filename: [],
                    uploadType: '',     //图片位置（改善前、改善后）
                    uploadRow: '',      //选中图片所在行
                    uploadIndex: '',     //选中行

                    //提交筛选
                    formInfo: {
                        check_Type: '',  //检查类型
                        detail_week: '',   //第几周
                        check_date: '',   //检查日期
                        department: '',      //部门
                        position: '',   // 位置
                        region: '',     //区域
                        user: ''      //责任人
                    },
                    //整改结果
                    rectification_confim_list: [{
                        value: true,
                        label: '通过'
                    }, {
                        value: false,
                        label: '不通过'
                    }],
                    //7s扣分项表
                    tableData: [],
                    tableColumn: [
                        { title: '序号', type: 'seq', width: 50 },
                        { title: '7S扣分类型', field: 'Seiri', width: 80 },
                        {
                            title: '请选择扣分参考标准', field: 'option', minWidth: 600, slots: {
                                default: 'standard'
                            }
                        },
                        {
                            title: '问题描述', field: 'ProblemDescription', width: 200, slots: {
                                default: 'description'
                            }
                        },
                        { title: '扣分', field: 'PointsDeducted', width: 80 },
                        {
                            title: '改善前图片', field: 'BeforeImprovement', width: 200, slots: {
                                default: 'img_before_default'
                            }
                        },
                        {
                            title: '改善后图片', field: 'AfterImprovement', width: 200, slots: {
                                default: 'img_after_default'
                            }
                        },
                        {
                            title: '限期整改时间', field: 'RectificationTime', width: 200, slots: {
                                default: 'rectification_time'
                            }
                        },
                        {
                            title: '整改结果', field: 'Rectification_Confim', width: 200, slots: {
                                default: 'rectification_confim'
                            }
                        }
                    ]

                }
            },
            created: function () {
                this.onGetData();
                this.onGetDepartmentData();

            },
            mounted: function () {

            },
            watch: {
                'formInfo.department': {
                    handler(val) {
                        console.log(val)
                        if (val != '') {
                            this.onGetDistrictData();
                        }
                    },
                    deep: true
                }
            },
            //函数方法
            methods: {
                //获取初始化下拉数据
                onGetDepartmentData() {
                    axios.post('/KPI/GetDepartmentList').then(res => {
                        //console.log(res)
                        this.department_options = res.data;
                    })
                },
                onGetDistrictData() {
                    axios.post('/KPI/GetDistrictList', { department: this.formInfo.department }).then(res => {
                        res.data.shift();
                        //console.log(res)
                        this.district_options = res.data;
                    })
                },
                //获取表格选项
                onGetData() {
                    axios.post('/KPI/GetInputData').then(res => {
                        //console.log(res.data)
                        this.tableData = res.data

                        //let vl = ["/MES_Data/7S/2020/7/日检/2020.7.21/PMC部/位置一/整理/改善前/改善前_1.jpg",
                        //    "/MES_Data/7S/2020/7/日检/2020.7.21/PMC部/位置一/整理/改善前/改善前_2.jpg",
                        //    "/MES_Data/7S/2020/7/日检/2020.7.21/PMC部/位置一/整理/改善前/改善前_3.jpg",
                        //    "/MES_Data/7S/2020/7/日检/2020.7.21/PMC部/位置一/整理/改善前/改善前_4.jpg"];
                        //this.tableData[0].BeforeImprovement = vl;
                    })
                },
                //添加图片
                addImg(row, rowIndex, val) {
                    //console.log(rowIndex );
                    if (this.onTip()) {
                        this.dialogVisible = true;
                        if (val == 1) {
                            this.uploadType = '改善前';
                        }
                        if (val == 2) {
                            this.uploadType = '改善后';
                        }
                        this.uploadRow = row;
                        this.uploadIndex = rowIndex;
                    }

                },
                //选取文件方法
                selectFile(file) {
                    this.files.push(file.raw);
                    this.filename.push(file.name);
                },
                handleRemove(file) {
                    //console.log(file, fileList);
                    for (let i in this.files) {
                        if (this.files[i].uid == file.uid) {
                            this.files.splice(i, 1)
                        }
                    }
                    for (let i in this.filename) {
                        if (this.filename[i] == file.name) {
                            this.filename.splice(i, 1)
                        }
                    }
                },
                handlePictureCardPreview(file) {
                    this.dialogImageUrl = file.url;
                    this.showVisible = true;
                },
                //取消上传 
                onCancel() {
                    this.fileList = [];
                    this.dialogVisible = false;
                },
                //上传文件方法
                uploadFile() {
                    this.formInfo.check_date.toString();
                    //console.log(this.formInfo);
                    let fd = new FormData();
                    fd.append('department', this.formInfo.department)
                    fd.append('position', this.formInfo.position)
                    fd.append('check_date', this.formInfo.check_date)
                    fd.append('check_Type', this.formInfo.check_Type)
                    fd.append('pointsDeducted_Type', this.uploadRow.Seiri)
                    fd.append('uploadType', this.uploadType)
                    let param = {
                        'department': this.formInfo.department,
                        'position': this.formInfo.position,
                        'check_date': this.formInfo.check_date,
                        'check_Type': this.formInfo.check_Type,
                        'pointsDeducted_Type': this.uploadRow.Seiri,
                        'uploadType': this.uploadType
                    }
                    console.log(param, 9999999);
                    this.filename.forEach(file => { fd.append("pictureFile", file); })
                    j = 0;
                    this.files.forEach(item => { fd.append("UploadFile_Ingredients" + j, item); j++; })
                    console.log(fd);
                    axios.post('/KPI/ImageUpload', fd).then(res => {
                        //console.log(res)
                        if (res.data == 'True') {
                            this.$message.success('文件上传成功！');
                            this.dialogVisible = false;
                            this.onGetImg(param);
                            this.files = this.fileList = this.filename = [];
                            
                        } else {
                            this.$message.error('文件上传失败');
                            this.dialogVisible = false;
                        }
                    })
                },
                //获取图片
                onGetImg(param) {
                    axios.post('/KPI/QueryImage', param).then(res => {
                        console.log(res.data.drawjpg_list)
                        if (param.uploadType == '改善前') {
                            this.tableData[this.uploadIndex].BeforeImprovement = res.data.drawjpg_list;
                        }
                        if (param.uploadType == '改善后') {
                            this.tableData[this.uploadIndex].AfterImprovement = res.data.drawjpg_list;
                        }
                    })
                },
                //删除图片
                onDelete(url, row,rowIndex,val) {
                    console.log(url, 00)
                    console.log(row, 11)
                    if (val == 1) {
                        this.uploadType = '改善前';
                    }
                    if (val == 2) {
                        this.uploadType = '改善后';
                    }
                    this.$confirm('确认删除该图片？')
                        .then(_ => {
                            this.uploadIndex = rowIndex;
                            let param = {
                                'path': url,
                                'department': this.formInfo.department,
                                'position': this.formInfo.position,
                                'check_date': this.formInfo.check_date,
                                'check_Type': this.formInfo.check_Type,
                                'pointsDeducted_Type': row.Seiri,
                                'uploadType': this.uploadType
                            }
                            axios.post('/KPI/DeleteImg', param).then(res => {
                                //console.log(res)
                                if (res.data = "删除成功") {
                                    this.onGetImg(param)
                                }
                            })
                        }).catch();
                },
                //提示
                onTip() {
                    if (this.formInfo.check_Type == '') {
                        this.$message.warning('请选择检查类型!')
                        return false;
                    } else if (this.formInfo.check_date == '') {
                        this.$message.warning('请选择检查日期！');
                        return false;
                    } else if (this.formInfo.department == '') {
                        this.$message.warning('请选择部门！');
                        return false;
                    }
                    else if (this.formInfo.position == '') {
                        this.$message.warning('请选择位置!')
                        return false;
                    } else {
                        return true;
                    }
                },
                //提交表单
                onSubmit() {
                    if (this.formInfo.check_Type == '周检' && this.formInfo.detail_week != '') {
                        if (isNaN(this.formInfo.detail_week)) {
                            this.$message.error('请在第几周字段输入纯数字!')
                            return;
                        }
                    }
                    console.log(this.formInfo);
                    console.log(this.tableData, 111);
                }
            }
        };
    </script>
}