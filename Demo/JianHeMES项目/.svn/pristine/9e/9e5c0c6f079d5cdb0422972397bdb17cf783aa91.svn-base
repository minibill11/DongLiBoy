@{
    ViewBag.Title = "7S区域数据";
}
@* css放置处 *@
@section cssStyle {
    <link href="~/Content/vxe.css" rel="stylesheet" />
    <style>
        #app {
            padding: 20px 20px 0 20px;
            font-family: '微软雅黑';
        }

        .title {
            font-weight: 400;
            font-size: 24px;
        }

        .action-box {
            width: 100%;
            padding: 20px 0;
            display: flex;
            align-content: center;
            justify-content: space-between;
        }

        .action-box-left {
            width: 100%;
        }

        .action-box-right {
            display: flex;
            align-items: center;
        }

            .action-box-right .textinput, .action-box-right {
                margin-right: 10px;
            }

        .table-height {
            width: 100%;
            height: 70vh;
        }
        /*    表格*/
    </style>
}

<div id="app" v-cloak>
    <div class="title">
        7S区域数据
    </div>

    @*操作栏*@
    <div class="action-box">
        <div class="action-box-left" v-if="showRegion">
            <el-select size="small" v-model="select_version" placeholder="请选择时间版本" style="width:150px;">
                <el-option v-for="item in version_options"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-select size="small" v-model="select_department" placeholder="请选择部门" style="width:150px;">
                <el-option v-for="item in department_options"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-select size="small" v-model="select_position" placeholder="请选择位置" style="width:150px;">
                <el-option v-for="item in position_options"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-select size="small" v-model="select_district" placeholder="请选择区域号" style="width:150px;">
                <el-option v-for="item in district_options"
                           :key="item.value"
                           :label="item.label"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-button size="small" type="primary" v-on:click="onQueryData">查询</el-button>
        </div>
        <div class="action-box-right" v-if="!button_falg">
            <el-button v-if="inputRegion" size="small" type="primary" plain v-on:click="onEntry">批量录入</el-button>
        </div>
        <div class="action-box-right" v-if="button_falg">
            <el-input type="textarea" rows="1" v-model="inputInfo" class="textinput" placeholder="表格粘贴处..." style="width:150px;"></el-input>
            <el-date-picker size="small" type="date" value-format='yyyy-MM-dd' placeholder="执行时间" v-model="select_date" style="width: 130px;margin-right: 10px;" @@change="onChangeDate"></el-date-picker>
            <el-button size="small" type="primary" plain v-on:click="onUpload">确认上传</el-button>
            <el-button size="small" type="info" plain v-on:click="onCancel">取消</el-button>
        </div>
    </div>

    @*表格*@
    <div class="table-height">
        <vxe-grid border
                  show-overflow
                  keep-source
                  show-footer
                  ref="xGrid"
                  size="small"
                  height="auto"
                  align="center"
                  :edit-config="{trigger: 'manual', mode: 'row', showStatus: true}"
                  :columns="tableColumn"
                  :data="tableData">
            <template v-slot:operation="{ row }">
                <template v-if="$refs.xGrid.isActiveByRow(row)">
                    <vxe-button status="primary" title="保存" v-on:click="saveRowEvent(row)">保存</vxe-button>
                </template>
                <template v-else>
                    <vxe-button v-if="getPermissions('e')" title="编辑" v-on:click="editRowEvent(row)">编辑</vxe-button>
                </template>
                <vxe-button v-if="getPermissions('d')" title="删除" v-on:click="removeRowEvent(row)">删除</vxe-button>
            </template>

        </vxe-grid>
    </div>
</div>
@* 分部页放置处 *@
@section renderPage {
}
@* js放置处 *@
@section jsScript {
    <script src="~/Scripts/xe-utils.js"></script>
    <script src="~/Scripts/vxe-table.js"></script>
    <script>
        const app = {
            data: function () {
                return {
                    select_department: '',
                    department_options: [],
                    select_position: '',
                    position_options: [],
                    select_district: '',
                    district_options: [],
                    select_version: '',
                    version_options: [],
                    button_falg: false,
                    inputInfo: null,
                    select_date: new Date(),
                    //粘贴数据
                    inputData: [],
                    tableColumn: [
                        { title: '序号', type: 'seq', width: 50 },
                        { title: '部门', field: 'Department', editRender: { name: 'input' } },
                        { title: '位置', field: 'Position', editRender: { name: 'input' } },
                        { title: '班组', field: 'Group', editRender: { name: 'input' } },
                        { title: '区域', field: 'District', editRender: { name: 'input' } },
                        { title: '目标值', field: 'TargetValue', editRender: { name: 'input' } },
                        {
                            title: '版本时间', field: 'VersionsTime'
                        },
                        {
                            title: '操作', field: 'action', width: 240, slots: {
                                default: 'operation'
                            }
                        }
                    ],
                    tableData: [],
                    //权限
                    showRegion: false,
                    inputRegion: false,
                    updateRegion: false,
                    deleteRegion: false
                }
            },
            created: function () {
                this.onGetDepartmentData();
                this.onGetVersion();
            },
            mounted: function () {
                this.onPermissions();
            },
            watch: {
                //监听批量上传粘贴的数据
                inputInfo(val) {
                    if (val != null) {
                        var valOfPaste = val.split("\n");
                        valOfPaste.pop();
                        var initDatas = [];
                        valOfPaste.forEach((item, i) => {
                            var items = item.split("\t");
                            initDatas.push(items)
                        });
                        this.inputData = initDatas;
                        let time = this.formatTime(this.select_date);
                        initDatas.forEach(item => {
                            let obj = {
                                Department: item[0], Position: item[1], Group: item[2], District: item[3], TargetValue: item[4], VersionsTime: time
                            };
                            this.tableData.push(obj);
                        })
                    }

                },
                select_department(val) {
                    if (val != '') {
                        this.select_district = '';
                        this.button_falg = false;
                        this.inputInfo = null;
                        this.onGetPosition();
                    } else {
                        this.tableData = [];
                    }
                },
                select_position(val) {
                    if (val != '') {
                        this.onGetDistrictData();
                    } else {
                        this.select_district = '';
                    }
                }
            },
            //函数方法
            methods: {
                //获取初始化下拉数据
                onGetDepartmentData() {
                    axios.post('/KPI/GetDepartmentList').then(res => {
                        //console.log(res)
                        res.data.shift();
                        this.department_options = res.data;
                    })
                },
                onGetDistrictData() {
                    axios.post('/KPI/GetDistrictList', { department: this.select_department, position: this.select_position }).then(res => {
                        //console.log(res)
                        this.district_options = res.data;
                    })
                },
                onGetPosition() {
                    axios.post('/KPI/GetPositionList', { department: this.select_department }).then(res => {
                        //console.log(res)
                        //res.data.shift();
                        this.position_options = res.data;
                    })
                },
                onGetVersion() {
                    axios.post('/KPI/GetVersions').then(res => {
                        //console.log(res)
                        //res.data.shift();
                        this.version_options = res.data;
                    })
                },
                // 判断权限
                onPermissions() {
                    if (this.islimit('查看7S区域数据')) {
                        this.showRegion = true
                    }
                    if (this.islimit('录入7S区域数据')) {
                        this.inputRegion = true
                    }
                    if (this.islimit('修改7S区域数据')) {
                        this.updateRegion = true
                    }
                    if (this.islimit('删除7S区域数据')) {
                        this.deleteRegion = true
                    }
                },
                getPermissions(val) {
                    //console.log(val)
                    if (this.button_falg == true) {
                        return true;
                    } else {
                        if (val == 'e') {
                            if (this.updateRegion == true) {
                                return true;
                            } else {
                                return false;
                            }
                        }

                        if (val == 'd') {
                            if (this.deleteRegion == true) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                    }
                },
                //查询数据
                onQueryData() {
                    if (this.select_version == '') {
                        this.$message.warning('请选择时间版本！');
                    } else if (this.select_department == '') {
                        this.$message.warning('请选择部门！');
                    } else {
                        axios.post('/KPI/Region_query', {
                            department: this.select_department,
                            position: this.select_position,
                            district: this.select_district,
                            versionsTime: this.select_version
                        }).then(res => {
                            //console.log(res)
                            this.tableData = res.data
                        })
                    }
                },
                //批量录入
                onEntry() {
                    this.select_department = '';
                    this.select_position = '';
                    this.select_district = '';
                    this.select_version = '';
                    this.district_options = [];
                    this.tableData = [];
                    this.button_falg = true;
                },
                //确认上传
                onUpload() {
                    if (this.tableData.length != 0) {
                        axios.post('/KPI/Region_Input', {
                            record: this.tableData
                        }).then(res => {
                            //console.log(res)
                            if (res.data == "保存成功！") {
                                this.$message.success('上传成功！');
                                this.onCancel();
                                this.onGetVersion();
                                this.onGetDepartmentData();
                            }
                            if (res.data == "保存失败！") {
                                this.$message.error('上传失败！数据已存在，请不要重复上传！');
                            }

                        })
                    } else {
                        this.$message.error('没有数据可以上传，请在表格粘贴数据哦~');
                    }
                },
                //取消批量录入
                onCancel() {
                    this.inputInfo = null;
                    this.button_falg = false;
                    this.tableData = [];
                },

                //表格编辑，保存，删除
                editRowEvent(row) {
                    this.$refs.xGrid.setActiveRow(row);
                },
                saveRowEvent(row) {
                    this.$refs.xGrid.clearActived().then(() => {
                        if (this.button_falg == true) {
                            this.$message.success('修改成功！');
                        } else {
                            //console.log(row)
                            let param = {
                                id: row.Id,
                                department: row.Department,
                                group: row.Group,
                                position: row.Position,
                                district: row.District,
                                targetValue: row.TargetValue
                            }
                            //console.log(param);
                            axios.post('/KPI/Region_modify', param).then(res => {
                                //console.log(res)
                                if (res.data == "修改成功!") {
                                    this.onGetDepartmentData();
                                    this.$message.success('修改成功！');
                                }

                            })
                        }
                    })
                },
                removeRowEvent(row) {
                    this.$XModal.confirm('您确定要删除该数据?').then(type => {
                        if (type === 'confirm') {
                            this.$refs.xGrid.remove(row);
                            if (this.button_falg == true) {
                                this.$message.success('删除成功！');
                                this.tableData = this.$refs.xGrid.$refs.xTable.afterFullData;
                                console.log(this.tableData, 111);
                            } else {
                                axios.post('/KPI/Region_delete', {
                                    id: row.Id
                                }).then(res => {
                                    if (res.data == "删除成功!") {
                                        this.onGetDepartmentData();
                                        this.$message.success('删除成功！');
                                    }

                                })

                            }
                        }
                    })

                },
                //格式化数据
                formatTime(val) {
                    return XEUtils.toDateString(val, 'yyyy-MM-dd')
                },
                onChangeDate() {
                    //console.log(this.inputData,55555)
                    let arr = this.inputData;
                    let list = [];
                    if (arr.length != 0) {
                        let time = this.formatTime(this.select_date);
                        arr.forEach(item => {
                            let obj = {
                                Department: item[0], Position: item[1], Group: item[2], District: item[3], TargetValue: item[4], VersionsTime: time
                            };
                            list.push(obj);
                        })
                        this.tableData = list;
                    }
                }
            }
        };
    </script>
}