@model JianHeMES.Models.CalibrationRecord

@{
    ViewBag.Title = "修改校正信息";
}
<style>
    input[type=checkbox] {
        cursor: not-allowed;
    }
</style>
<h3>@ViewBag.Title</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>修改校正信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.BeginCalibration)
        @Html.HiddenFor(model => model.FinishCalibration)
        @Html.HiddenFor(model => model.CalibrationTime)
        @Html.HiddenFor(model => model.CalibrationTimeSpan)
        @Html.HiddenFor(model => model.Operator)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BarCodesNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarCodesNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.BarCodesNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleGroupNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleGroupNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ModuleGroupNum, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.BeginCalibration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.DisplayFor(model => model.BeginCalibration)
            @Html.EditorFor(model => model.BeginCalibration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BeginCalibration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.FinishCalibration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishCalibration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinishCalibration, "", new { @class = "text-danger" })
            </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Normal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Normal, new { htmlAttributes = new { } })
                @Html.ValidationMessageFor(model => model.Normal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="DescriptionDetial">
            @Html.LabelFor(model => model.AbnormalDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbnormalDescription, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.AbnormalDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepetitionCalibration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepetitionCalibration, new { htmlAttributes = new {  } })
                @Html.ValidationMessageFor(model => model.RepetitionCalibration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RepetitionCalibrationCause, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RepetitionCalibrationCause, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.RepetitionCalibrationCause, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group" id="Description">
                @Html.LabelFor(model => model.CalibrationTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CalibrationTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CalibrationTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="Description">
                @Html.LabelFor(model => model.CalibrationTimeSpan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CalibrationTimeSpan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CalibrationTimeSpan, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="修改校正信息" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "index")
</div>

<script type="text/javascript">
    $("input[type=checkbox]").click(() => {
        return false;
    })
    if ($("#Normal").attr("checked") == "checked") {
        $("#DescriptionDetial").hide();
    };
    //$("#Normal").click(function () {
    //   $("#DescriptionDetial").toggle();
    //});
</script>
