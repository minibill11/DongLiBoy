@model IEnumerable<JianHeMES.Models.Appearance>

@{
    ViewBag.Title = "外观电检信息查询";
}
@Scripts.Render("~/Scripts/highcharts")
<link href="~/Scripts/Bootstraps/bootstrap-select.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-select.js"></script>
<h3 class="text-center">@ViewBag.Title</h3>
<style>
    .fqc-first {
        height: 45px;
    }

    .fqc-content-topbutton {
        width: 130px;
        height: 34px;
        border: none;
        border-radius: 5px;
        box-shadow: 0 2px 3px #888888;
        background-color: #e0e0e0;
        transition: all linear .2s;
    }

        .fqc-content-topbutton:hover {
            background-color: burlywood;
        }

    .fqc-index-content {
        height: 45px;
    }

    .fqc-index-content-inner {
        text-align: left;
        float: left;
        height: 35px;
        width: 250px;
        margin-left: 0px;
    }

        .fqc-index-content-inner:nth-child(1) {
            width: 230px;
            margin-left: 95px;
        }

        .fqc-index-content-inner:nth-child(2) {
            width: 230px;
        }

    .btn-group > .btn:first-child {
        border: 1px solid rgba(178, 167, 167, 0.5);
    }

    .fqc-index-content-inner:nth-child(3) > input {
        width: 150px;
    }

    .fqc-index-content-inner:nth-child(4) > input {
        width: 135px;
        height: 34px;
        margin-left: 15px;
        display: inline-block;
    }

    .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 150px;
    }

    .fqc-index-content-inner:nth-child(4) > button {
        float: right;
        margin-left: 10px;
        height: 34px;
        border: none;
        background-color: #e0e0e0;
        border-radius: 5px;
        transition: all linear .1s;
    }

        .fqc-index-content-inner:nth-child(4) > button:hover {
            background-color: burlywood;
            color: #fff;
            box-shadow: 0 2px 3px #888888;
        }
    /*中间隐藏部分样式*/

    .fqc-medle-content-left {
        width: 730px;
        height: 100%;
        margin-left: 23px;
        display: inline-block;
    }

    .fqc-medle-content-left-top {
        height: 68px;
        border-bottom: 1px solid #808080;
    }

    .fqc-medle-content-left-bottom {
        height: 60%;
        width: 100%;
    }

    .fqc-medle-content-left-top-inner {
        height: 20px;
        width: 155px;
        float: left;
        margin-left: 0px;
    }

        .fqc-medle-content-left-top-inner:nth-child(8) {
            margin-left: 5px;
        }

    .fqc-medle-content-left-top > span {
        display: block;
        height: 30px;
        font-size: 16px;
    }

    .fqc-medle-content-left-bottom > span {
        height: 13%;
        display: block;
    }

    .fqc-medle-content-left-bottom-inner {
        height: 120px;
        width: 170px;
        text-align: center;
        overflow-y: scroll;
    }

        .fqc-medle-content-left-bottom-inner > p {
            font-size: 10px;
            height: 13px;
            width: 150px;
            margin: 1px;
            display: inline-block;
            padding-bottom: 2px;
            border-radius: 8px;
            background-color: none;
            transition: all linear 0.1s;
        }

            .fqc-medle-content-left-bottom-inner > p:hover {
                font-size: 16px;
                height: 20px;
                background-color: burlywood;
            }

    .fqc-medle-content-left-top-inner:nth-child(8) {
        width: 290px;
    }

    .fqc-medle-content-left-top-inner:nth-child(3) {
        width: 200px;
    }

    .fqc-medle-content-left-top-inner:nth-child(7) {
        width: 215px;
    }

    /*RIGHT*/
    .fqc-medle-content-right {
        height: 220px;
        width: 320px;
        float: right;
    }

    tspan {
        font-size: 16px;
    }
    /*输出的表头部分*/
    .fqc-for-tableheader {
        height: 35px;
        margin-top: 5px;
    }

    .fqc-for-tableheader-inner {
        font-size: 18px;
    }

    strong {
        color: black;
    }

    .fqc-hidden-content {
        border-bottom: 1px solid #808080;
    }
    /*输出表格样式--无效样式？*/
    /*th {
        width: 10.2%;
    }

    td {
        width: 10%;
    }
    .table-thead-appearance >tbody > tr >th:last-child{
        width:50px;
        display:inline-block;
    }*/

    /*媒体查询--此为主要媒体查询样式编写区域：bootstrap移动端优先，所以必须移动端为常规样式。pc端为媒体查询样式*/
    @@media (min-width:450px) and (max-width:1500px) {
        strong {
            color: black;
        }

        .fqc-medle-content-left-top-inner {
            margin-left: 0px;
        }

        .fqc-hidden-content {
            height: 350px;
            border-bottom: 1px solid #808080;
        }
    }

    /*媒体查询--此为补充项*/
    @@media (max-width:450px) {
        .fqc-index-content-inner {
            margin-top: 5px;
        }

        .fqc-medle-content-right {
            display: none;
        }

        .fqc-medle-content-left-bottom {
            margin-left: 0px;
        }

        .fqc-for-tableheader-inner {
            font-size: 16px;
        }
    }

    .fqc-index-content-inner > button {
        box-shadow: 0 2px 3px #888888;
        margin-left: 5px;
    }

    .highcharts-background {
        width: 400px;
        height: 300px;
    }

    @@media (max-width:400px) {
        .fqc-medle-content-left {
            margin-left: 0px;
        }

        .fqc-medle-content-left-top {
            width: 290px;
            height: 175px;
        }

        .fqc-medle-content-left-top-inner:nth-child(8) {
            margin-left: 0px;
        }

        .fqc-index-content-inner:nth-child(1) {
            margin-left: 0px;
        }

        .fqc-index-content-inner:nth-child(4) {
            margin-left: 0px;
        }
    }

    /*输出表格对齐整改*/
    /*表头部分*/
    .table > tbody > tr > td {
        padding: 0px;
    }

        .table-thead-appearance > tbody > tr > th:nth-child(1), .table > tbody > tr > td:nth-child(1) {
            width: 110px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(2), .table > tbody > tr > td:nth-child(2) {
            width: 135px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(3), .table > tbody > tr > td:nth-child(3) {
            width: 90px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(4), .table > tbody > tr > td:nth-child(4) {
            width: 120px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(5), .table > tbody > tr > td:nth-child(5) {
            width: 140px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(6), .table > tbody > tr > td:nth-child(6) {
            width: 55px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(7), .table > tbody > tr > td:nth-child(7) {
            width: 130px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(8), .table > tbody > tr > td:nth-child(8) {
            width: 140px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(9), .table > tbody > tr > td:nth-child(9) {
            width: 36px;
            text-align: center;
        }

        .table-thead-appearance > tbody > tr > th:nth-child(10), .table > tbody > tr > td:nth-child(10) {
            width: 80px;
            padding-left: 10px;
            text-align: center;
        }
</style>
<div class="container text-center fqc-first">
    <span class="one">
        @Html.ActionLink("开始外观电检工作", "Appearance_B", "", new { @class = "btn fqc-content-topbutton" })
    </span>
    <span class="roleForOQC">
        @Html.ActionLink("条码删除审核", "DeleteConfirm", "", new { @class = "btn fqc-content-topbutton" })
    </span>
    <span>
        <a class="btn fqc-content-topbutton" href="/Packagings/lookJson">模组号使用情况</a>
    </span>
</div>

@using (Html.BeginForm("Index", "Appearances", FormMethod.Post, new { id = "searchForm", @class = "text-center" }))
{
    @Html.AntiForgeryToken()
    <div class="container fqc-index-content">
        <form asp-controller="Appearances" asp-action="Index" method="post">
            <div class="fqc-index-content-inner">
                <span>订单号：</span>@Html.DropDownList("orderNum", (List<SelectListItem>)ViewBag.OrderList, "全部", new { @class = "selectpicker", data_live_search = "true", data_style = "form-control" })
            </div>
            <div class="fqc-index-content-inner">
                <span>条码号：</span><input type="text" id="barcodenum" class="form-control" style="display:inline;width:150px;" name="BoxBarCode" />
            </div>
            <div class="fqc-index-content-inner">
                <span>
                    外观电检状态：
                    @Html.DropDownList("AppearancesNormal", (List<SelectListItem>)ViewBag.AppearancesNormal, "全部", new { @class = "form-control", style = "display:inline; width: 120px" })
                </span>
            </div>
            <div class="fqc-index-content-inner">
                <span>描述：</span>
                <input type="text" class="form-control" name="SearchString" />
                @*<input type="hidden" id="PageIndex" name="PageIndex" value="0" />*@
                <button id="searchcButton">查找</button>
                <input type="submit" id="searchButton" class="btn btn-default hidden" value="查找" />
            </div>
        </form>
    </div>
}

@*隐藏部分*@
<div id="query" class="container fqc-hidden-content" style="@ViewBag.Display">
    <div class="fqc-medle-content-left">
        <div id="theTop" class="fqc-medle-content-left-top">
            <span style="height:25px;">订单 <strong class="testcolor">@ViewBag.orderNum</strong>外观电检基本情况</span>
            <div class="fqc-medle-content-left-top-inner">
                <p>订单的模组总量：<strong>@ViewBag.Quantity</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>经过外观电检数量：<strong>@ViewBag.RecordCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>正常数量：<strong>@ViewBag.NormalCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>异常数量：<strong>@ViewBag.AbnormalCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>完成率：<strong><span>{{FinishRate}}</span>%</strong> </p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>外观包装用时: <strong>@ViewBag.TotalTime</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>查询时间： <strong><span>{{message}}</span> </strong></p>
            </div>
        </div>
        @if (ViewBag.NotDo != null)
        {
            <span class="testspan">未进行外观电检模组 <strong>@ViewBag.NotDoCount</strong> 个：</span>
            <div class="fqc-medle-content-left-bottom">

                <div class="fqc-medle-content-left-bottom-inner">
                    @foreach (var item in ViewBag.NotDo)
                    {
                        <p>@item</p>
                    }
                </div>
            </div>
        }
    </div>
    <div id="container2" class="fqc-medle-content-right"></div>
</div>

<div class=" fqc-for-tableheader" style="@ViewBag.Display">
    <p class="fqc-for-tableheader-inner">订单 @ViewBag.orderNum 详细外观电检记录：</p>
</div>
<div style="width:1140px;clear:left;">
    <table class="table-thead-appearance">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OrderNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BarCodesNum)
                <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('myTable',1,'up','tt')"></span>
                <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('myTable',1,'down','tt')"></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerBarCodesNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModuleGroupNum)
                <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('myTable',3,'up','tt')"></span>
                <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('myTable',3,'down','tt')"></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OQCCheckBT)
                <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('myTable',4,'up','times')"></span>
                <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('myTable',4,'down','times')"></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OQCPrincipal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OQCCheckFT)
                <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('myTable',6,'up','times')"></span>
                <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('myTable',6,'down','times')"></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OQCCheckTimeSpan)
                <span class="glyphicon glyphicon-chevron-up" role="button" onclick="sortTable('myTable',7,'up','tt')"></span>
                <span class="glyphicon glyphicon-chevron-down" role="button" onclick="sortTable('myTable',7,'down','tt')"></span>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Appearance_OQCCheckAbnormal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RepairCondition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OQCCheckFinish)
            </th>

        </tr>
    </table>
</div>
<div style="overflow:auto;height:380px;width:1140px;">
    <table class="table" id="myTable">

        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNum)
                    </td>
                    <td>
                        <span class="barcodeNum">@Html.DisplayFor(modelItem => item.BarCodesNum)</span>
                        @*@Html.DisplayFor(modelItem => item.BarCodesNum)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CustomerBarCodesNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModuleGroupNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OQCCheckBT)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OQCPrincipal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OQCCheckFT)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OQCCheckTimeSpan)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Appearance_OQCCheckAbnormal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RepairCondition)
                    </td>
                    <td>

                        @Html.DisplayFor(modelItem => item.OQCCheckFinish)
                    </td>
                    <td>
                        @Html.ActionLink("详细", "Details", new { id = item.Id })
                        @*|@Html.ActionLink("编辑", "Edit", new { id = item.Id })*@
                        @*|@Html.ActionLink("删除", "Delete", new { id = item.Id })*@
                    </td>
                </tr>
            }
        }
    </table>

    <form id="gotoBarCode" action="/BarCodes/Index" method="post" target="_blank" style="display:none">
        @Html.AntiForgeryToken()
        <input type="text" name="OrderNum" value="" />
        <input type="text" name="BarCodeType" value="" />
        <input type="text" name="BarCodeNum" value="" id="formBarCodeNum" />
    </form>
</div>
<script>

    function checkRoles(list, roleName) {   //检测权限
        var flag = false
        if (list && roleName) {
            for (let item in list) {
                if (list[item] == roleName) {
                    flag = true
                }
            }
        }
        return flag
    }

    var roles = JSON.parse(localStorage.getItem("rigths"));
    if (checkRoles(roles, '开始外观电检')) {
        $('.one').show()
        $('.roleForOQC').show()
    } else {
        $('.one').hide()
        $('.roleForOQC').hide()
    }

    function sortTable(tableId, indexs, upOrDown, types) {//点击按钮实现表格排序的方法；目前支持纯字符串排序+整数排序+标准时间格式排序
        var oTab = document.getElementById(tableId);
        var arr = [];
        var indexs = indexs;
        if (upOrDown === "up") {
            if (types === "init") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //整数排序
                    var n1 = parseInt(tr1.cells[indexs].innerHTML);
                    var n2 = parseInt(tr2.cells[indexs].innerHTML);
                    return n2 - n1;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "times") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //标准时间格式排序排序
                    var n1 = new Date((tr1.cells[indexs].innerHTML)).getTime();
                    var n2 = new Date((tr2.cells[indexs].innerHTML)).getTime();
                    return n2 - n1;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "strings") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //纯字符串排序
                    var n1 = (tr1.cells[indexs].innerHTML).charCodeAt();
                    var n2 = (tr2.cells[indexs].innerHTML).charCodeAt();
                    return n2 - n1;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "checkbox") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //选择框排序
                    var n1 = tr1.cells[indexs].children;
                    var n2 = tr2.cells[indexs].children;
                    if ($(n1).attr('checked')) {
                        n1.value = 1
                    } else {
                        n1.value = 0
                    }
                    if ($(n2).attr('checked')) {
                        n2.value = 1
                    } else {
                        n2.value = 0
                    }
                    return n2.value - n1.value

                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "tt") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                arr.sort(function (tr1, tr2) {        //时分秒排序
                    var n1 = timeToSec(tr1.cells[indexs].innerText);
                    var n2 = timeToSec(tr2.cells[indexs].innerText);
                    return n2 > n1;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            }
        } else if (upOrDown === "down") {
            if (types === "init") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //整数排序
                    var n1 = parseInt(tr1.cells[indexs].innerHTML);
                    var n2 = parseInt(tr2.cells[indexs].innerHTML);
                    return n1 - n2;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "times") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //标准时间格式排序排序
                    var n1 = new Date((tr1.cells[indexs].innerHTML)).getTime();
                    var n2 = new Date((tr2.cells[indexs].innerHTML)).getTime();
                    return n1 - n2;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "strings") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //纯字符串排序
                    var n1 = (tr1.cells[indexs].innerHTML).charCodeAt();
                    var n2 = (tr2.cells[indexs].innerHTML).charCodeAt();
                    return n1 - n2;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "checkbox") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                console.log(arr)
                arr.sort(function (tr1, tr2) {       //选择框排序
                    var n1 = tr1.cells[indexs].children;
                    var n2 = tr2.cells[indexs].children;
                    if ($(n1).attr('checked')) {
                        n1.value = 1
                    } else {
                        n1.value = 0
                    }
                    if ($(n2).attr('checked')) {
                        n2.value = 1
                    } else {
                        n2.value = 0
                    }
                    return n1.value - n2.value

                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            } else if (types === "tt") {
                for (var i = 0; i < oTab.tBodies[0].rows.length; i++) {
                    arr[i] = oTab.tBodies[0].rows[i];
                }
                arr.sort(function (tr1, tr2) {        //时分秒排序
                    var n1 = timeToSec(tr1.cells[indexs].innerText);
                    var n2 = timeToSec(tr2.cells[indexs].innerText);
                    return n1 > n2;
                });
                for (var i = 0; i < arr.length; i++) {
                    oTab.tBodies[0].appendChild(arr[i]);
                }
            }
        }
    }

    function timeToSec(time) {     //时分秒字符串格式转换为毫秒
        if (time.indexOf("时") != -1 || time.indexOf("分") != -1 || time.indexOf("秒") != -1) {
            var time = time.replace(/天/, ":");
            var time = time.replace(/小时/, ":");
            var time = time.replace(/分/, ":");
            var time = time.replace(/秒/, ":");
            var day = time.split(':')[0]
            var hour = time.split(':')[1]
            var min = time.split(':')[2]
            var sec = time.split(':')[3]
            var s = Number(day * 86400) + Number(hour * 3600) + Number(min * 60) + Number(sec)
            return s * 1000
        } else if (time.length >= 12) {
            var targetNum = time.substring(10);
            return Number(targetNum, 10);
        } else {
            var time = time.replace(/-/, "");
            //console.log(time)
            return time;
        }
    }


    function chackboxVal(input) {    //checkbox状态转换为数值

        if (input.checked == false) {
            input = 1
        } else {
            input = 0
        }
        return input;
    }

    $(function () {
        $(".barcodeNum").each(function (index, val) {
            $(this).css("cursor", "pointer");
            $(this).click(function (v) {
                $("#formBarCodeNum").val(v.target.textContent);
                $("#gotoBarCode").submit();
            });
        });
    });
</script>
<script type="text/javascript">
    var query = new Vue({
        el: '#query',    //与div中的id名对应
        data: {
            message: new Date().toLocaleString(),  //输出查询时间
            floatmessage: '订单号'+'@ViewBag.orderNum',
            Quantity:@ViewBag.Quantity,
            NormalCount:@ViewBag.NormalCount,
        },
        computed:{
            FinishRate: function (){
                return (this.NormalCount/this.Quantity*100).toFixed(1)
            }
        }
    });

    Highcharts.chart('container2', {
        chart: {
            type: 'pie',
            options3d: {
                enabled: true,
                alpha: 30,
                beta: 0
            }
        },
        title: {
            text: '订单 @ViewBag.orderNum 基本情况'
        },
        tooltip: {
            pointFormat: '<b>{point.percentage:.1f}%</b>'//'{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                depth: 35,
                dataLabels: {
                    enabled: true,
                    formatter:function(){           // '{point.name}'
                        if(this.percentage >0 )
                        { return this.point.name;}
                        else if (this.percentage >=100 )
                        { return '已全部完成';}
                    }
                }
            }
        },
        series: [{
            type: 'pie',
            name: '',
            data: [
                ['已完成 @ViewBag.NormalCount 块',@ViewBag.NormalCount],
                ['未完成 @ViewBag.NeverFinish 块',@ViewBag.NeverFinish]
            ]
        }]
    });
</script>
@section scripts {
    <script>
        function submitForm(pagenumber) {
            pagenumber = parseInt(pagenumber, 10);
            $('#PageIndex').val(pagenumber - 1);
            $('#searchForm').submit();
        }

        $(function () {
            $('.selectpicker').selectpicker();
            $('#searchButton').click(function () {
                submitForm($('#pagebar .currentpagenumber').text());
            });

            $('#pagebar .pagenumber').click(function () {
                submitForm($(this).text());
            });
            $("#searchcButton").click(function (event) {
                event.preventDefault();
                if ($("#orderNum").val() != "" || $("#barcodenum").val() != "") {
                    $("#searchButton").click();
                }
            })
        });
    </script>
}