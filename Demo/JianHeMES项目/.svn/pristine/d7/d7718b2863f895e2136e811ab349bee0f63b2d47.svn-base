@{
    ViewBag.Title = "7S班组扣分详细表";
}
@* css放置处 *@
@section cssStyle {
    <link href="~/Content/vxe.css" rel="stylesheet" />
    <style>
        #app {
            padding: 20px 20px 0 20px;
            font-family: '微软雅黑';
        }

        .title {
            font-weight: 400;
            font-size: 24px;
        }

        .action-box {
            width: 100%;
            padding: 20px 0;
            display: flex;
            align-content: center;
        }

            .action-box .el-select, .action-box .picker-date {
                margin-right: 10px;
            }

        .el-image-viewer__close {
            color: #fff;
        }
        /*    表格*/
        .table-height {
            width: 100%;
            height: 70vh;
        }

        .row-pointsDeducted {
            color: red;
            font-size: 16px;
        }

        .img-upload {
            display: flex;
            flex-wrap: wrap;
            align-items: center;
            justify-content: center;
        }

        .row-pointsDeducted {
            color: red;
            font-size: 16px;
        }

        .el-upload--picture-card {
            width: 80px;
            height: 80px;
            line-height: 80px;
        }

        .el-upload-list--picture-card .el-upload-list__item {
            width: 80px;
            height: 80px;
        }
    </style>
}

<div id="app">
    <div class="title">
        7S班组扣分详细表
        @*<span v-if="query_type=='日'||query_type=='周'">详细</span><span v-if="query_type=='月'">汇总</span>*@
    </div>

    @*操作栏*@
    <div class="action-box">
        <el-select size="small" v-model="check_type" placeholder="请选择检查类型" @@change="onChangeType" style="width:150px;">
            <el-option label="日检" value="日检"></el-option>
            <el-option label="周检" value="周检"></el-option>
            <el-option label="巡检" value="巡检"></el-option>
        </el-select>
        <el-select size="small" v-model="select_department" placeholder="请选择部门" style="width:150px;" @@change="onChangeDepartment">
            <el-option v-for="item in department_options"
                       :key="item.value"
                       :label="item.label"
                       :value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="select_position" placeholder="请选择位置" style="width:150px;" @@change="onChangePosition">
            <el-option v-for="item in position_options"
                       :key="item.value"
                       :label="item.label"
                       :value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="select_district" placeholder="请选择区域号" style="width:150px;">
            <el-option v-for="item in district_options"
                       :key="item.value"
                       :label="item.label"
                       :value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="query_type" placeholder="请选择查询类型.." style="width:150px;">
            <template v-if="check_type!='周检'">
                <el-option label="按日查" value="日"></el-option>
                <el-option label="按月查" value="月"></el-option>
            </template>
            <template v-if="check_type=='周检'">
                <el-option label="按周查" value="周"></el-option>
                <el-option label="按月查" value="月"></el-option>
            </template>
        </el-select>
        <el-date-picker size="small" class="picker-date" v-if="query_type=='日'" v-model="select_date"
                        type="date"
                        placeholder="选择日期" style="width:150px;">
        </el-date-picker>
        <el-date-picker size="small" class="picker-date" v-if="query_type=='月'||query_type=='周'" v-model="select_month"
                        type="month"
                        placeholder="选择月份" style="width:150px;">
        </el-date-picker>
        <el-select size="small" v-if="query_type=='周'" v-model="select_week" placeholder="请选择周" style="width:150px;">
            <el-option label="第一周" value="1"></el-option>
            <el-option label="第二周" value="2"></el-option>
            <el-option label="第三周" value="3"></el-option>
            <el-option label="第四周" value="4"></el-option>
            <el-option label="第五周" value="5"></el-option>
            <el-option label="第六周" value="6"></el-option>
        </el-select>
        <el-button size="small" type="primary" v-on:click="onQueryData">查询</el-button>
    </div>

    @*表格*@
    <div class="table-height">
        <vxe-table border
                   ref="xTable"
                   size="mini"
                   height="auto"
                   align="center"
                   :data="tableData">
            <vxe-table-column type="seq" title="序号" width="50"></vxe-table-column>
            <vxe-table-column title="检查时间" field="Department" width="100"></vxe-table-column>
            <vxe-table-column title="部门" field="Date" width="100"></vxe-table-column>
            <vxe-table-column title="位置" field="Group" width="100"></vxe-table-column>
            <vxe-table-column title="区域号" field="District" width="60"></vxe-table-column>
            <vxe-table-column title="责任人" field="ResponsiblePerson" width="100"></vxe-table-column>
            <vxe-table-column title="7S扣分类型" field="PointsDeducted_Type" width="120"></vxe-table-column>
            <vxe-table-column title="扣分参考标准" field="PointsDeducted_Item" min-width="240">
                <template v-slot="{ row }">
                    <div v-for="(item,index) in row.PointsDeducted_Item" :key="index">{{index+1}}.{{item}}</div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="问题描述" field="ProblemDescription" width="100"></vxe-table-column>
            <vxe-table-column title="7S扣分" field="PointsDeducted" width="80">
                <template v-slot="{ row }">
                    <div v-if="row.PointsDeducted!=''" class="row-pointsDeducted">{{-row.PointsDeducted}}</div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="重复出现扣分" field="RepetitionPointsDeducted" width="80">
                <template v-slot="{ row }">
                    <div v-if="row.RepetitionPointsDeducted!=null" class="row-pointsDeducted">{{-row.RepetitionPointsDeducted}}</div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="限期未整改扣分" field="RectificationPoints" width="80">
                <template v-slot="{ row }">
                    <div v-if="row.RectificationPoints!=null" class="row-pointsDeducted">{{-row.RectificationPoints}}</div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="改善前" field="BeforeImprovement" width="240">
                <template v-slot="{ row }">
                    <div class="img-upload">
                        <el-image class="el-upload-list__item-thumbnail"
                                  v-for="(url,index) in row.BeforeImprovement"
                                  :key="index"
                                  fit="cover"
                                  :preview-src-list="row.BeforeImprovement"
                                  :src="url"
                                  style="width:70px;height:70px;margin:2px">
                        </el-image>
                    </div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="改善后" field="AfterImprovement" width="240">
                <template v-slot="{ row,rowIndex  }">
                    <div class="img-upload">
                        <div class="el-upload-list__item-thumbnail" v-for="(url,index) in row.AfterImprovement"
                             :key="index">
                            <el-tooltip class="item" effect="dark" content="单击可预览图片，右击可删除图片" placement="top-start">
                                <el-image style="width:70px;height:70px;margin:2px"
                                          fit="cover"
                                          :preview-src-list="row.AfterImprovement"
                                          :src="url"
                                          v-on:contextmenu.prevent="onDelete(url,row,rowIndex)">
                                </el-image>
                            </el-tooltip>
                        </div>
                        <el-button v-if="check_type!='日检'&&showUpload" size="mini" type="primary" v-on:click="addImg(row,rowIndex)">添加照片</el-button>
                    </div>
                </template>
            </vxe-table-column>
            <vxe-table-column title="限期整改时间" field="RectificationTime" width="160">
            </vxe-table-column>
            <vxe-table-column title="整改结果" field="Rectification_Confim" width="120">
                <template v-slot="{ row}">
                    <template v-if="row.Rectification_Confim==null&&showRectification">
                        <el-select size="mini" :disabled="isDisable(row)" v-model="select_rectification_confim" placeholder="请选择..." style="width:100px;margin-bottom:10px;">
                            <el-option label="通过" value="true"></el-option>
                            <el-option label="不通过" value="false"></el-option>
                        </el-select>
                        <el-button size="mini" :disabled="isDisable(row)" plain type="primary" v-on:click="onRectificationConfim(row)">确认</el-button>
                    </template>
                    <template v-if="row.Rectification_Confim!=null">
                        {{row.Rectification_Confim?'通过':'不通过'}}
                    </template>
                </template>
            </vxe-table-column>
            <vxe-table-column title="操作" width="100" field="action">
                <template v-slot="{ row}">
                    <el-button size="mini" plain type="danger" v-on:click="onRemoveRow(row)">删除</el-button>
                </template>
            </vxe-table-column>
        </vxe-table>
    </div>
    <!--上传照片-->
    <el-dialog v-bind:visible.sync="dialogVisible" width="500px">
        <el-upload action="/KPI/ImageUpload"
                   list-type="picture-card"
                   multiple
                   :file-list="fileList"
                   :auto-upload="false"
                   :on-change="selectFile"
                   :on-preview="handlePictureCardPreview"
                   :on-remove="handleRemove">
            <i class="el-icon-plus"></i>
        </el-upload>
        <span slot="footer" class="dialog-footer">
            <el-button size="small" v-on:click="onCancel">取 消</el-button>
            <el-button size="small" type="primary" v-on:click="uploadFile">确定上传</el-button>
        </span>
    </el-dialog>
    <el-dialog v-bind:visible.sync="showVisible">
        <img width="100%" :src="dialogImageUrl" alt="">
    </el-dialog>
</div>
@* 分部页放置处 *@
@section renderPage {
}
@* js放置处 *@
@section jsScript {
    <script src="https://cdn.jsdelivr.net/npm/xe-utils"></script>
    <script src="https://cdn.jsdelivr.net/npm/vxe-table"></script>
    <script>
        const app = {
            data: function () {
                return {
                    check_type: '',
                    query_type: '',   //查询类型（按天/按月）
                    select_department: '',
                    select_position: '',
                    select_district: '',
                    select_date: '',
                    select_month: '',
                    select_week: '',
                    param_date: '',  //传递的日期
                    department_options: [],
                    position_options: [],
                    district_options: [],
                    //上传图片
                    dialogImageUrl: '',
                    showVisible: false,
                    dialogVisible: false, //控制图片上传弹框
                    fileList: [],
                    files: [],           //存储选中的照片
                    filename: [],
                    uploadRow: '',      //选中图片所在行数据
                    uploadIndex: '',     //选中行
                    //整改结果选择
                    select_rectification_confim: '',
                    //表格
                    //tableColumn: [
                    //    { title: '序号', type: 'seq', width: 50 },
                    //    { title: '检查时间', field: 'Date', width: 100 },
                    //    { title: '部门', field: 'Department', width: 100 },
                    //    { title: '位置', field: 'Group', width: 100 },
                    //    { title: '区域号', field: 'District', width: 60 },
                    //    { title: '责任人', field: 'ResponsiblePerson', width: 100 },
                    //    { title: '7S扣分类型', field: 'PointsDeducted_Type', width: 120 },
                    //    {
                    //        title: '扣分参考标准', field: 'PointsDeducted_Item', minWidth: 240, slots: {
                    //            default: 'points_item'
                    //        }
                    //    },
                    //    { title: '问题描述', field: 'ProblemDescription', width: 100 },
                    //    {
                    //        title: '7S扣分', field: 'PointsDeducted', width: 80, slots: {
                    //            default: 'points_deducted'
                    //        }
                    //    }, {
                    //        title: '重复出现扣分', field: 'RepetitionPointsDeducted', width: 80, slots: {
                    //            default: 'points_repetition'
                    //        }
                    //    }, {
                    //        title: '限期未整改扣分', field: 'RectificationPoints', width: 80, slots: {
                    //            default: 'points_rectification'
                    //        }
                    //    },
                    //    {
                    //        title: '改善前', field: 'BeforeImprovement', width: 240, slots: {
                    //            default: 'before_img'
                    //        }
                    //    },
                    //    {
                    //        title: '改善后', field: 'AfterImprovement', width: 240, slots: {
                    //            default: 'after_img'
                    //        }
                    //    },
                    //    { title: '限期整改时间', field: 'RectificationTime', width: 120 },
                    //    { title: '整改结果', field: 'Rectification_Confim', width: 120 },
                    //    {
                    //        title: '操作', width: 120, slots: {
                    //            default: 'operation'
                    //        }
                    //    }
                    //],
                    tableData: [],
                    deleteDetail: false,
                    showUpload: false,
                    deleteUpload: false,
                    showRectification: false
                }
            },
            created: function () {
                this.onGetAddress();
                this.onGetDepartmentData();
                this.onGetPosition();
                this.onGetDistrictData();
            },
            mounted: function () {
                this.onPermissions();
            },
            watch: {
                check_type(val) {
                    if (val != '') {
                        this.onCreatTableColumn(val);
                    }
                },
                select_department(val) {
                    if (val != '') {
                        this.onGetPosition();
                    }
                },
                select_position(val) {
                    if (val != '') {
                        this.onGetDistrictData();
                    }
                },
                query_type(val) {
                    if (val == '日') {
                        this.select_month = ''
                    } if (val == '月') {
                        this.select_date = ''
                        this.select_week = ''
                    }
                }
            },
            //函数方法
            methods: {
                //获取地址传参
                onGetAddress() {
                    let lastUrl = document.referrer;
                    if (lastUrl.toLowerCase().indexOf("KPI_7S_Summarizing_Daily") == -1) {
                        this.select_department = getUrlParam('department')
                        this.select_position = getUrlParam('position')
                        this.select_district = getUrlParam('district')
                        this.param_date = getUrlParam('date')
                        this.check_type = getUrlParam('check_type')
                        this.query_type = getUrlParam('query_type')
                        this.select_week = getUrlParam('week')
                    };
                    if (this.check_type != '') {
                        if (this.query_type == '日') {
                            this.select_date = this.param_date
                        }
                        if (this.query_type == '月' || this.query_type == '周') {
                            this.select_month = this.param_date
                        }
                        this.onQueryData();
                    }
                },
                //获取初始化下拉数据
                onGetDepartmentData() {
                    axios.post('/KPI/GetDepartmentList').then(res => {
                        //console.log(res)
                        res.data.shift();
                        this.department_options = res.data;
                    })
                },
                onGetDistrictData() {
                    axios.post('/KPI/GetDistrictList', { department: this.select_department, position: this.select_position }).then(res => {
                        //console.log(res)
                        this.district_options = res.data;
                    })
                },
                onGetPosition() {
                    axios.post('/KPI/GetPositionList', { department: this.select_department }).then(res => {
                        //console.log(res)
                        //res.data.shift();
                        this.position_options = res.data;
                    })
                },
                //判断权限
                onPermissions() {
                    var roles = JSON.parse(localStorage.getItem("rigths"))
                    if (checkRoles(roles, '删除班组扣分数据')) {
                        this.deleteDetail = true
                    }
                    if (checkRoles(roles, '上传7S图片')) {
                        this.showUpload = true
                    }
                    if (checkRoles(roles, '删除7S图片')) {
                        this.deleteUpload = true
                    }
                    if (checkRoles(roles, '审核7S整改结果')) {
                        this.showRectification = true
                    }
                },
                //选择
                onChangeType() {
                    this.$refs.xTable.resetColumn();
                    this.query_type = '';
                },
                onChangeDepartment() {
                    this.select_position = '';
                    this.select_district = '';
                },
                onChangePosition() {
                    this.select_district = '';
                },
                //初始化表头
                onCreatTableColumn(val) {
                    if (val == '日检') {
                        this.$refs.xTable.hideColumn(this.$refs.xTable.getColumnByField('RectificationTime'));
                        this.$refs.xTable.hideColumn(this.$refs.xTable.getColumnByField('Rectification_Confim'));
                        this.$refs.xTable.hideColumn(this.$refs.xTable.getColumnByField('RepetitionPointsDeducted'));
                        this.$refs.xTable.hideColumn(this.$refs.xTable.getColumnByField('RectificationPoints'));
                    }
                    if (!this.deleteDetail) {
                        this.$refs.xTable.hideColumn(this.$refs.xTable.getColumnByField('action'));
                    }
                },
                //提示
                onTip() {
                    if (this.check_type == '') {
                        this.$message.warning('请选择检查类型!')
                        return false;
                    } else if (this.select_department == '') {
                        this.$message.warning('请选择部门！');
                        return false;
                    }
                    else if (this.query_type == '') {
                        this.$message.warning('请选择查询类型!')
                        return false;
                    } else if (this.select_date == '' && this.select_month == '' && this.select_week == '') {
                        this.$message.warning('请选择日期!')
                        return false;
                    } else if (this.check_type == '周检' && this.query_type == '周' && this.select_week == '') {
                        this.$message.warning('请选择第几周!')
                        return false;
                    }
                    else {
                        return true;
                    }
                },
                //查询数据
                onQueryData() {
                    if (this.onTip()) {
                        let date;

                        if (this.check_type != '周检') {
                            this.select_week = ''
                        }
                        if (this.query_type == '日') {
                            date = new Date(this.select_date)
                        }
                        if (this.query_type == '周' || this.query_type == '月') {
                            date = new Date(this.select_month)
                        }
                        this.$loading({
                            lock: true,
                            text: '查询ing...',
                            spinner: 'el-icon-loading',
                            background: 'rgba(0, 0, 0, 0.7)'
                        });
                        if (this.query_type == '日' || this.query_type == '周') {

                            let param = {
                                department: this.select_department,
                                position: this.select_position,
                                district: this.select_district,
                                check_Type: this.check_type,
                                date: date,
                                week: this.select_week
                            }

                            //console.log(param);
                            axios.post('/KPI/Detail_Query', param).then(res => {
                                //console.log(res)
                                if (res.data.length == 0) {
                                    this.tableData = res.data;
                                    this.$loading().close();
                                    this.$message.info('暂无记录！');
                                } else {
                                    this.tableData = res.data;
                                    this.onCreatTableColumn(this.check_type);
                                    this.$loading().close();
                                }
                            })
                        }
                        if (this.query_type == '月') {
                            let param = {
                                department: this.select_department,
                                position: this.select_position,
                                district: this.select_district,
                                check_Type: this.check_type,
                                date: date
                            }
                            //console.log(param)
                            axios.post('/KPI/Month_Query', param).then(res => {
                                //console.log(res)
                                if (res.data.length == 0) {
                                    this.tableData = res.data;
                                    this.$loading().close();
                                    this.$message.info('该筛选范围暂无数据记录！');
                                } else {
                                    this.tableData = res.data;
                                    this.onCreatTableColumn(this.check_type);
                                    this.$loading().close();
                                }
                            })
                        }
                    }
                },
                //添加图片
                addImg(row, rowIndex) {
                    //console.log(row)
                    //console.log(rowIndex)
                    this.dialogVisible = true;
                    this.files = fileList = [];
                    this.filename = [];
                    this.uploadRow = row;
                    this.uploadIndex = rowIndex;
                },
                //选取文件方法
                selectFile(file) {
                    this.files.push(file.raw);
                    this.filename.push(file.name);
                },
                //移除临时图片
                handleRemove(file) {
                    //console.log(file, fileList);
                    for (let i in this.files) {
                        if (this.files[i].uid == file.uid) {
                            this.files.splice(i, 1)
                        }
                    }
                    for (let i in this.filename) {
                        if (this.filename[i] == file.name) {
                            this.filename.splice(i, 1)
                        }
                    }
                },
                //查看临时图片
                handlePictureCardPreview(file) {
                    this.dialogImageUrl = file.url;
                    this.showVisible = true;
                },
                //取消上传
                onCancel() {
                    this.fileList = [];
                    this.dialogVisible = false;
                },
                //确认上传图片
                uploadFile() {
                    this.$loading({
                        lock: true,
                        text: '上传ing...',
                        spinner: 'el-icon-loading',
                        background: 'rgba(0, 0, 0, 0.7)'
                    });
                    let fd = new FormData();
                    fd.append('department', this.uploadRow.Department)
                    fd.append('position', this.uploadRow.Group)
                    fd.append('check_date', this.uploadRow.Date)
                    fd.append('check_Type', this.check_type)
                    fd.append('district', this.uploadRow.District)
                    fd.append('pointsDeducted_Type', this.uploadRow.PointsDeducted_Type)
                    fd.append('uploadType', '改善后')
                    this.filename.forEach(file => { fd.append("pictureFile", file); })
                    j = 0;
                    this.files.forEach(item => { fd.append("UploadFile_Ingredients" + j, item); j++; })
                    axios.post('/KPI/ImageUpload', fd).then(res => {
                        //console.log(res)
                        if (res.data == 'True') {
                            this.$message.success('图片上传成功！');
                            this.dialogVisible = false;
                            //this.onGetImg(param);
                            this.onQueryData();
                            this.files = this.fileList = this.filename = [];
                            this.$loading().close();
                        } else {
                            this.$message.error('图片上传失败');
                            this.dialogVisible = false;
                            this.$loading().close();
                        }
                    })
                },
                //删除图片
                onDelete(url, row, rowIndex) {
                    //console.log(url);
                    if (this.deleteUpload) {
                        this.$confirm('确认删除该图片？')
                            .then(_ => {
                                this.uploadIndex = rowIndex;
                                let param = {
                                    'path': url,
                                    'department': row.Department,
                                    'position': row.Position,
                                    'check_date': row.Date,
                                    'check_Type': this.check_type,
                                    'district': row.District,
                                    'pointsDeducted_Type': row.PointsDeducted_Type,
                                    'uploadType': '改善后'
                                }
                                this.$loading({
                                    lock: true,
                                    text: '删除ing...',
                                    spinner: 'el-icon-loading',
                                    background: 'rgba(0, 0, 0, 0.7)'
                                });
                                axios.post('/KPI/DeleteImg', param).then(res => {
                                    //console.log(res)
                                    if (res.data = "删除成功") {
                                        this.onQueryData();
                                        this.$loading().close();
                                    }
                                })
                            }).catch(_ => {
                                this.$loading().close();
                            }
                            );
                    } else {
                        this.$message.error('您暂无删除图片的权限！')
                    }
                },
                //判断图片是否上传
                isDisable(row) {
                    if (row.AfterImprovement.length > 0) {
                        return false;
                    } else {
                        return true;
                    }
                },
                //整改结果
                onRectificationConfim(row) {
                    //console.log(row);
                    let param = {
                        id: row.Id,
                        result: this.select_rectification_confim
                    }
                    axios.post('/KPI/Approve', param).then(res => {
                        //console.log(res.data);
                        if (res.data == '审核成功') {
                            this.onQueryData();
                            this.$message.success('审核成功！');
                        }
                    })
                },
                //删除整行数据
                onRemoveRow(row) {
                    this.$confirm('确认删除该条记录？')
                        .then(_ => {
                            this.$loading({
                                lock: true,
                                text: '删除ing...',
                                spinner: 'el-icon-loading',
                                background: 'rgba(0, 0, 0, 0.7)'
                            });
                            axios.post('/KPI/KPI_7S_Delete', { id: row.Id }).then(res => {
                                //console.log(res)
                                if (res.data = "删除成功!") {
                                    this.onQueryData();
                                    this.$loading().close();
                                    this.$message.success('删除成功！');
                                }
                            })
                        }).catch(_ => {
                            this.$loading().close();
                        }
                        );
                }
            }
        };
        // 解析地址栏参数
        function getUrlParam(name) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) return decodeURI(r[2]); return '';
        }
        //检测权限
        function checkRoles(list, roleName) {
            var flag = false
            if (list && roleName) {
                for (let item in list) {
                    if (list[item] == roleName) {
                        flag = true
                    }
                }
            }
            return flag
        }
    </script>
}