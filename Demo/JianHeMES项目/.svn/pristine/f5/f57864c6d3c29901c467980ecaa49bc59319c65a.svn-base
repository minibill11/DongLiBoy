
@{
    ViewBag.Title = "Batch_InputStaff";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Scripts/axios.min.js"></script>

<style>
    .el-upload__input{
        display:none !important;
    }
    .inputtext{
        margin-top:25px;
        display:inline-flex;
        justify-content:space-between;
        width:100%;
    }
    .inputtext textarea{
        height:28px;
    }
    .container{
        padding:0;
    }
    table{
        text-align:center;
    }
    .pone{
       align-self:flex-end;
       font-size:14px;
   }
    .bottomInfo{
       display:flex;
       justify-content:space-between;
   }
</style>
<h3>批量添加请假记录信息</h3>

<div class="container" id="app">
    <div class="inputtext">
        <textarea v-model="inputInfo" placeholder="表格粘贴处..."></textarea>
        <el-button v-on:click="goBack" type="primary" size="mini"><i class="el-icon-d-arrow-left"></i>返回</el-button>
    </div>
    <el-table v-bind:data="postInfo" style="width: 100%" max-height="690" size="small" border stripe>
        <el-table-column prop="JobNum" label="工号" width="62" align="center">
        </el-table-column>
        <el-table-column prop="Name" label="姓名" width="63" align="center">
        </el-table-column>
        <el-table-column prop="department" label="部门" width="88" align="center">
        </el-table-column>
        <el-table-column prop="DP_group" label="班组" width="90" align="center">
        </el-table-column>
        <el-table-column prop="position" label="岗位" width="100" align="center">
        </el-table-column>
        <el-table-column prop="agent" label="代理人" width="72" align="center">
        </el-table-column>
        <el-table-column prop="leaveType" label="请假类型" width="88" align="center">
        </el-table-column>
        <el-table-column prop="applydate" label="申请时间" width="105" align="center">
        </el-table-column>
        <el-table-column prop="leaveStartTime" label="开始时间" width="105" align="center">
        </el-table-column>

        <el-table-column prop="leaveEndTime" label="结束时间" width="105" align="center">
        </el-table-column>

        <el-table-column prop="leaveTimeNum" label="请假时长" width="53" align="center">
        </el-table-column>
        <el-table-column prop="leaveReason" label="请假事由" width="90" align="center">
            @*<template slot-scope="scope">
                <el-popover trigger="hover" placement="right">
                    <el-button type="primary" icon="el-icon-upload" size="small" v-on:click="postImgs">上传图片</el-button>
                    <div slot="reference" class="name-wrapper">
                        <el-tag size="medium">{{scope.row.leaveReason}}</el-tag>
                    </div>
                </el-popover>
            </template>*@
        </el-table-column>
        <el-table-column prop="remark" label="备注" width="90" align="center">
        </el-table-column>
        <el-table-column label="操作" width="57" align="center">
            <template slot-scope="scope">
                <el-button v-on:click.native.prevent="deleteRow(scope.$index, postInfo)"
                           type="text"
                           size="small">
                    移除
                </el-button>
            </template>
        </el-table-column>
    </el-table>
    <div class="bottomInfo" v-if="flag">
        <p class="pone">本次共提交<span style="color:red;font-size:18px;">{{count}}</span>条数据！<span v-if="flags">存在重复数据，请移除其中一项并点击上传！</span></p>
        <p>
            <el-button v-on:click="checkDatas" type="primary" size="mini">上传<i class="el-icon-upload el-icon--right"></i></el-button>
            <el-button v-on:click="delated" type="primary" size="mini">清空<i class="el-icon-delete el-icon--right"></i></el-button>
        </p>
    </div>
    <el-upload v-if="flag" class="upload-demos" ref="uploads"
               list-type="picture"
               limit="3"
               action="localhost:18863/Personnel_Leave/uploadLeaveFiles"
               v-bind:on-preview="handlePreview" v-bind:on-remove="handleRemove"
               v-bind:on-change="selectChanges"
               v-bind:auto-upload="false">
        <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
        @*<el-button style="margin-left: 10px;" size="small" type="success" v-on:click="submitUpload(scope.row,scope.$index)">上传到服务器</el-button>*@
        <div slot="tip" class="el-upload__tip">只能上传jpg/png/pdf文件，且不超过500kb.此处上传为此次添加的所有人员共用的证明文件，如需单独添加请转到显示页！</div>
    </el-upload>
</div>

<script>

    var vm = new Vue({
        el: "#app",
        data: {
            inputInfo: '',
            postInfo: [],    //渲染的数据
            postInfos: '',  //上传前的数据
            finalPost:'',  //最终上传的数据
            count: "",
            flag:false,
            flags: false,
            files:""
        },
        methods: {
            delated() {
                this.inputInfo = '';
                this.postInfo = '';
                this.postInfos = '';
                //this.flag = false;
            },
            deleteRow(index, rows) {
                $(rows).removeClass("color2");
                rows.splice(index, 1);
                this.count--;
            },
            handlePreview(file) {
                console.log(file);
            },
            handleRemove(file, fileList) {
                console.log(file, fileList);
            },

            postDatas() {
                if (this.postInfo.length != '') {
                    console.log(this.finalPost)
                    axios.post('/Personnel_Leave/Batch_InputStaff', { inputList: this.finalPost }).then(res => {
                        console.log(res.data)
                        if (res.data == true) {  //status code is inneeded!!
                            if(this.files.length>0){
                                let form = new FormData();
                            for (let i = 0; i < this.files.length; i++) {
                                form.append(`uploadfile${i}`, this.files[i].raw);
                            };
                                axios.post("/Personnel_Leave/BatchuploadLeaveFiles",form).then(res=> {
                                    this.$message({
                                        message: "上传成功!",
                                        type: 'success',
                                        center: true
                                    });
                            }).catch(err=> { })
                            }

                        this.inputInfo = '';
                        this.postInfo = '';
                        this.postInfos = '';
                        this.finalPost = '';
                        } else {
                            console.log("ssss")
                        this.$message.error({
                            message: res.data,
                            center: true
                        });
                    }
                    }).catch(res=>{
                        console.log("xxx")
                    this.$message.error({
                        message: res.data,
                    center:true
                });
                })
                } else {
                    this.$message.error({
                        message: '请输入数据！'
                    });
                }
            },
            checkDatas() {
                var row = $('table tbody tr');
                var rows2 = [];
                for (var i = 0; i < row.length; i++) {
                    rows2.push(row[i])
                };
                var aa = [];
                for (var i = 0; i < rows2.length; i++) {
                    var one = rows2[i].children[0].children[0];
                    var one2 = rows2[i].children[1].children[0];
                    var cc = 0;
                    //console.log(one.value);
                    for (var j = 0; j < rows2.length; j++) {
                        var two = rows2[j].children[0].children[0];
                        var two2 = rows2[j].children[1].children[0];
                        if (one.innerText == two.innerText && one2.innerText == two2.innerText) {
                            cc++;
                            aa.push(cc);
                        }
                    };
                    if (cc > 1) {
                        $(one).addClass("color2");
                        $(one2).addClass("color2");
                    } else {
                        $(one).removeClass("color2");
                        $(one2).removeClass("color2");
                    }
                };
                var max = Math.max.apply(null, aa);
                if (max > 1) {
                    console.log(aa);
                    this.flags = true;
                    return false;
                } else if (max <= 1) {
                    this.flags = false;
                    this.postDatas();
                }
            },
            postImgs() {
                this.$message({
                    message: '敬请期待!',
                    type: 'success'
                });
            },
            goBack() {
                history.back();
            },
            selectChanges(file, fileList) {
                if (fileList.length == 3) {
                    this.$message({
                        message: 'limit--three!',
                        type: 'success'
                    });
                    
                }
                this.files = fileList;
            }
        },
        watch: {
            postInfo(newVal, oldVal) {
                if (this.postInfo == "") return;   //先排除刚开始的空的情况
                 //当渲染的数据变少时可判断为--已被删除

                    var finalPost = [];
                    this.postInfo.forEach((item, index) => {
                        this.postInfo.forEach((itemtwo, indextwo) => {
                            if (item.JobNum == itemtwo.JobNum) {
                                finalPost.push(itemtwo);
                            }
                        })
                    });

                    this.finalPost = finalPost;
                    
            },

            inputInfo(val) {   //粘贴功能
                if (this.inputInfo == '') { this.flag = false } else { this.flag = true }
                var valOfPaste = val.split("\n");
                valOfPaste.pop();
                var initDatas = []
                valOfPaste.forEach((item, i) => {
                    var items = item.split("\t");
                    initDatas.push(items)
                })
                var datas = [];
                console.log(initDatas)
                for (let i = 0; i < initDatas.length; i++) {
                    var JobNum = initDatas[i][0];     //工号
                    var Name = initDatas[i][1];        //姓名
                    var Sex = initDatas[i][2]     //性别
                    var DateOfBirth = initDatas[i][3];     //出生日期
                    var Age = initDatas[i][4];             //年龄
                    var Education = initDatas[i][5];  //学历
                    var Department = initDatas[i][6];  //部门
                    var Position = initDatas[i][7];  //职位名称
                    var HireDate = initDatas[i][8];    //入司时间
                    var gongling = initDatas[i][9];    //公司工龄
                    var LastDate = initDatas[i][10];     //最后工作日期
                    var Departments = initDatas[i][11];  //一级部门
                    var Status = initDatas[i][12];  //员工状态
                    //var levelType = initDatas[i][13];      //级别名称
                    //var OnPostMonth = initDatas[i][14] == '' ? '0.00' : initDatas[i][14];    //在岗月数
                    //var fenbu = initDatas[i][15];      //工龄分布
                    var data = {
                        JobNum,
                        Name,
                            department: Sex,
                            DP_group: DateOfBirth,
                            position: Age,
                            agent: Education,
                        leaveType: Department,
                        applydate: Position,
                        leaveStartTime: HireDate,
                        leaveEndTime: gongling,
                        leaveTimeNum: LastDate,
                        leaveReason: Departments,
                        remark: Status
                    }
                    datas.push(data)
                }
                this.postInfo = datas;




                //后台处理性别数据
                var datass = [];
                for (let i = 0; i < initDatas.length; i++) {
                    var JobNum = initDatas[i][0];     //工号
                    var Name = initDatas[i][1];        //姓名
                    var Sex = initDatas[i][2] === '男' ? false : true;     //性别
                    var DateOfBirth = initDatas[i][3];     //出生日期
                    var Education = initDatas[i][4];  //学历
                    var DP_Group = initDatas[i][5];     //组名
                    var HireDate = initDatas[i][6];    //入司时间
                    var LastDate = initDatas[i][7];     //最后工作日期
                    var Department = initDatas[i][8];  //部门
                    var Status = initDatas[i][9];  //员工状态
                    var levelType = initDatas[i][10];      //级别名称
                    var OnPostMonth = initDatas[i][11];    //在岗月数
                    var data = { JobNum, Name, Sex, DateOfBirth, Education, DP_Group, HireDate, LastDate, Department, Status, levelType, OnPostMonth}
                    datass.push(data)
                    }
                this.postInfos = datass;
                this.count = this.postInfo.length;
            }
        }
    })
</script>


