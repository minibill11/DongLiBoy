@{
    ViewBag.Title = "条码信息查询";
}

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<style>
    [v-cloak] {
        display: none;
    }

    .body-content, .container {
        padding-left: 0px;
        padding-right: 0px;
    }

    .el-header {
        height: auto !important;
        padding: 0;
    }

    .el-table th {
        padding: 6px 0;
        background-color: #f4df42;
        color: #000;
    }

    .el-table td {
        padding: 2px 0;
    }

    .el-table th, .el-table td {
        font-size: 12px;
        text-align: center;
    }

        .el-table .cell, .el-table th div {
            padding: 0;
        }

    .el-divider--horizontal {
        margin: 0;
    }

    .el-input {
        width: 220px;
    }

    .green {
        color: #33CC33;
    }

    .green2 {
        color: #66CC00;
    }

    .red {
        color: #FF9999;
    }

    .blue {
        color: #3399FF;
    }

    .blue2 {
        color: #6699FF;
    }

    .el-table thead.is-group th:first-child {
        font-size: 13px;
        padding: 0px;
    }

    .statuinfo {
        position: absolute;
        margin: 0 5px;
    }

    .soltHeader {
        font-size: 17px;
    }

    .timeStyle {
        font-size: 11px;
    }

    .barcodeStyle {
        font-size: 13px;
        height: 16px;
        line-height: 16px;
    }
    /*.point{
        cursor:pointer;
    }*/
</style>
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            <h2>@ViewBag.Title</h2>
            <span>条码号：</span>
            <el-input placeholder="输入条码号"
                      v-model.trim="barcodeVal"
                      size="medium"
                      clearable>
            </el-input>
            <span>类型：</span>
            <el-select v-model="typeVal" placeholder="请选择查找方向" filterable size="medium">
                <el-option v-for="item in typeOptions"
                           :key="item.value"
                           :value="item.value">
                </el-option>
            </el-select>
            <el-button v-on:click="getdata" :loading="loading" type="primary" size="medium" :disabled="barcodeVal==''||typeVal==''">
                查找
            </el-button>
        </el-header>
        <el-main v-loading="loading">
            <el-row>
                <el-table :data="barcodesModuleList"
                          v-show="showModuleList"
                          border
                          stripe
                          :max-height="600">
                    <el-table-column>
                        <template slot-scope="scope" slot="header">
                            <div class="soltHeader">模组信息</div>
                            <div class="statuinfo">
                                <i :class="statuColor(1)"></i>正常完成&nbsp;
                                <i :class="statuColor(2)"></i>已完成,存在异常&nbsp;
                                <i :class="statuColor(4)"></i>正常进行中&nbsp;
                                <i :class="statuColor(5)"></i>进行中,存在异常&nbsp;
                                <i :class="statuColor(3)"></i>未开始
                            </div>
                        </template>
                        <el-table-column prop="barcode"
                                         label="条码号"
                                         width="130">
                        </el-table-column>
                        <el-table-column prop="ordernum"
                                         label="订单号"
                                         width="100">
                        </el-table-column>
                        <el-table-column prop="modulenum"
                                         label="模组号"
                                         width="99">
                        </el-table-column>
                        <el-table-column prop="creator"
                                         label="条码创建人"
                                         width="80">
                        </el-table-column>
                        <el-table-column prop="pqcStatu"
                                         label="PQC信息"
                                         width="120">
                            <template slot-scope="scope">
                                <el-popover placement="top"
                                            title="条码异常信息"
                                            trigger="hover"
                                            v-bind:disabled="scope.row.pqcAbnormal.length>0?false:true">
                                    <div v-for="(i,index) in scope.row.pqcAbnormal">
                                        {{index+1+'、'+i}}
                                    </div>
                                    <div slot="reference" class="point">
                                        <div :class="statuColor(scope.row.pqcStatu)">
                                            {{statuVal(scope.row.pqcStatu)}}
                                        </div>
                                        <el-divider v-if="scope.row.pqcCreator!=''"></el-divider>
                                        <div v-if="scope.row.pqcCreator!=''">操作者:{{scope.row.pqcCreator}}</div>
                                        <el-divider v-if="scope.row.pqcCreatdate!=''"></el-divider>
                                        <div class="timeStyle">{{scope.row.pqcCreatdate}}</div>
                                    </div>
                                </el-popover>
                            </template>
                        </el-table-column>
                        <el-table-column prop="fqcStatu"
                                         label="FQC信息"
                                         width="120">
                            <template slot-scope="scope">
                                <el-popover placement="top"
                                            title="条码异常信息"
                                            trigger="hover"
                                            v-bind:disabled="scope.row.fqcAbnormal.length>0?false:true">
                                    <div v-for="(i,index) in scope.row.fqcAbnormal">
                                        {{index+1+'、'+i}}
                                    </div>
                                    <div slot="reference" class="point">
                                        <div :class="statuColor(scope.row.fqcStatu)">
                                            {{statuVal(scope.row.fqcStatu)}}
                                        </div>
                                        <el-divider v-if="scope.row.fqcCreator!=''"></el-divider>
                                        <div v-if="scope.row.fqcCreator!=''">操作者:{{scope.row.fqcCreator}}</div>
                                        <el-divider v-if="scope.row.fqcCreatdate!=''"></el-divider>
                                        <div class="timeStyle">{{scope.row.fqcCreatdate}}</div>
                                    </div>
                                </el-popover>
                            </template>
                        </el-table-column>
                        <el-table-column prop="mosaicScreenStatu"
                                         label="拼屏信息"
                                         width="120">
                            <template slot-scope="scope">
                                <div :class="statuColor(scope.row.mosaicScreenStatu)">
                                    {{statuVal(scope.row.mosaicScreenStatu)}}
                                </div>
                                <el-divider v-if="scope.row.mosaicScreenCreator!=''"></el-divider>
                                <div v-if="scope.row.mosaicScreenCreator!=''">操作者:{{scope.row.mosaicScreenCreator}}</div>
                                <el-divider v-if="scope.row.mosaicScreenCreatdate!=''"></el-divider>
                                <div class="timeStyle">{{scope.row.mosaicScreenCreatdate}}</div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="burnInStatu"
                                         label="老化信息"
                                         width="120">
                            <template slot-scope="scope">
                                <el-popover placement="top"
                                            title="条码异常信息"
                                            trigger="hover"
                                            v-bind:disabled="scope.row.burnInAbnormal.length>0?false:true">
                                    <div v-for="(i,index) in scope.row.burnInAbnormal">
                                        {{index+1+'、'+i}}
                                    </div>
                                    <div slot="reference" class="point">
                                        <div :class="statuColor(scope.row.burnInStatu)">
                                            {{statuVal(scope.row.burnInStatu)}}
                                        </div>
                                        <el-divider v-if="scope.row.burnInCreator!=''"></el-divider>
                                        <div v-if="scope.row.burnInCreator!=''">操作者:{{scope.row.burnInCreator}}</div>
                                        <el-divider v-if="scope.row.burnInCreatdate!=''"></el-divider>
                                        <div class="timeStyle">{{scope.row.burnInCreatdate}}</div>
                                    </div>
                                </el-popover>
                            </template>
                        </el-table-column>
                        <el-table-column prop="calibrationRecordStatu"
                                         label="校正信息"
                                         width="120">
                            <template slot-scope="scope">
                                <el-popover placement="top"
                                            title="条码异常信息"
                                            trigger="hover"
                                            v-bind:disabled="scope.row.calibrationRecordAbnormal.length>0?false:true">
                                    <div v-for="(i,index) in scope.row.calibrationRecordAbnormal">
                                        {{index+1+'、'+i}}
                                    </div>
                                    <div slot="reference" class="point">
                                        <div :class="statuColor(scope.row.calibrationRecordStatu)">
                                            {{statuVal(scope.row.calibrationRecordStatu)}}
                                        </div>
                                        <el-divider v-if="scope.row.calibrationRecordCreator!=''"></el-divider>
                                        <div v-if="scope.row.calibrationRecordCreator!=''">操作者:{{scope.row.calibrationRecordCreator}}</div>
                                        <el-divider v-if="scope.row.calibrationRecordCreatdate!=''"></el-divider>
                                        <div class="timeStyle">{{scope.row.calibrationRecordCreatdate}}</div>
                                    </div>
                                </el-popover>
                            </template>
                        </el-table-column>
                        <el-table-column prop="appearanceStatu"
                                         label="电检信息"
                                         width="120">
                            <template slot-scope="scope">
                                <el-popover placement="top"
                                            title="条码异常信息"
                                            trigger="hover"
                                            v-bind:disabled="scope.row.appearanceAbnormal.length>0?false:true">
                                    <div v-for="(i,index) in scope.row.appearanceAbnormal">
                                        {{index+1+'、'+i}}
                                    </div>
                                    <div slot="reference" class="point">
                                        <div :class="statuColor(scope.row.appearanceStatu)">
                                            {{statuVal(scope.row.appearanceStatu)}}
                                        </div>
                                        <el-divider v-if="scope.row.appearanceCreator!=''"></el-divider>
                                        <div v-if="scope.row.appearanceCreator!=''">操作者:{{scope.row.appearanceCreator}}</div>
                                        <el-divider v-if="scope.row.appearanceCreatdate!=''"></el-divider>
                                        <div class="timeStyle">{{scope.row.appearanceCreatdate}}</div>
                                    </div>
                                </el-popover>
                            </template>
                        </el-table-column>
                    </el-table-column>
                </el-table>
            </el-row>
            <br />
            <el-row>
                <el-table :data="barcodesOutherList"
                          v-show="shiwOutherList"
                          border
                          stripe
                          :max-height="600">
                    <el-table-column>
                        <template slot-scope="scope" slot="header">
                            <div class="soltHeader">外箱信息</div>
                        </template>
                        <el-table-column prop="otherBarcode"
                                         label="条码号">
                        </el-table-column>

                        <el-table-column prop="ordernum"
                                         label="订单号">
                        </el-table-column>
                        <el-table-column prop="type"
                                         label="装箱类型">
                        </el-table-column>
                        <el-table-column prop="statu"
                                         label="当前状态">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtFreeze=='出库'?'blue el-icon-shopping-cart-1':scope.row.smtFreeze=='未入库'?'red el-icon-shopping-cart-2':'green el-icon-shopping-cart-full'">
                                    {{scope.row.smtFreeze=='出库'?"已出库":scope.row.smtFreeze=='未入库'?"未入库":"在库存"}}
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="name"
                                         label="记录人">
                        </el-table-column>
                        <el-table-column prop="barcodelist"
                                         label="条码列表">
                            <template slot-scope="scope">
                                <div style="max-height:150px;overflow:auto;">
                                    <div v-for="item in scope.row.barcodelist" class="barcodeStyle">
                                        {{item}}
                                    </div>
                                </div>
                            </template>
                        </el-table-column>
                    </el-table-column>
                </el-table>
            </el-row>
            <br />
            <el-row>
                <el-table :data="barcodesSulderList"
                          v-show="showSulderList"
                          border
                          stripe
                          :max-height="600">
                    <el-table-column>
                        <template slot-scope="scope" slot="header">
                            <div class="soltHeader">锡膏信息</div>
                        </template>
                        <el-table-column prop="solderpasterBacrcode"
                                         label="条码号"
                                         width="160">
                        </el-table-column>
                        <el-table-column prop="materialNumber"
                                         label="物料号"
                                         width="90">
                        </el-table-column>
                        <el-table-column prop="batch"
                                         label="批次"
                                         width="90">
                        </el-table-column>
                        <el-table-column prop="leaveFactoryTime"
                                         label="生产日期"
                                         class="timeStyle"
                                         width="130">
                        </el-table-column>
                        <el-table-column prop="supplier"
                                         label="供应商"
                                         width="60">
                        </el-table-column>
                        <el-table-column prop="effectiveDay"
                                         label="有效期(天)"
                                         width="70">
                        </el-table-column>
                        <el-table-column prop="smtFreeze"
                                         label="入SMT冰柜">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtFreeze==1?'green el-icon-tickets':scope.row.smtFreeze==3?'red el-icon-document-remove':''">
                                    {{scope.row.smtFreeze==1?"有记录":scope.row.smtFreeze==3?"无记录":""}}
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="smtReam"
                                         label="回温">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtReam==1?'green el-icon-tickets':scope.row.smtReam==3?'red el-icon-document-remove':''">
                                    {{scope.row.smtReam==1?"有记录":scope.row.smtReam==3?"无记录":""}}
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="smtStir"
                                         label="搅拌">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtStir==1?'green el-icon-tickets':scope.row.smtStir==3?'red el-icon-document-remove':''">
                                    {{scope.row.smtStir==1?"有记录":scope.row.smtStir==3?"无记录":""}}
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="smtEmpty"
                                         label="使用">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtEmpty==1?'green el-icon-tickets':scope.row.smtEmpty==3?'red el-icon-document-remove':''">
                                    {{scope.row.smtEmpty==1?"有记录":scope.row.smtEmpty==3?"无记录":""}}
                                </div>
                            </template>
                        </el-table-column>
                        <el-table-column prop="smtrecly"
                                         label="回收">
                            <template slot-scope="scope">
                                <div :class="scope.row.smtrecly==1?'green el-icon-tickets':scope.row.smtrecly==3?'red el-icon-document-remove':''">
                                    {{scope.row.smtrecly==1?"有记录":scope.row.smtrecly==3?"无记录":""}}
                                </div>
                            </template>
                        </el-table-column>
                    </el-table-column>
                </el-table>
            </el-row>
        </el-main>
    </el-container>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            loading: false,
            loadingnum: 0,
            barcodeVal: '',
            typeOptions: [
                { value: "模组" },
                { value: "外箱" },
                { value: "锡膏" },
            ],
            typeVal: "",
            barcodesModuleList: [],
            barcodesOutherList: [],
            barcodesSulderList: [],
            showModuleList: false,
            shiwOutherList: false,
            showSulderList: false,
        },
        mounted: function () {
            let stargetVal = location.search.slice(1).split("=");
            if (stargetVal.length == 2) {
                this.targetSearch(stargetVal[0], stargetVal[1]);
            };
        },
        methods: {
            //获取数据
            getdata: function () {
                this.loading = true;
                this.barcodesModuleList = [];
                this.barcodesOutherList = [];
                this.barcodesSulderList = [];
                this.showModuleList = false;
                this.shiwOutherList = false;
                this.showSulderList = false;
                let barcode = this.barcodeVal, type = this.typeVal;
                if (type == "模组") {
                    this.getModule(barcode);
                } else if (type == "外箱") {
                    this.getOuther(barcode);
                } else if (type == "锡膏") {
                    this.getSulder(barcode);
                } else {
                    this.loading = false;
                };
            },
            //获取模组信息
            getModule: function (v) {
                axios.post('/Query/DisplayBarcodesModule', {
                    barcode: v,
                }).then(res => {
                    //模组
                    if (res.data != "") {
                        this.barcodesModuleList.push(res.data.first);
                        //外箱
                        if (res.data.two != null) {
                            this.barcodesOutherList.push(res.data.two);
                            this.shiwOutherList = true;
                        };
                    };
                    this.showModuleList = true;
                    this.loading = false;
                }).catch(err => {
                    this.showModuleList = true;
                    this.loading = false;
                });
            },
            //获取外箱信息
            getOuther: function (v) {
                axios.post('/Query/DisplayBarcodesOuther', {
                    barcode: v,
                }).then(res => {
                    if (res.data != "") {
                        this.barcodesOutherList.push(res.data);
                    };
                    this.shiwOutherList = true;
                    this.loading = false;
                }).catch(err => {
                    this.shiwOutherList = true;
                    this.loading = false;
                });
            },
            //获取锡膏信息
            getSulder: function (v) {
                axios.post('/Query/DisplayBarcodesSulder', {
                    barcode: v,
                }).then(res => {
                    if (res.data != "") {
                        this.barcodesSulderList.push(res.data);
                    };
                    this.showSulderList = true;
                    this.loading = false;
                }).catch(err => {
                    this.showSulderList = true;
                    this.loading = false;
                });
            },
            //状态颜色
            statuColor: function (v) {
                switch (v) {
                    case 1:
                        return "green el-icon-success";
                        break;
                    case 2:
                        return "green2 el-icon-circle-check";
                        break;
                    case 3:
                        return "red el-icon-error";
                        break;
                    case 4:
                        return "blue el-icon-remove";
                        break;
                    case 5:
                        return "blue2 el-icon-remove-outline";
                        break;
                    default: return "";
                };
            },
            //状态值
            statuVal: function (v) {
                switch (v) {
                    case 1:
                        return "已完成";
                        break;
                    case 2:
                        return "已完成";
                        break;
                    case 3:
                        return "未开始";
                        break;
                    case 4:
                        return "进行中";
                        break;
                    case 5:
                        return "进行中";
                        break;
                    default: return "";
                };
            },
            //处理跳转
            targetSearch: function (i, v) {
                switch (i) {
                    case "1": this.typeVal = '模组'; break;
                    case "2": this.typeVal = '外箱'; break;
                    case "3": this.typeVal = '锡膏'; break;
                };
                this.barcodeVal = v;
                this.getdata();
            }
        }
    });
</script>