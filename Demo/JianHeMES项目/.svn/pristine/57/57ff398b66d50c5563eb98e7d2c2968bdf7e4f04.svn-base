@model JianHeMES.Models.Warehouse_SparePartsAndComponents_Out

@{
    ViewBag.Title = "录入备品、配件包装信息";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/printJS/JsBarcode.all.min.js"></script>

<style>
    .query {
        width: 300px;
        text-align: right;
        margin: 2px auto;
    }

    .TunnelLabel {
        margin: 0 auto;
        border: 1px solid #100f0f;
        width: 308px;
        height: 280px;
    }

    .tophei {
        height: 160px;
    }

        .tophei > div {
            height: 80px;
        }

        .tophei .tophei_1 {
            position: relative;
        }

        .tophei .tophei_2 {
            border-top: 1px solid #100f0f;
            border-bottom: 1px solid #100f0f;
        }

        .tophei .imgicon1 {
            margin: 0;
            padding-top: 33px;
            text-align: center;
        }

        .tophei .imgicon2 {
            margin: 0;
            padding-top: 25px;
            text-align: center;
        }

    .bottomhei {
        display: inline-flex;
        text-align: center;
        height: 60px;
        border-bottom: 1px solid #100f0f;
    }

        .bottomhei .separate {
            width: 76px;
            border-right: 1px solid #100f0f;
        }

        .bottomhei .separate1 {
            width: 75px;
        }

            .bottomhei .separate1 .two:nth-child(1) {
                border-bottom: 1px solid #100f0f;
                height: 41px;
                width: 75px;
                border-right: hidden;
                display: flex;
                justify-content: center;
                align-items: center;
            }

            .bottomhei .separate1 .two:nth-child(2) {
                height: 20px;
                width: 76px;
                border-right: hidden;
            }

        .bottomhei .separate .one:nth-child(1) {
            width: 76px;
            border-bottom: 1px solid #100f0f;
        }

        .bottomhei .separate .one:nth-child(2) {
            width: 76px
        }

    .bottomhei1 {
        display: inline-flex;
        text-align: center;
        height: 59px;
    }

        .bottomhei .mcFrame_top_3:nth-child(1), .bottomhei1 .mcFrame_top_3:nth-child(1) {
            border-right: 1px solid #100f0f;
            width: 78px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .bottomhei .mcFrame_top_3:nth-child(2), .bottomhei1 .mcFrame_top_3:nth-child(2) {
            border-right: 1px solid #100f0f;
            width: 78px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .bottomhei .mcFrame_top_3:nth-child(3), .bottomhei1 .mcFrame_top_3:nth-child(3) {
            border-right: 1px solid #100f0f;
            width: 76px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .bottomhei .mcFrame_top_3:nth-child(4), .bottomhei1 .mcFrame_top_3:nth-child(4) {
            width: 75px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

    h2 {
        margin: 0;
        padding-top: 35px;
        text-align: center;
    }

    .masterBarDiv {
        width: 100%;
        position: absolute;
        top: -3px;
    }

    .textCenter {
        text-align: center;
    }

    #imgcode {
        width: 240px;
    }

    .tophei_2 {
        position: relative;
    }

    .imgicon {
        position: absolute;
        width: 110px;
        top: 5px;
        left: 5px;
    }

    .divframe {
        width: 300px;
        margin: 1px auto;
        text-align: center;
        border: 1px solid #ccc;
        min-height: 260px;
    }

    .divframe1 {
        width: 300px;
        text-align: center;
        margin: 1px auto;
        margin-bottom: 5px;
    }

    .el-table__empty-block {
        min-height: 0;
    }

    @@media screen and (max-width:820px) {
        .affirm {
            margin-left: 250px;
        }

        .link {
            display: inline-block;
        }

        .tips {
            margin-left: 50px;
        }
    }

    @@media screen and (min-width:820px) {
        .affirm {
            margin-left: 405px;
        }

        .affirm2 {
            margin-left: 280px;
        }

        .affirm1 {
            margin-left: 350px;
        }

        .el-table th {
            font-size: 13px;
            padding: 5px 0;
            color: #000;
            text-align: center;
        }

        .el-table td {
            font-size: 13px;
            padding: 2px 0;
            text-align: center;
        }

        .el-table .cell, .el-table--border td:first-child .cell {
            padding: 0;
        }

        .el-table .warning-row {
            background: #fcd2d2;
        }

        .el-table .success-row {
            background: #f0f9eb;
        }

        .tips {
            margin-left: 240px;
        }
    }
</style>
<div id="app">
    <div class="text-center">
        <h3>@ViewBag.Title</h3>
        <div class="link">
            <a href="/Packagings/SPC_QueryByOrderNumber"><el-button size="small" class="cret" type="primary" plain>首页</el-button></a>
            <a href="/Packagings/SPC_Display"><el-button size="small" type="primary" plain style="margin:2px">查询基本信息</el-button></a>
            <a href="/Packagings/SPC_Addbasic_information"><el-button size="small" type="primary" plain style="margin:2px">物料基本信息录入</el-button></a>
            <a href="/Packagings/SPC_MaterialLablePrint"><el-button size="small" type="primary" plain style="margin:2px">打印物料标签</el-button></a>
            <a href="/Packagings/SPC_StockConfirm"><el-button size="small" type="primary" plain style="margin:2px">备料确认</el-button></a>
            <a href="/Packagings/SPC_Packaging_Modify"><el-button size="small" type="primary" plain style="margin:2px">修改包装信息</el-button></a>
        </div>
    </div>
    <el-main>
        <el-col :md="12">
            <div class="query">
                订单号：
                <el-select v-model="orderNum" placeholder="请选择订单号" size="medium" allow-create filterable clearable v-bind:disabled="materialInfo.length>0">
                    <el-option v-for="item in options"
                               :key="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="query">
                屏序：<el-input v-model.trim="screenNum" placeholder="请输入屏序" style="width:191px" size="medium" clearable v-bind:disabled="materialInfo.length>0"></el-input>
            </div>
            <div class="query">
                物品类型：
                <el-select v-model="materialType" placeholder="请选择类型" size="medium" allow-create filterable clearable v-bind:disabled="materialInfo.length>0">
                    <el-option v-for="item in materialTypeOptions"
                               :key="item.value"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="query">
                毛重量：<el-input v-model.trim="G_Weight" placeholder="请输入毛重量" style="width:191px" size="medium" clearable></el-input>
            </div>
            <span class="tips" style="color:red" v-show="VisiG_Weight">毛重量值只能输入整数或小数</span>
            <div class="query">
                净重：<el-input v-model.trim="N_Weight" placeholder="请输入净重量" style="width:191px" size="medium" clearable></el-input>
            </div>
            <span class="tips" style="color:red" v-if="VisiN_Weight">净重量值只能输入整数或小数</span>
            <div class="query">
                <span>选打印机：</span>
                <el-select v-model="printProt" clearable placeholder="选择打印机" size="medium">
                    <el-option v-for="item in printOptions"
                               :key="item.value"
                               :label="item.label"
                               :value="item.value">
                    </el-option>
                </el-select>
            </div>
            <div class="query">
                物料号：
                <el-input v-model.trim="materialNumber" placeholder="请输入物料号" style="width:191px" size="medium" clearable></el-input>
            </div>
            <div class="query">
                包装数量：
                <el-select v-model="quantity" clearable placeholder="请选择数量" size="medium">
                    <el-option v-for="item in quantityOptions"
                               :key="item"
                               :value="item">
                    </el-option>
                </el-select>
            </div>
            <div class="query">
                批次：<el-input v-model.trim="Batch" placeholder="请输入批次" style="width:191px" size="medium" v-bind:disabled="materialInfo.length>0"></el-input>
            </div>
            <div>
                <el-switch class="affirm2"
                           v-model="imgShow"
                           width="35"
                           active-text="使用Logo">
                </el-switch>
                <el-button size="mini" type="primary" v-on:click="addMaterial">添加</el-button>
            </div>
            <div class="divframe1">
                <el-table v-bind:data="stockData"
                          height="60"
                          border>
                    <el-table-column prop="orderNum"
                                     label="订单号"
                                     width="100">
                    </el-table-column>
                    <el-table-column prop="stocked"
                                     label="已备料"
                                     width="100">
                    </el-table-column>
                    <el-table-column prop="complete"
                                     label="完成率"
                                     width="99">
                    </el-table-column>
                </el-table>
            </div>
            <div class="divframe">
                <el-table v-bind:data="materialInfo"
                          height="240"
                          border>
                    <el-table-column prop="MaterialNumber"
                                     label="物料号"
                                     width="100">
                    </el-table-column>
                    <el-table-column prop="Quantity"
                                     label="数量"
                                     width="60">
                    </el-table-column>
                    <el-table-column prop="ScreenNum"
                                     label="屏序">
                    </el-table-column>
                    <el-table-column prop="operate"
                                     label=""
                                     width="40">
                        <template slot-scope="scope">
                            <el-button v-on:click.native.prevent="deleteRow(scope.$index,scope.row ,materialInfo)"
                                       type="text"
                                       size="mini"
                                       style="margin:0;padding:0;width:100%;">
                                <i class="el-icon-error"></i>
                            </el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <span v-if="materialInfo.length!=0">条码数量：{{materialInfo.length}}</span>
            </div>
        </el-col>
        <el-col :md="12">
            <div class="TunnelLabel">
                <div class="tophei">
                    <div class="tophei_1">
                        <img v-show="imgShow" class="imgicon" src="~/Images/LOGO.jpg" />
                        <h1 v-show="imgShow" class="imgicon1">{{orderNum}}</h1>
                        <h1 v-show="!imgShow" class="imgicon2">{{orderNum}}</h1>
                    </div>
                    <div class="tophei_2">
                        <div class="masterBarDiv textCenter">
                            <svg id="imgcode"></svg>
                        </div>
                    </div>
                </div>
                <div class="bottomhei ">
                    <div class="mcFrame_top_3"><span>物料描述(DESC)</span></div>
                    <div class="mcFrame_top_3"><span>{{materialType}}</span></div>
                    <div class="separate">
                        <div class="one"><span>件号/数<br />(SN/TN)</span></div>
                        <div class="one"><span>批 次</span></div>
                    </div>
                    <div class="separate1">
                        <div class="two"><span>{{snt}}</span></div>
                        <div class="two"><span>{{Batch}}</span></div>
                    </div>
                </div>

                <div class="bottomhei1 ">
                    <div class="mcFrame_top_3"><span>毛重量(G.W.)Kg</span></div>
                    <div class="mcFrame_top_3"><span>{{G_Weight}}</span></div>
                    <div class="mcFrame_top_3"><span>净重(N.W.)Kg</span></div>
                    <div class="mcFrame_top_3"><span>{{N_Weight}}</span></div>
                </div>
            </div>
            <el-row style="margin-top:5px">
                <el-button class="affirm" size="mini" type="primary" v-show="materialInfo.length>0" v-on:click="confirm">保存</el-button>
                @*<el-button class="affirm1" size="mini" v-show="visi" type="primary" v-on:click="printLabel">打印标签</el-button>*@
            </el-row>
            <br />
            <div class="query" style="text-align:center;min-height:0;max-height:200px;margin-top:5px;width:300px">
                <el-button v-on:click="lookImage" size="mini" plain type="primary" style="margin-left:40px">查看勾选条码</el-button>
                <el-button v-on:click="printMaterialBarcode" size="mini" plain type="primary">打印选中的物料条码</el-button><br />
                <el-checkbox @@change="CheckAll" size="mini" border style="padding:1px 3px;height:22px;margin:1px">全选</el-checkbox>
                <span style="color:#409EFF">此订单已存在条码：</span>
                <div style="max-height:150px;overflow:auto">
                    <template v-for="item in OuterBarcodeList">
                        <el-checkbox v-model="item.state" size="mini" border style="padding:1px 3px;height:22px;margin:1px">{{item.value}}</el-checkbox>
                    </template>
                </div>
            </div>
        </el-col>
    </el-main>
    <div>
        <div id="img"></div>
    </div>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            orderNum: '',         //订单号
            options: [],
            materialNumber: '',    //物料编号
            materialNumOptions: [],
            outMaterialCode: '',  //外箱条码
            quantity: '',        //数量
            quantityOptions: [],
            screenNum: '',        //物料名
            imgShow: true,
            materialInfo: [],
            printOptions: printIpAddress,
            printProt: '',
            snt: '',            //SNTN
            arr: [],
            visi: false,
            G_Weight: '',   //毛重量
            N_Weight: '',   //净重
            VisiG_Weight: false,
            VisiN_Weight: false,
            Batch: '',  //批次
            materialTypeOptions: [{ label: '选项一', value: '备品' }, { label: '选项一', value: '配件' }, { label: '选项一', value: '备品、配件' }],
            materialType: '',//类型
            stockData: [],
            OuterBarcodeList: [],
            loading: false,
            imgNumber: 0,  //用于空值加载
        },
        //获取订单号
        mounted() {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.options = res.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
            let printIP = localStorage.getItem('printIP');
            if (printIP != null) {
                this.printPort = printIP;
            };
        },
        methods: {
            //添加物料信息
            addMaterial() {
                for (let item in this.materialInfo) {
                    if (this.materialInfo[item].MaterialNumber == this.materialNumber && this.materialInfo[item].Quantity == this.quantity) {
                        this.$message({
                            message: '已有重复物料号！',
                            type: 'warning'
                        });
                        return;
                    };
                };
                if (this.orderNum != '' && this.materialNumber != '' && this.quantity != '' && this.screenNum != '' && this.snt != '' && this.G_Weight != '' && this.N_Weight != '' && this.Batch != '') {
                    let arr1 = {
                        OrderNum: this.orderNum, SPC_OuterBoxBarcode: this.outMaterialCode, MaterialNumber: this.materialNumber, Quantity: this.quantity, ScreenNum: this.screenNum,
                        SNTN: this.snt, g_Weight: this.G_Weight, n_Weight: this.N_Weight, SPC_OuterBox_type: this.materialType, IsLogo: this.imgShow, batch: this.Batch
                    }
                    this.materialInfo.push(arr1)
                    this.arr.push(arr1)
                    console.log(this.materialInfo)
                    console.log(this.arr)
                } else {
                    this.$message({
                        message: '请填写完整在添加！',
                        type: 'warning'
                    });
                }
                console.log(this.materialInfo)
            },
            //获取条码信息
            getOutBoxNum() {
                axios.post("/Packagings/createOutBoxNum", { orderNumber: this.orderNum, screenNum: this.screenNum }).then(res => {
                    if (res.data != null && res.data != "创建外箱号出错!") {
                        this.outMaterialCode = res.data.OuterBoxBarCodeNum;
                        let str = res.data.OuterBoxBarCodeNum;//截取后2位
                        let str2 = str.substr(str.length - 2)
                        if (str2[0] == 0) {
                            this.snt = str2[1]
                        } else {
                            this.snt = str2
                        }
                    }
                    else {
                        this.$message({
                            message: '创建外箱号出错！',
                            type: 'warning'
                        });
                    }
                })
            },
            //使用后端返回的条码号生成条形码
            setmasterBarDiv() {
                JsBarcode("#imgcode", this.outMaterialCode, {
                    height: 60,                    //条形码的高度
                    format: "CODE128",            //选择要使用的条形码类型
                    font: "monospace",           //设置文本字体
                    textAlign: "center",        //设置文本的水平对齐方式
                    textMargin: 0,             //设置条形码和文本之间的间距
                    fontSize: 26,             //设置文本的大小
                    lineColor: "#000",       //条形码颜色
                    margin: 0,              //设置条形码周围的空白边距
                    marginTop: 0
                });
            },
            //保存
            confirm() {
                this.visi = true;
                axios.post("/Packagings/SPC_Packaging", {
                    spc_list: this.arr
                }).then(res => {
                    console.log(res.data)
                    if (res.data == "保存成功！") {
                        this.$message({
                            message: "数据保存成功",
                            type: 'success'
                        });
                    } else {
                        this.$message({
                            message: "数据保存失败！",
                            type: 'warning'
                        });
                    }
                })
            },
            //查看标签图片方法
            lookImage: function () {
                let arr = this.OuterBarcodeList, checkList = [];  //勾选的数组
                if (arr.length > 0) {
                    for (let i in arr) {
                        if (arr[i].state == true) {
                            checkList.push(arr[i].value);

                        };
                    };
                    if (checkList.length > 0) {
                        $("#img>img").remove();
                        this.loading = true;
                        this.imgNumber = 0;
                        for (let i in checkList) {
                            this.getPicture(checkList[i], checkList.length);
                        };
                    } else {
                        this.$message({
                            showClose: true,
                            message: '没有勾选查询清单！',
                            type: 'error'
                        });
                    };
                } else {
                    this.$message({
                        showClose: true,
                        message: '没有可查询的清单！',
                        type: 'error'
                    });
                }
            },
            //输出查询出的图片
            getPicture: function (outerBarcodeNum, number) {
                axios.post('/Packagings/Outspc_OutsideBoxLabelToImg', {
                    orderNumber: this.orderNum,
                    spc_OuterBoxBarcode: outerBarcodeNum
                }, {
                        responseType: "arraybuffer",
                    }).then(function (response) {
                        return 'data:image/png;base64,' + btoa(
                            new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')
                        );
                    }).then(function (data) {
                        let cc = new Image();
                        cc.src = data;
                        document.getElementById("img").appendChild(cc);
                        app.imgNumber++;
                        if (app.imgNumber == number) {
                            app.loading = false;
                        };
                    }).catch(err => {
                        app.imgNumber++;
                        if (app.imgNumber == number) {
                            app.loading = false;
                        };
                        console.warn("显示失败");
                    });
            },
            //打印勾选中的物料条码
            printMaterialBarcode() {
                let arr = this.OuterBarcodeList, postList = [];
                if (arr.length > 0) {
                    for (let i in arr) {
                        if (arr[i].state == true) {
                            postList.push(arr[i].value);
                        };
                    };
                    console.log(postList)
                    if (postList.length > 0) {
                        this.loading = true;
                        this.imgNumber = 0;
                        for (let i in postList) {
                            axios.post('/Packagings/Outspc_OutsideBoxLabelAgain', {
                                spc_OuterBoxBarcode: postList[i],  //物料号
                                orderNumber: this.orderNum,       //订单号
                                ip: this.printProt,            //ip地址
                                port: 9101,                   //端口
                            }
                                //, {
                                //        responseType: "arraybuffer",
                                //    }).then(function (response) {
                                //        return 'data:image/png;base64,' + btoa(
                                //            new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')
                                //        );
                                //    }).then(function (data) {
                                //        let aa = new Image();
                                //        aa.src = data;
                                //        document.getElementById("img").appendChild(aa);
                                //        app.imgNumber++;
                                //        if (app.imgNumber == postList.length) {
                                //            app.loading = false;
                                //        };
                                //    }).catch(err => {
                                //        app.imgNumber++;
                                //        if (app.imgNumber == postList.length) {
                                //            app.loading = false;
                                //        };
                                //        console.warn("显示失败");
                                //    });

                            ).then(res => {
                                if (res.data == '打印成功！') {
                                    this.$message({
                                        showClose: true,
                                        message: res.data,
                                        type: 'success'
                                    });
                                } else {
                                    this.$message({
                                        showClose: true,
                                        message: res.data,
                                        type: 'error'
                                    });
                                };
                                this.imgNumber++;
                                if (this.imgNumber == postList.length) {
                                    this.loading = false;
                                };
                            }).catch(err => {
                                this.$message({
                                    showClose: true,
                                    message: '打印出错！',
                                    type: 'error'
                                });
                                this.imgNumber++;
                                if (this.imgNumber == postList.length) {
                                    this.loading = false;
                                };
                            });
                        };
                    } else {
                        this.$message({
                            showClose: true,
                            message: '没有勾选需要打印的外箱号！',
                            type: 'error'
                        });
                    };
                } else {
                    this.$message({
                        showClose: true,
                        message: '外箱号清单为空！',
                        type: 'error'
                    });
                };
            },          
            //删除小表中的行
            deleteRow: function (index, row, data) {
                data.splice(index, 1);
                if (this.arr != []) {
                    this.arr.forEach((item, index) => {
                        if (index == index && item.Quantity == row.Quantity) {
                            this.arr.splice(index, 1)
                        }
                    })
                }
                console.log(this.arr)
                console.log(this.materialInfo)
            },
            //全选按钮
            CheckAll: function (v) {
                let checkList = this.OuterBarcodeList;
                for (let i in checkList) {
                    checkList[i].state = v;
                };
            },
        },
        watch: {
            orderNum() {
                if (this.orderNum != '' && this.screenNum != '') {
                    this.getOutBoxNum();
                }
                if (this.orderNum != '') {
                    axios.post("/Packagings/SPC_stock", {
                        orderNumber: this.orderNum
                    }).then(res => {
                        console.log(res.data)
                        this.stockData = res.data
                    })
                } else {
                    this.stockData = [];
                }
                //获取外箱列表
                if (this.orderNum != '') {
                    axios.post("/Packagings/Output_CartonNumber", {
                        orderNum: this.orderNum
                    }).then(res => {                        
                        if (res.data.length>0) {
                            let arr = res.data;
                            list = this.OuterBarcodeList
                            for (let item in arr) {
                                list.push({
                                    value: arr[item],
                                    state: false
                                })
                            }
                        } else {
                            this.$message({
                                showClose: true,
                                message: '此订单号还没有可打印的外箱号！',
                                type: 'error'
                            });
                        }
                    })
                }
            },
            materialNumber() {
                if (this.materialNumber != '' && this.materialNumber.length == 10) {
                    this.quantityOptions = [];
                    axios.post("/Packagings/GetMaterialNumberByQuantity", {
                        ordernumber: this.orderNum,
                        materialNumber: this.materialNumber,
                    }).then(res => {
                        console.log(res.data)
                        if (res.data == []) {
                            this.$message({
                                showClose: true,
                                message: '找不到物料号对应的数量',
                                type: 'warning'
                            });
                        } else if (res.data.length > 0) {
                            let list = [];
                            if (res.data.length == 1) {
                                this.quantity = res.data[0]
                            } else {
                                for (let item in res.data) {
                                    list.push(res.data[item])
                                }
                                this.quantityOptions = list;
                            }
                        } else if (res.data.repat == false) {
                            this.$message({
                                showClose: true,
                                message: res.data.content,
                                type: 'warning'
                            });
                        }
                    })
                }
            },
            screenNum() {
                if (this.orderNum != '' && this.screenNum != '') {
                    this.getOutBoxNum();
                } else {
                    $("#imgcode").empty()
                }
            },
            outMaterialCode() {
                if (this.outMaterialCode != "") {
                    app.setmasterBarDiv(this.outMaterialCode);
                }
            },
            N_Weight() {
                if (this.N_Weight != '') {
                    if (!this.N_Weight.match(/^[0-9]+\.{0,1}[0-9]{0,4}$/)) {
                        this.VisiN_Weight = true;
                    } else { this.VisiN_Weight = false };
                } else {
                    this.VisiN_Weight = false
                }
            },
            G_Weight() {
                if (this.G_Weight != '') {
                    if (!this.G_Weight.match(/^[0-9]+\.{0,1}[0-9]{0,4}$/)) {
                        this.VisiG_Weight = true
                    } else {
                        this.VisiG_Weight = false
                    }
                } else {
                    this.VisiG_Weight = false
                }
            }
        }
    })
</script>