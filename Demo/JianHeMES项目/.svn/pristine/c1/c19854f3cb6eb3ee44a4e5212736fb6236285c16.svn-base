
<script type="text/template" id="Version_Management_Component">
    <el-row>
        <el-row class="table-top">
            <div class="table-top-left">
                <el-row class="header-input">
                    版本号：
                    <el-select v-model="versionNum"
                               placeholder="选择版本"
                               size="small"
                               filterable
                               clearable>
                        <el-option v-for="item in versionlist"
                                   :key="item.value"
                                   :label="item.value"
                                   :value="item.value">
                        </el-option>
                    </el-select>
                    日期范围：<el-date-picker v-model="dateRange"
                                         type="daterange"
                                         size="small"
                                         range-separator="至"
                                         start-placeholder="开始日期"
                                         end-placeholder="结束日期"></el-date-picker>
                    &nbsp;<el-button type="primary" size="small" @@click="SelectVersion">查询</el-button>
                </el-row>
            </div>
            <div class="table-top-right">
                <el-button type="primary" @@click="showChange" size="small" plain>版本录入</el-button>
            </div>
        </el-row>
        <el-row class="table-mid">
            <el-table :data="tableList"
                      row-class-name="zero-padding"
                      max-height="600"
                      size="small"
                      stripe
                      border>
                <el-table-column type="index" label="序号" min-width="60"></el-table-column>
                <el-table-column prop="MESVersion" label="版本号" min-width="200"></el-table-column>
                <el-table-column prop="UpdateMesArray" label="更新内容" class-name="mes-array" min-width="300">
                    <template slot-scope="scope">
                        <div v-for="i in scope.row.UpdateMesArray" class="mes-item">
                            <b>{{i.Section}}</b>
                            <div v-html="i.UpdateMes.replace(/\n/g,'<br/>')"></div>
                        </div>
                    </template>
                </el-table-column>
                <el-table-column prop="UpdateTime" label="更新日期" min-width="200"></el-table-column>
                <el-table-column label="操作" min-width="150">
                    <template slot-scope="scope">
                        <el-button v-if="scope.row.CanChange" @@click="GetNewVersion(scope.row)" type="danger" size="small" plain>变为新版</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </el-row>
    </el-row>
</script>
<script>
    Vue.component('version-management-component', {
        template: document.getElementById("Version_Management_Component"),
        props: ['value'],
        data: function () {
            return {
                dateRange: null,
                versionNum: '',
                tableList: [],
                versionlist: [],
            }
        },
        mounted: function () {
            this.GetVersion();
        },
        methods: {
            GetVersion() {
                axios.post('/VersionManagement/GetVersion').then(res => {
                    this.versionlist = res.data;
                });
            },
            SelectVersion() {
                let st = null, et = null;
                if (this.dateRange != null) {
                    st = this.dateRange[0];
                    et = this.dateRange[1];
                };
                axios.post('/VersionManagement/SelectVersion', { version: this.versionNum, startTime: st, endTime: et }).then(res => {
                    this.tableList = res.data;
                });
            },
            GetNewVersion(row) {
                this.$prompt(`请输入新版名称`, '新增版本', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                }).then(({ value }) => {
                    axios.post('/VersionManagement/GetNewVersion', { newVersion: value }).then(res => {
                        if (res.data.pass === true) {
                            row.MESVersion = value;
                            row.CanChange = false;
                            this.$message.success(res.data.mes);
                        } else {
                            this.$message.error("更改版本失败");
                        };
                    }).catch(err => {
                    });
                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '取消修改'
                    });
                });
            },
            showChange() {
                vm.mainLoading = true;
                setTimeout(() => {
                    this.tableList = [];
                    this.versionNum = '';
                    this.dateRange = null;
                    this.$emit("input", false);
                    vm.mainLoading = false;
                }, 300);
            },
        },
        watch: {
            value(v) {
                if (v) this.GetVersion();
            }
        }
    });
</script>