
@{
    ViewBag.Title = "小样报告参数";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    .table-container {
        margin-top: 5px;
    }

    .table-container0 {
        margin-top: 5px;
    }

    .table-container1 {
        margin-top: 5px;
    }

    .tb {
        display: inline-flex;
        margin-bottom: 5px;
    }

    .table .cell, .el-table th, .el-table td {
        text-align: center;
        padding: 4px;
    }

    .el-form-item {
        margin-bottom: 10px;
    }

    .corparationBtn {
        margin: 0;
        padding: 5px;
        float: left;
        height: 100%;    
    }

    .el-dialog__headerbtn .el-dialog__close {
        display: none;
    }

    .el-form-item__content {
        margin-left: 0px !important;
    }

    .aa {
        width: 65px;
        display: inline-block;
        font-size: 14px;
    }

    .f1Div {
        display: inline-block;
    }

        .f1Div p {
            display: inline-block;
            font-size: 13px;
        }

    .dianl {
        margin-left: 15px !important;
    }

    .wuca {
        width: 75px;
        display: inline-block;
        font-size: 14px;
    }

    .pyuansu {
        font-weight: normal !important;
    }

    .one {
        margin-left: 350px;
    }

    .btt {
        display: inline-flex;
    }
</style>
<div id="app" v-cloak>

    <h3 style="text-align:center;margin-top:10px">小样参数</h3><br />
    <div style="display:inline-flex;margin-bottom:12px" class="one">

        <el-select v-model="orderNum" size="small" allow-create filterable clearable placeholder="请选择订单" v-on:change="">
            <el-option v-for="item in option"
                       v-bind:key="item.value"
                       v-bind:label="item.label"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-container>
            <a href="/Small_Sample/Index" style="margin-left:10px;"><el-button size="small" type="primary" plain>返回首页</el-button></a>&nbsp;&nbsp;&nbsp;
            <a href="/Small_Sample/Create"><el-button size="small" class="cret" type="primary" plain >新建小样报告</el-button></a>
        </el-container>
    </div>
    <el-dialog title="提示" v-bind:visible.sync="icVisible" width="16%">
        <span slot="title">
            <h3 style="text-align:center;">添加IC型号</h3>
            <el-form label-position="labelPosition" label-width="80px">
                <el-form-item label="IC型号">
                    <el-input v-model="IC_Model" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="V值">
                    <el-input v-model="V_REXT" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="N值">
                    <el-input v-model="N_Value" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="G值">
                    <el-input v-model="Gain" size="small" style="width:150px;"></el-input>
                </el-form-item>
            </el-form>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="quxiaoIC" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addIC" size="small" v-bind:disabled="bind">添 加</el-button>
        </span>
    </el-dialog>
    <el-dialog title="提示" v-bind:visible.sync="jjVisible" width="16%">
        <span slot="title">
            <h3 style="text-align:center;">添加PH间距</h3>
            <el-form label-position="labelPosition" label-width="80px">
                <el-form-item label="间距">
                    <el-input v-model="Spacing" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="最低值">
                    <el-input v-model="Least" size="small" style="width:150px;"></el-input>
                </el-form-item>
                <el-form-item label="最高值">
                    <el-input v-model="Maximum" size="small" style="width:150px;"></el-input>
                </el-form-item>
            </el-form>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="quxiaoJj" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addJj" size="small" v-bind:disabled="bind1">添 加</el-button>
        </span>
    </el-dialog>
    <el-dialog title="提示" v-bind:visible.sync="mxVisible" width="19%">
        <span slot="title">
            <h3 style="text-align:center;">添加模块型号</h3>
            <el-form label-position="labelPosition" label-width="70px">
                <el-form-item label="模块型号" style="display:flex">
                    <el-input v-model="Mo2" size="small" style="width:100px;"></el-input>
                    <span>-</span>
                    <el-input v-model="Mo1" size="small" style="width:100px"></el-input>
                </el-form-item>
                <el-form-item label="间距">
                    <el-select v-model="Spacing1" size="small" placeholder="请选择">
                        <el-option v-for="item in options"
                                   v-bind:key="item.value"
                                   v-bind:label="item.label"
                                   v-bind:value="item.value">
                        </el-option>
                    </el-select>
                </el-form-item>
        </span>
        <span slot="footer" class="dialog-footer">
            <el-button v-on:click="quxiaoMx" size="small">取 消</el-button>
            <el-button type="primary" v-on:click="addMx" size="small" v-bind:disabled="bind2">添 加</el-button>
        </span>
    </el-dialog>
    <div>
        <span style="margin-left:200px;font-size:15px">IC型号计算参数</span>
        <span style="margin-left:340px;font-size:15px">间距对应参数范围</span>
    </div>
    <div class="tb">
        <el-container>
            <el-aside width="490px">
                <el-table v-bind:data="tableData"
                          border max-height="228"
                          v-bind:row-style="trStyle"
                          v-bind:header-cell-style="{background:'#F0F8FF'}"
                          class="table-container" key='oneTable'>
                    <el-table-column prop="IC_Model"
                                     label="IC型号"
                                     width="113">
                    </el-table-column>
                    <el-table-column prop="V_REXT"
                                     label="V值"
                                     width="81">
                    </el-table-column>
                    <el-table-column prop="N_Value"
                                     label="N值"
                                     width="81">
                    </el-table-column>
                    <el-table-column prop="Gain"
                                     label="G值"
                                     width="90">
                    </el-table-column>
                    <el-table-column prop="operation"
                                     label="操作"
                                     width="123">
                        <template slot-scope="scope">
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit(scope.$index, scope.row)">编辑</el-button>
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove(scope.$index, scope.row)">删除</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="primary" v-on:click="postData(scope.$index, scope.row)">保存</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="cancelSave(scope.$index, scope.row)">取消</el-button>
                        </template>
                    </el-table-column>
                </el-table>

                <el-button class="tianjia1" type="primary" plain size="mini" v-on:click="icVisible = true" style="margin:3px;display:none">添加IC</el-button>
            </el-aside>
        </el-container>
        <el-container style="margin-left:10px">
            <el-aside width="523x">
                <el-table v-bind:data="tableData1"
                          border max-height="228"
                          v-bind:row-style="trStyle1"
                          v-bind:header-cell-style="{background:'#F0F8FF'}"
                          class="table-container0" key='twoTable'>
                    <el-table-column prop="Spacing"
                                     label="间距"
                                     width="136">
                    </el-table-column>
                    <el-table-column prop="Least"
                                     label="最低值"
                                     width="120">
                    </el-table-column>
                    <el-table-column prop="Maximum"
                                     label="最高值"
                                     width="120">
                    </el-table-column>
                    <el-table-column prop="operation1"
                                     label="操作"
                                     width="145">
                        <template slot-scope="scope">
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit1(scope.$index, scope.row)">编辑</el-button>
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove1(scope.$index, scope.row)">删除</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="primary" v-on:click="postData1(scope.$index, scope.row)">保存</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="cancelSaveph(scope.$index, scope.row)">取消</el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <el-button class="tianjia1" type="primary" plain size="mini" v-on:click="jjVisible = true" style="margin:3px;margin-left:0px;display:none">添加间距</el-button>
            </el-aside>
        </el-container>
    </div>
    <div style="margin-top:20px;margin-bottom:2px;">
        <span style="margin-left:190px;font-size:15px">型号间距对应表</span>
    </div>
    <div class="btt">
        <el-container>
            <el-aside width="480px">
                <el-table v-bind:data="tableData2"
                          border max-height="260"
                          v-bind:row-style="trStyle2"
                          v-bind:header-cell-style="{background:'#F0F8FF'}"
                          class="table-container1" key='threeTable' ref="multipleTable">
                    <el-table-column prop="Mo2"
                                     label="模块型号"
                                     width="160">
                    </el-table-column>
                    <el-table-column prop="Spacing"
                                     label="间距"
                                     width="160">
                    </el-table-column>
                    <el-table-column prop="operation2"
                                     label="操作"
                                     width="158">
                        <template slot-scope="scope">
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnone" type="primary" v-on:click="edit2(scope.$index, scope.row)">编辑</el-button>
                            <el-button v-show="showbtn" size="small" class="corparationBtn btnfour" type="danger" v-on:click="remove2(scope.$index, scope.row)">删除</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="primary" v-on:click="postData2(scope.$index, scope.row)">保存</el-button>
                            <el-button size="small" class="corparationBtn" style="display:none;" type="danger" v-on:click="cancelSavemx(scope.$index, scope.row)">取消</el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <el-row>
                    <el-button class="tianjia1" type="primary" plain size="mini" v-on:click="mxVisible = true" style="margin:5px;display:none">添加模型</el-button>
                </el-row>
            </el-aside>
        </el-container>

        <el-container>
            <el-aside width="660px">
                <el-main style="padding:0 15px; margin-top:5px">
                    <div v-for="(item,index) in result" style="border:1px solid #DCDCDC;margin:1px;padding:0 5px;">
                        <div>
                            <div v-bind:id="'id'+(index+1)" class="f1Div" style="margin:2px;">
                                <p>IC引脚电流:</p>
                                <el-input class="aa" v-model="Vvalue[index]" v-on:change="f1()" v-on:keyup.native="f1()" placeholder="V值" size="mini"></el-input>
                                <p style="font-size:16px">÷</p>
                                <el-input class="aa" v-model="Rvalue[index]" v-on:change="f1()" v-on:keyup.native="f1()" placeholder="R值" size="mini"></el-input>
                                <p style="font-size:20px">*</p>
                                <el-input class="aa" v-model="Nvalue[index]" v-on:change="f1()" v-on:keyup.native="f1()" placeholder="N值" size="mini"></el-input>
                                <p style="font-size:20px">*</p>
                                <el-input class="aa" v-model="Gvalue[index]" v-on:change="f1()" v-on:keyup.native="f1()" placeholder="G值" size="mini"></el-input>
                                <p style="font-size:20px">*</p>
                                <el-input style="width:70px;font-size:14px" v-model="Lvalue[index]" v-on:change="f1()" v-on:keyup.native="f1()" placeholder="亮度" size="mini"></el-input>
                                <p style="font-size:15px">÷100</p>
                                <p style="font-size:15px">=</p>
                                <el-input class="wuca" v-model="result[index]"  size="mini"></el-input>
                            </div>
                        </div>
                        <div class="f1Div">
                            <p>误差正10%：</p><el-input class="wuca" v-model="Zvalue[index]" size="mini"></el-input>
                            <p>误差负10%：</p><el-input class="wuca" v-model="Fvalue[index]" size="mini"></el-input>
                            <el-button v-on:click="deleteTrDiv(index)" size="mini" type="primary" plain>删除</el-button>
                        </div>
                    </div>
                    <el-button v-on:click="addTrDiv" size="mini" type="primary" plain>添加</el-button>
                </el-main>
            </el-aside>
        </el-container>
    </div>
</div>
@{
    var UserName = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).UserName;
    var UserIds = Session["User"] == null ? 0 : ((JianHeMES.Models.Users)Session["User"]).UserNum;
}
<script>
    var app = new Vue({
        el: "#app",
        data: {
            Zvalue: ["", "", ""],
            Fvalue: ["", "", ""],
            result: ["", "", ""],
            Vvalue: ["", "", ""],
            Rvalue: ["", "", ""],
            Nvalue: ["", "", ""],
            Gvalue: ["", "", ""],
            Lvalue: ["", "", ""],
            tableData: [],
            tableData1: [],
            tableData2: [],
            orderNum: null, //选择订单
            option: [],
            icStyle: "", //第一个表格变红的数据
            Mostyle: "", //第三个表格变红的数据
            Mostyle1: "",//第二个表格变红的数据
            Id: null,
            showbtn: true,
            icVisible: false,
            jjVisible: false,
            mxVisible: false,
            bind: true,  //添加禁用按钮
            bind1: true, //添加禁用按钮
            bind2:true,  //添加禁用按钮
            labelPosition: 'right',
            IC_Model: null,
            V_REXT: null,
            N_Value: null,
            Gain: null,
            Spacing: null,
            Least: null,
            Maximum: null,
            Mo2: null,
            Mo1: null,
            Spacing1: null,
            options: [],
            oldTrVal: '',
            oldTrVal1: '',
            oldTrVal2: '',
        },
        created: function () {
            this.gettableData()
        },
        methods: {
            //添加行
            addTrDiv: function () {
                this.Zvalue.push("");
                this.Fvalue.push("");
                this.result.push("");
                this.Vvalue.push("");
                this.Rvalue.push("");
                this.Nvalue.push("");
                this.Gvalue.push("");
                this.Lvalue.push("");
            },
            //删除行
            deleteTrDiv: function (index) {
                this.Zvalue.splice(index,1);
                this.Fvalue.splice(index,1);
                this.result.splice(index,1);
                this.Vvalue.splice(index,1);
                this.Rvalue.splice(index,1);
                this.Nvalue.splice(index,1);
                this.Gvalue.splice(index,1);
                this.Lvalue.splice(index,1);
            },
            //获取三个表格数据
            gettableData: function () {
                axios.post('/small_Sample/Small_Sample_Arguments_Getdata').then(res => {
                    let tone = JSON.parse(res.data.Small_Sample_IC_Model_Arguments_list);
                    let ttwo = JSON.parse(res.data.Small_Sample_Spacing_Value_list);
                    let tthree = JSON.parse(res.data.Small_Sample_ICmodel_Spacing_list);
                    this.tableData = tone;
                    this.tableData1 = ttwo;
                    var arr = [];
                    this.tableData1.forEach(item => { //把Spacing用作添加模型的选项
                        let obj = { value: item.Spacing, label: item.Spacing }
                        arr.push(obj)
                    })
                    this.options = arr;
                    this.tableData2 = tthree;
                }).catch(err => { console.log("获取数据失败") })
            },
            //添加IC
            addIC: function () {
                let icarr = { IC_Model: this.IC_Model, V_REXT: this.V_REXT, N_Value: this.N_Value, Gain: this.Gain, CreatedDate: new Date(), Creator: "@UserName" }
                if (this.IC_Model == '' || this.V_REXT == '' || this.N_Value == '' || this.Gain == '') {
                    this.$message({
                        message: '请填写完整在提交',
                        type: 'warning'})
                } else {
                    console.log('aa')
                    axios.post('/Small_Sample/Small_Sample_IC_Model_Arguments_add', { record: icarr }).then(res => {
                        this.icVisible = false;
                        this.$message({ message: res.data, type: 'success' });
                        this.gettableData()
                        this.IC_Model = null, this.V_REXT = null, this.N_Value = null, this.Gain = null;
                        this.bind = true;
                    }).catch(err => { })
                }
            },
            quxiaoIC() {
                this.icVisible = false;
                this.IC_Model = null; this.V_REXT = null; this.N_Value = null; this.Gain = null;
            },
            //添加PH间距
            addJj: function () {
                let jjarr = { Spacing: this.Spacing, Least: this.Least, Maximum: this.Maximum, CreatedDate: new Date(), Creator: "@UserName" }
                if (this.Spacing == '' || this.Least == '' || this.Maximum == '') {
                    this.$message({
                        message: '请填写完整在提交',
                        type: 'warning'})
                } else {
                    axios.post('/Small_Sample/Small_Sample_Spacing_Value_add', { record: jjarr }).then(res => {
                        this.jjVisible = false;
                        this.$message({ message: res.data, type: 'success' });
                        this.gettableData()
                        this.Spacing = null, this.Least = null, this.Maximum = null;
                        this.bind1 = true;
                    }).catch(err => { })
                }
            },
            quxiaoJj() {
                this.jjVisible = false;
                this.Spacing = null, this.Least = null, this.Maximum = null;
            },
            //添加模块型号
            addMx: function () {
                if (this.Mo1 == '' || this.Mo2 == '' || this.Spacing1 == '') {
                    this.$message({
                        message: '请填写完整在提交',
                        type: 'warning' })
                } else {
                    this.Mo1; this.Mo2;
                    let a = this.Mo2 + '-' + this.Mo1
                    let mxarr = { Mo2: a, Spacing: this.Spacing1, CreatedDate: new Date(), Creator: "@UserName" }
                    axios.post('/Small_Sample/Small_Sample_ICmodel_Spacing_add', { record_add: mxarr }).then(res => {
                        this.$message({ message: res.data, type: 'success' });
                        this.gettableData()
                        this.Mo1 = null; this.Mo2 = null, this.Spacing1 = null;
                    }).catch(err => { })
                }
            },
            quxiaoMx() {
                this.mxVisible = false;
                this.Mo1 = null; this.Mo2 = null, this.Spacing1 = null;
            },
            edit(index, row) { this.oldTrVal = row; changeInput(index, row) },
            edit1(index, row) { this.oldTrVal1 = row; changeInput1(index, row) },
            edit2(index, row) { this.oldTrVal2 = row; changeInput2(index, row) },
            remove(index, row) {
                var comfirm = confirm(`确认删除IC型号为${row.IC_Model}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_IC_Model_Arguments_delete", { id: row.Id }).then(res => {
                        this.$message({ message: '已删除!', type: 'success' });
                        this.tableData.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({ message: '无法删除!', type: 'warning' });
                    })
                }
            },
            remove1(index, row) {
                var comfirm = confirm(`确认删除间距为${row.Spacing}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_Spacing_Value_delete", { id: row.Id }).then(res => {
                        this.$message({ message: '已删除!', type: 'success' });
                        this.tableData1.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData1.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({ message: '无法删除!', type: 'warning' });
                    })
                }
            },
            remove2(index, row) {
                var comfirm = confirm(`确认删除模块型号为${row.Mo2}这条信息吗？`);
                if (comfirm) {
                    axios.post("/Small_Sample/Small_Sample_ICmodel_Spacing_delete", { id: row.Id }).then(res => {
                        this.$message({ message: '已删除!', type: 'success' });
                        this.tableData2.forEach((item, index) => {
                            if (item.Id == row.Id) {
                                this.tableData2.splice(index, 1);
                            }
                        })
                    }).catch(err => {
                        this.$message({ message: '无法删除!', type: 'warning' });
                    })
                }
            },
            postData(index, row) {
                saveICdata(index, row)
            },
            postData1(index, row) {
                saveJjdata(index, row)
            },
            postData2(index, row) {
                saveMxdata(index, row)
            },
            cancelSave(index, row) {
                cancelData(index, row)
            },
            cancelSaveph(index, row) {
                cancelDataph(index, row)
            },
            cancelSavemx(index, row) {
                cancelDatamx(index, row)
            },
            getOrderList() {
                axios.post("/Commonality/GetOrderNumListJSON").then(res => {
                    for (let item in res.data) {
                        let obj = { label: res.data[item], value: res.data[item] }
                        this.option.push(obj)
                    }
                }).catch(err => {
                })
            },
            getId() {
                axios.post("/Small_Sample/Index", { ordernum: this.orderNum }).then(res => {

                        console.log(res.data)
                        if (res.data == '') {
                            this.$refs.multipleTable.bodyWrapper.scrollTop = 0;
                            this.$message({
                                message: "没有此报告",
                                type: "warning",
                            })
                            return ""
                        };
                        for (let i in res.data) {
                            this.Id = res.data[i].Id;
                        }
                        if (this.Id != []) {
                            this.getData();
                        } else {
                        }
                    })
            },
            getData() {
                axios.post("/Small_Sample/Display", { id: this.Id }).then(res => {
                    if (res.data.Mo2 == null) {
                        this.$message({
                            message: "此报告没有模块型号，找不到对应参数",
                            type: "warning"
                        })
                    };
                    var arr = [];
                    var arr1 = [];
                    for (let i = 0; i < 3; i++) {
                        arr.push(res.data.De1_dec)
                    }
                    this.Lvalue = arr;
                    arr1.push(res.data.Adju_R)
                    arr1.push(res.data.Adju_G)
                    arr1.push(res.data.Adju_B)
                    this.Rvalue = arr1;
                    var aa = [];
                    
                    //第一个表格对应数据变红
                    for (let i = 0; i < this.tableData.length; i++) {
                        if (this.tableData[i].IC_Model == res.data.IC3) {
                            this.icStyle = this.tableData[i].IC_Model;
                            aa = this.tableData[i];
                        }
                    };
                    if (this.icStyle != res.data.IC3) {
                        this.$message({
                            message: "找不到此报告的IC型号",
                            type: "warning"
                        })
                    };
                    let a1 = [], b1 = [], c1 = [];
                    for (let i = 0; i < 3; i++) {
                        a1.push(aa.V_REXT)
                        b1.push(aa.N_Value)
                        c1.push(aa.Gain)
                    }
                    this.Vvalue = a1, this.Nvalue = b1, this.Gvalue = c1;
                    f1();
                    //第三个表格对应数据变红
                    var jianju = []; //用于判断第三个表格中的Spacing是否与第二个表格Spacing相同
                    let jianju1 = "";
                    for (let i = 0; i < this.tableData2.length; i++) {
                        if (this.tableData2[i].Mo2 == res.data.Mo2) {
                            this.Mostyle = this.tableData2[i].Mo2;
                            jianju.push(this.tableData2[i].Spacing)
                            jianju1 = this.tableData2[i].Mo2;
                        };
                    }
                    if (jianju1 != res.data.Mo2) {
                        this.$message({
                            message: "此订单没有模块型号，找不到对应间距参数",
                            type: "warning"
                        })
                    };
                    //第二个表格对应数据变红
                    for (let i = 0; i < this.tableData1.length; i++) {
                        if (this.tableData1[i].Spacing == jianju) {
                            this.Mostyle1 = this.tableData1[i].Spacing;
                        }
                    }
                })
            },
            //第一个表格对应参数设置为红色显示
            trStyle({ row, rowIndex }) {
                if (this.icStyle == "") {
                } else {
                    if (row.IC_Model == this.icStyle) {
                        return "color:red"
                    } else { return "" };
                }
            },
            //第二个表格对应参数设置为红色显示
            trStyle1({ row, rowIndex }) {
                if (this.Mostyle1 == "") {
                } else {
                    if (row.Spacing == this.Mostyle1) {
                        return "color:red"
                    } else { return "" };
                }
            },
            //第三个表格对应参数设置为红色显示
            trStyle2({ row, rowIndex }) {
                if (this.Mostyle == "") {
                } else {
                    if (row.Mo2 == this.Mostyle) {
                        return "color:red"
                    } else {
                        return "";
                    }
                }
            }
        },
        watch: {
            icStyle() {
                if (this.icStyle != "") {
                    if (this.tableData.length > 4) {
                        let obj = {};
                        for (let i = 0; i < this.tableData.length; i++) {
                            if (this.tableData[i].IC_Model == this.icStyle) {
                                obj = this.tableData[i]
                                this.tableData.splice(i,1)
                            }
                        }
                        let arr = this.tableData;
                        arr.splice(3, 0, obj)
                        this.tableData = arr;
                    }
                }
            },
            Mostyle() {
                if (this.Mostyle != "") {
                    var a = {};
                    for (let i = 0; i < this.tableData2.length; i++) {
                        if (this.tableData2[i].Mo2 == this.Mostyle) {
                            a = this.tableData2[i];
                            this.tableData2.splice(i,1)
                        };
                    }
                    let arr = this.tableData2
                    arr.splice(3, 0,a)
                    this.tableData2 = arr;
                }
            },
            orderNum() {
                console.log(this.orderNum)
                if (this.orderNum != '') {
                    this.getId();
                } else {
                    this.icStyle = "";
                    this.Mostyle = "";
                    this.Mostyle1 = "";
                }
            },
            IC_Model() {
                if (this.IC_Model != null && this.V_REXT != null && this.N_Value != null && this.Gain != null) {
                    this.bind = false;
                } else { this.bind = true; };
                if (this.IC_Model != this.IC_Model.replace(/[\W]/g, '')) {
                    this.$message({ message: '只能输入字母和数字', type: 'warning' })
                    this.bind = true;
                };
            },
            V_REXT() {
                if (this.IC_Model != null && this.V_REXT != null && this.N_Value != null && this.Gain != null) {
                    this.bind = false;
                } else { this.bind = true; };
                if (!this.V_REXT.match(/^[0-9]+\.{0,1}[0-9]{0,2}$/)) {
                    this.$message({ message:'只能输入正数或小数', type: 'warning' })
                    this.bind = true;
                };
            },
            N_Value() {
                if (this.IC_Model != null && this.V_REXT != null && this.N_Value != null && this.Gain != null) {
                    this.bind = false;
                } else { this.bind = true; };
                if (!this.N_Value.match(/^[0-9]+\.{0,1}[0-9]{0,2}$/)) {
                    this.$message({ message: '只能输入正数或小数', type: 'warning' })
                    this.bind = true;
                };
            },
            Gain() {
                if (this.IC_Model != null && this.V_REXT != null && this.N_Value != null && this.Gain != null) {
                    this.bind = false;
                } else { this.bind = true; };
                if (!this.Gain.match(/^[0-9]+\.{0,1}[0-9]{0,2}$/)) {
                    this.$message({ message: '只能输入正数或小数', type: 'warning' })
                    this.bind = true;
                };
            },
            Mo2() {
                if (this.Mo2 != null && this.Mo1 != null && this.Spacing1 != null) {
                    this.bind2 = false;
                } else { this.bind2 = true }
            },
            Mo1() {
                if (this.Mo2 != null && this.Mo1 != null && this.Spacing1 != null) {
                    this.bind2 =false;
                } else { this.bind2 = true }
            },
            Spacing1() {
                if (this.Mo2 != null && this.Mo1 != null && this.Spacing1 != null) {
                    this.bind2 = false;
                } else { this.bind2 =true}
            },
            Spacing() {
                if (this.Spacing != null && this.Least != null && this.Maximum != null) {
                    this.bind1 = false;
                } else {
                    this.bind1 = true
                };
                if (this.Spacing != this.Spacing.replace(/[\W]/g, '')) {
                    this.$message({ message: '只能输入字母和数字', type: 'success' })
                    this.bind1 = true;
                };
            },
            Least() {
                if (this.Spacing != null && this.Least != null && this.Maximum != null) {
                    this.bind1 = false;
                } else { this.bind1 = true };
                if (!this.Least.match(/^[0-9]+\.{0,1}[0-9]{0,2}$/)) {
                    this.$message({ message: '只能输入正数或小数', type: 'warning' })
                    this.bind1 = true;
                };
            },
            Maximum() {
                if (this.Spacing != null && this.Least != null && this.Maximum != null) {
                    this.bind1 = false;
                } else { this.bind1 = true };
                if (!this.Maximum.match(/^[0-9]+\.{0,1}[0-9]{0,2}$/)) {
                    this.$message({ message: '只能输入正数或小数', type: 'warning' })
                    this.bind1 = true;
                };
            },
        },
        mounted: function () {
            this.getOrderList();
            var roles = JSON.parse(localStorage.getItem("rigths"))
            if (checkRoles(roles, '添加参数')) {
                $('.tianjia1').show()
            } else {
                $('.tianjia1').hide()
            };
            if (checkRoles(roles, '编辑参数')) {
                this.showbtn = true;
            } else {
                this.showbtn = false;
            };
            if (checkRoles(roles, '删除参数')) {
                this.showbtn = true;
            } else {
                this.showbtn = false;
            };
            if (checkRoles(roles, '新建小样报告')) {
                $('.cret').show()
            } else {
                $('.cret').hide()
            }          
        }
    });
    //编辑IC型号数据
    function changeInput(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index];
        targetTr.children[0].innerHTML = `<input type='text' value="${row.IC_Model}" />`;
        targetTr.children[1].innerHTML = `<input type='text' value="${row.V_REXT}" />`;
        targetTr.children[2].innerHTML = `<input type='text' value="${row.N_Value}" />`;
        targetTr.children[3].innerHTML = `<input type='text' value="${row.Gain}" />`;
        $(targetTr.children[4].children[0].children[0]).hide();
        $(targetTr.children[4].children[0].children[1]).hide();
        $(targetTr.children[4].children[0].children[2]).show();
        $(targetTr.children[4].children[0].children[3]).show();
    }
    //编辑PH间距数据
    function changeInput1(index, row) {
        var targetTr1 = $(".table-container0").find(".el-table__row")[index];
        targetTr1.children[0].innerHTML = `<input type='text' value="${row.Spacing}" />`;
        targetTr1.children[1].innerHTML = `<input type='text' value="${row.Least}" />`;
        targetTr1.children[2].innerHTML = `<input type='text' value="${row.Maximum}" />`;
        $(targetTr1.children[3].children[0].children[0]).hide();
        $(targetTr1.children[3].children[0].children[1]).hide();
        $(targetTr1.children[3].children[0].children[2]).show();
        $(targetTr1.children[3].children[0].children[3]).show();
    }
    //编辑模块型号数据
    function changeInput2(index, row) {
        var targetTr2 = $(".table-container1").find(".el-table__row")[index];
        targetTr2.children[0].innerHTML = `<input type='text' value="${row.Mo2}" />`;
        targetTr2.children[1].innerHTML = `<input type='text' value="${row.Spacing}" >`;
        $(targetTr2.children[2].children[0].children[0]).hide();
        $(targetTr2.children[2].children[0].children[1]).hide();
        $(targetTr2.children[2].children[0].children[2]).show();
        $(targetTr2.children[2].children[0].children[3]).show();
    }
    //保存编辑IC型号数据
    function saveICdata(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index].cells;
        var inputvalue = [];
        for (let i = 0; i < targetTr.length - 1; i++) {
            inputvalue.push(targetTr[i].children[0].value)
        }
        var obj = { Id: row.Id, IC_Model: inputvalue[0], V_REXT: inputvalue[1], N_Value: inputvalue[2], Gain: inputvalue[3]};
        axios.post("/Small_Sample/Small_Sample_IC_Model_Arguments_modify", { record_modify:obj }).then(res => {
            app.$message({ message: res.data, type: 'success' });
            if (res.data === '保存成功') {
                var targetTr = $(".table-container").find(".el-table__row")[index];
                targetTr.children[0].innerHTML = inputvalue[0]
                targetTr.children[1].innerHTML = inputvalue[1]
                targetTr.children[2].innerHTML = inputvalue[2]
                targetTr.children[3].innerHTML = inputvalue[3]
                app.gettableData()
            };
            $(targetTr.children[4].children[0].children[0]).show();
            $(targetTr.children[4].children[0].children[1]).show();
            $(targetTr.children[4].children[0].children[2]).hide();
            $(targetTr.children[4].children[0].children[3]).hide();

        }).catch(err => { })
    }
    //保存编辑PH间距数据
    function saveJjdata(index, row) {
        var targetTr1 = $(".table-container0").find(".el-table__row")[index].cells;
        var inputph = [];
        for (let i = 0; i < targetTr1.length - 1; i++) {
            inputph.push(targetTr1[i].children[0].value)
        }
        var objph = { Id: row.Id, Spacing: inputph[0], Least: inputph[1], Maximum: inputph[2], ModifyTime: new Date(), Modifier:"@UserName" }
        axios.post("/Small_Sample/Small_Sample_Spacing_Value_modify", { record: objph }).then(res => {
            app.$message({ message: res.data,type: 'success'});
            if (res.data === '保存成功') {
                var targetTr1 = $(".table-container0").find(".el-table__row")[index];
                targetTr1.children[0].innerHTML = inputph[0]
                targetTr1.children[1].innerHTML = inputph[1]
                targetTr1.children[2].innerHTML = inputph[2]
                app.gettableData()
            };
            $(targetTr1.children[3].children[0].children[0]).show();
            $(targetTr1.children[3].children[0].children[1]).show();
            $(targetTr1.children[3].children[0].children[2]).hide();
            $(targetTr1.children[3].children[0].children[3]).hide();
        }).catch(err => { })
    }
    //保存编辑模块型号数据
    function saveMxdata(index, row) {
        var targetTr2 = $(".table-container1").find(".el-table__row")[index].cells;
        var inputmx = [];
        for (let i = 0; i < targetTr2.length - 1; i++) {
            inputmx.push(targetTr2[i].children[0].value)
        }
        var objmx = { Id: row.Id, Mo2: inputmx[0], Spacing: inputmx[1], Modifier:"@UserName" }
        axios.post("/Small_Sample/Small_Sample_ICmodel_Spacing_modify", { record: objmx }).then(res => {
            app.$message({ message: res.data,type: 'success'});
            if (res.data === '保存成功') {
                var targetTr2 = $(".table-container1").find(".el-table__row")[index];
                targetTr2.children[0].innerHTML = inputmx[0]
                targetTr2.children[1].innerHTML = inputmx[1]
                app.gettableData()
            };
            $(targetTr2.children[2].children[0].children[0]).show();
            $(targetTr2.children[2].children[0].children[1]).show();
            $(targetTr2.children[2].children[0].children[2]).hide();
            $(targetTr2.children[2].children[0].children[3]).hide();
        }).catch(err => { })
    }
    //取消保存
    function cancelData(index, row) {
        var targetTr = $(".table-container").find(".el-table__row")[index];
        targetTr.children[0].innerHTML = app.oldTrVal.IC_Model;
        targetTr.children[1].innerHTML = app.oldTrVal.V_REXT;
        targetTr.children[2].innerHTML = app.oldTrVal.N_Value;
        targetTr.children[3].innerHTML = app.oldTrVal.Gain;
        $(targetTr.children[4].children[0].children[0]).show();
        $(targetTr.children[4].children[0].children[1]).show();
        $(targetTr.children[4].children[0].children[2]).hide();
        $(targetTr.children[4].children[0].children[3]).hide();
    }
    //取消保存PH
    function cancelDataph(index, row) {
        var targetTr1 = $(".table-container0").find(".el-table__row")[index];
        targetTr1.children[0].innerHTML = app.oldTrVal1.Spacing;
        targetTr1.children[1].innerHTML = app.oldTrVal1.Least;
        targetTr1.children[2].innerHTML = app.oldTrVal1.Maximum;
        $(targetTr1.children[3].children[0].children[0]).show();
        $(targetTr1.children[3].children[0].children[1]).show();
        $(targetTr1.children[3].children[0].children[2]).hide();
        $(targetTr1.children[3].children[0].children[3]).hide();
    }
    //取消保存模块型号
    function cancelDatamx(index, row) {
        var targetTr2 = $(".table-container1").find(".el-table__row")[index];
        targetTr2.children[0].innerHTML = app.oldTrVal2.Mo2;
        targetTr2.children[1].innerHTML = app.oldTrVal2.Spacing;
        $(targetTr2.children[2].children[0].children[0]).show();
        $(targetTr2.children[2].children[0].children[1]).show();
        $(targetTr2.children[2].children[0].children[2]).hide();
        $(targetTr2.children[2].children[0].children[3]).hide();
    }
    //检测权限
    
    function checkRoles(list, roleName) {
        var flag = false
        if (list && roleName) {
            for (let item in list) {
                if (list[item] == roleName) {
                    flag = true
                }
            }
        }
        return flag
    }
    //IC单引脚计算公式
    function f1() {
        let V = app.Vvalue, R = app.Rvalue, N = app.Nvalue, G = app.Gvalue, L = app.Lvalue,
            result = app.result,Z = app.Zvalue, F = app.Fvalue;
        for (let i in V) {
            if (V[i] != "" && R[i] != "" && N[i] != "" && G[i] != "" && L[i] != "") {
                var m = ((V[i] / R[i]) * N[i] * G[i] * L[i] / 100).toFixed(4);
                Vue.set(app.result, i, isNaN(m) ? "" : m);
                if (result[i] != "") {
                    Z[i] = (result[i] * 1.1).toFixed(4);
                    F[i] = (result[i] * 0.9).toFixed(4);
                }
            } else {
                Vue.set(app.result, i, "");
                    Z[i] = "";
                    F[i] = "";
            }
        }
    }
</script>
