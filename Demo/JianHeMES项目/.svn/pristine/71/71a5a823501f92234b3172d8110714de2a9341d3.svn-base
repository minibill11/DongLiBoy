@model IEnumerable<JianHeMES.Models.Personnel_of_Contrast>

@{
    ViewBag.Title = "人工成本周对比表";
}
<script src="~/Scripts/axios.min.js"></script>
<style>
    .table-bordered > tbody > tr > th, .table-bordered > tbody > tr > td, .table > colgroup + thead > tr:first-child > td {
        border: 1px solid #555;
        text-align: center;
        vertical-align: middle;
        padding: 0px;
        font-size: 12px;
    }

    .table-bordered > thead > tr > td {
        height: 50px;
        font-size: 15px !important;
    }

    .table > tbody > tr:first-child > th {
        background-color: #f0da35;
        height: 60px;
    }
    .table > tbody > tr:last-child > th {
        background-color: #f0da35;
        height: 35px;
    }
    .table > tbody > tr > td {
        height: 30px;
    }

        .table > tbody > tr > td:hover, .table > tbody > tr > th :hover {
            background-color: #f0da35;
        }

    .table > tbody > tr:hover {
        background-color: #f8e490;
    }

    .container {
        width: 1400px;
    }

    .table > colgroup + thead > tr:first-child > td:nth-child(1),
    .table > colgroup + thead > tr:first-child > td:nth-child(2),
    .table-bordered > tbody > tr > td:nth-child(8),
    .table-bordered > tbody > tr > td:nth-child(15),
    .table-bordered > tbody > tr > th:nth-child(8),
    .table-bordered > tbody > tr > th:nth-child(15) {
        border-right: 2px solid #000;
    }
</style>
<h3 class="text-center">人工成本周对比表查看</h3>
<p>| @Html.ActionLink("输入周报", "ContrastInput") | @Html.ActionLink("月对比表", "ContrastMonth")</p>
<hr />
<div id="app" class="form-group text-center">
    <div class="row">
        <table class="table table-bordered">
            <colgroup>
                <col width="73" />
                <col width="55" />
                <col width="62" />
                <col width="65" />
                <col width="62" />
                <col width="68" />
                <col width="65" />
                <col width="65" />

                <col width="55" />
                <col width="62" />
                <col width="65" />
                <col width="62" />
                <col width="68" />
                <col width="65" />
                <col width="65" />

                <col width="55" />
                <col width="62" />
                <col width="65" />
                <col width="62" />
                <col width="68" />
                <col width="65" />
                <col width="65" />
            </colgroup>
            <thead>
                <tr>
                    <td colspan="8">
                        <select v-model="leftYear">
                            <option></option>
                            <option>2019</option>
                            <option>2020</option>
                            <option>2021</option>
                            <option>2022</option>
                            <option>2023</option>
                        </select>
                        年
                        <select v-model="leftMonth">
                            <option></option>
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                            <option>11</option>
                            <option>12</option>
                        </select>
                        月 第
                        <select v-model="leftWeek">
                            <option></option>
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                        </select>周 各部门汇总
                    </td>
                    <td colspan="7">
                        <select v-model="rigthYear">
                            <option></option>
                            <option>2019</option>
                            <option>2020</option>
                            <option>2021</option>
                            <option>2022</option>
                            <option>2023</option>
                        </select>
                        年
                        <select v-model="rigthMonth">
                            <option></option>
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                            <option>6</option>
                            <option>7</option>
                            <option>8</option>
                            <option>9</option>
                            <option>10</option>
                            <option>11</option>
                            <option>12</option>
                        </select>
                        月 第
                        <select v-model="rigthWeek">
                            <option></option>
                            <option>1</option>
                            <option>2</option>
                            <option>3</option>
                            <option>4</option>
                            <option>5</option>
                        </select>周 各部门汇总
                    </td>
                    <td colspan="7">上周对比</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <th>部门</th>
                    <th>人数</th>
                    <th>正班工时</th>
                    <th>正班工资</th>
                    <th>人员加班<br />总值(H)</th>
                    <th>加班工资<br />合计</th>
                    <th>工资合计</th>
                    <th>日人均工资</th>
                    <th>人数</th>
                    <th>正班工时</th>
                    <th>正班工资</th>
                    <th>人员加班<br />总值(H)</th>
                    <th>加班工资<br />合计</th>
                    <th>工资合计</th>
                    <th>日人均工资</th>
                    <th>人数</th>
                    <th>正班工时</th>
                    <th>正班工资</th>
                    <th>人员加班<br />总值(H)</th>
                    <th>加班工资<br />合计</th>
                    <th>工资合计</th>
                    <th>日人均工资</th>
                </tr>
                <tr v-for="item in tableList">
                    @*左表*@
                    <td>{{item.Department}}</td>
                    <td>{{item.Number}}</td>
                    <td>{{item.Zhang_WorkingHour}}</td>
                    <td>{{item.Zhang_Pay}}</td>
                    <td>{{item.Total_Staff}}</td>
                    <td>{{item.Overtime_Total}}</td>
                    <td>{{item.Pay_Total}}</td>
                    <td>{{item.Daily_Pay}}</td>
                    @*右表*@
                    <td>{{item.Number2}}</td>
                    <td>{{item.Zhang_WorkingHour2}}</td>
                    <td>{{item.Zhang_Pay2}}</td>
                    <td>{{item.Total_Staff2}}</td>
                    <td>{{item.Overtime_Total2}}</td>
                    <td>{{item.Pay_Total2}}</td>
                    <td>{{item.Daily_Pay2}}</td>
                    @*对比数据*@
                    <td>{{((item.Number2!=''||item.Number2=='0')&&(item.Number!=''||item.Number=='0'))?(item.Number2-item.Number):""}}</td>
                    <td>{{((item.Zhang_WorkingHour2!=''||item.Zhang_WorkingHour2=='0')&&(item.Zhang_WorkingHour!=''||item.Zhang_WorkingHour=='0'))?(item.Zhang_WorkingHour2-item.Zhang_WorkingHour):""}}</td>
                    <td>{{((item.Zhang_Pay2!=''||item.Zhang_Pay2=='0')&&(item.Zhang_Pay!=''||item.Zhang_Pay=='0'))?((item.Zhang_Pay2-item.Zhang_Pay).toFixed(1)):""}}</td>
                    <td>{{((item.Total_Staff2!=''||item.Total_Staff2=='0')&&(item.Total_Staff!=''||item.Total_Staff=='0'))?((item.Total_Staff2-item.Total_Staff).toFixed(1)):""}}</td>
                    <td>{{((item.Overtime_Total2!=''||item.Overtime_Total2=='0')&&(item.Overtime_Total!=''||item.Overtime_Total=='0'))?((item.Overtime_Total2-item.Overtime_Total).toFixed(2)):""}}</td>
                    <td>{{((item.Pay_Total2!=''||item.Pay_Total2=='0')&&(item.Pay_Total!=''||item.Pay_Total=='0'))?((item.Pay_Total2-item.Pay_Total).toFixed(2)):""}}</td>
                    <td>{{((item.Daily_Pay2!=''||item.Daily_Pay2=='0')&&(item.Daily_Pay!=''||item.Daily_Pay=='0'))?((item.Daily_Pay2-item.Daily_Pay).toFixed(2)):""}}</td>
                </tr>
                <tr>
                    @*左表*@
                    <th>总计</th>
                    <th>{{numberleft}}</th>
                    <th>{{Zhang_WorkingHourleft}}</th>
                    <th>{{Zhang_Payleft}}</th>
                    <th>{{Total_Staffleft}}</th>
                    <th>{{Overtime_Totalleft}}</th>
                    <th>{{Pay_Totalleft}}</th>
                    <th>{{Daily_Payleft}}</th>
                    @*右表*@
                    <th>{{numberR}}</th>
                    <th>{{Zhang_WorkingHourR}}</th>
                    <th>{{Zhang_PayR}}</th>
                    <th>{{Total_StaffR}}</th>
                    <th>{{Overtime_TotalR}}</th>
                    <th>{{Pay_TotalR}}</th>
                    <th>{{Daily_PayR}}</th>
                    @*对比数据*@
                    <th>{{(typeof(numberleft)!='undefined'&&typeof(numberR)!='undefined')?(numberR-numberleft):""}}</th>
                    <th>{{(typeof(Zhang_WorkingHourleft)!='undefined'&&typeof(Zhang_WorkingHourR)!='undefined')?(Zhang_WorkingHourR-Zhang_WorkingHourleft):""}}</th>
                    <th>{{(typeof(Zhang_Payleft)!='undefined'&&typeof(Zhang_PayR)!='undefined')?(Zhang_PayR-Zhang_Payleft).toFixed(1):""}}</th>
                    <th>{{(typeof(Total_Staffleft)!='undefined'&&typeof(Total_StaffR)!='undefined')?(Total_StaffR-Total_Staffleft).toFixed(1):""}}</th>
                    <th>{{(typeof(Overtime_Totalleft)!='undefined'&&typeof(Overtime_TotalR)!='undefined')?(Overtime_TotalR-Overtime_Totalleft).toFixed(2):""}}</th>
                    <th>{{(typeof(Pay_Totalleft)!='undefined'&&typeof(Pay_TotalR)!='undefined')?(Pay_TotalR-Pay_Totalleft).toFixed(2):""}}</th>
                    <th>{{(typeof(Daily_Payleft)!='undefined'&&typeof(Daily_PayR)!='undefined')?(Daily_PayR-Daily_Payleft).toFixed(2):""}}</th>
                </tr>
            </tbody>
        </table>
    </div>
</div>
<script>
    var app = new Vue({
        el: "#app",
        data: {
            leftYear: "",
            leftMonth: "",
            leftWeek: "",
            rigthYear: "",
            rigthMonth: "",
            rigthWeek: "",
            tableList: [],//表数据
            leftIsEmpty: 0,//左表是否为空（0为空）
            rightIsEmpty: 0,//右表是否为空（0为空）
            leftVal: [],//记录左表值
            rightVal: [],//记录右表值
        },
        mounted() {
            this.getDefualtInfo();
            //console.log(this.rightIsEmpty == 0)  //挂载之时数据为空；挂载完成后才执行监听--监听到时间不为空post--此时数据已经发生改变但是在mounted阶段不可能知道表格数据是否已有变化。所以在mounted阶段得到的rightIsEmpty值都是0；
        },
        created: function () {
            //初始化表格，默认部门数为13
            for (let b = 0; b < 13; b++) {
                this.tableList.push({
                    Department: "",
                    Number: "",
                    Zhang_WorkingHour: "",
                    Zhang_Pay: "",
                    Total_Staff: "",
                    Overtime_Total: "",
                    Pay_Total: "",
                    Daily_Pay: "",
                    Number2: "",
                    Zhang_WorkingHour2: "",
                    Zhang_Pay2: "",
                    Total_Staff2: "",
                    Overtime_Total2: "",
                    Pay_Total2: "",
                    Daily_Pay2: "",
                });
            };
        },
        methods: {
            postJson: function (Y, M, W, L) {//请求数据post
                $.ajax({
                    url: "/Personnel_of_Contrast/ContrastGetData",
                    type: "post",
                    data: {
                        Year: Y,
                        Month: M,
                        Week: W
                    },
                    success: function (data) {
                        //返回值处理
                        let dataJson = JSON.parse(data);
                        if (L == 'left') {
                            app.$options.methods.leftDataCount(dataJson);
                        } else if (L == 'right') {
                            app.$options.methods.rightDataCount(dataJson);
                        };
                    },
                    error: function (err) {
                        alert("post失败!")
                    }
                });
            },
            gotoPost: function (year, month, week, location) {//年月周和左右表中转
                //清空表
                app.$options.methods.emptyData(location);
                //都不为空则发送post
                if (year != "" && month != "" && week != "") {
                    app.$options.methods.postJson(year, month, week, location);
                };
            },
            leftDataCount: function (jsonVal) {//左表赋值
                if (jsonVal != "") {//值是否为空
                    app.leftVal = jsonVal;
                    app.leftIsEmpty = jsonVal.length;
                    if (app.rightIsEmpty == 0) {//右边是否为空
                        if (app.tableList.length >= jsonVal.length) {//表长度大于等于新数据
                            app.tableList.length = jsonVal.length;
                            for (let i in jsonVal) {
                                app.tableList[i].Department = jsonVal[i].Department;
                                app.tableList[i].Number = jsonVal[i].Number;
                                app.tableList[i].Zhang_WorkingHour = jsonVal[i].Zhang_WorkingHour;
                                app.tableList[i].Zhang_Pay = jsonVal[i].Zhang_Pay;
                                app.tableList[i].Total_Staff = jsonVal[i].Total_Staff;
                                app.tableList[i].Overtime_Total = jsonVal[i].Overtime_Total;
                                app.tableList[i].Pay_Total = jsonVal[i].Pay_Total;
                                app.tableList[i].Daily_Pay = jsonVal[i].Daily_Pay;
                            };
                        } else {//表长度小于新数据
                            let tableLength = app.tableList.length;
                            for (let i in jsonVal) {
                                if (i < tableLength) {
                                    app.tableList[i].Department = jsonVal[i].Department;
                                    app.tableList[i].Number = jsonVal[i].Number;
                                    app.tableList[i].Zhang_WorkingHour = jsonVal[i].Zhang_WorkingHour;
                                    app.tableList[i].Zhang_Pay = jsonVal[i].Zhang_Pay;
                                    app.tableList[i].Total_Staff = jsonVal[i].Total_Staff;
                                    app.tableList[i].Overtime_Total = jsonVal[i].Overtime_Total;
                                    app.tableList[i].Pay_Total = jsonVal[i].Pay_Total;
                                    app.tableList[i].Daily_Pay = jsonVal[i].Daily_Pay;
                                } else {
                                    app.tableList.push({
                                        Department: jsonVal[i].Department,
                                        Number: jsonVal[i].Number,
                                        Zhang_WorkingHour: jsonVal[i].Zhang_WorkingHour,
                                        Zhang_Pay: jsonVal[i].Zhang_Pay,
                                        Total_Staff: jsonVal[i].Total_Staff,
                                        Overtime_Total: jsonVal[i].Overtime_Total,
                                        Pay_Total: jsonVal[i].Pay_Total,
                                        Daily_Pay: jsonVal[i].Daily_Pay,
                                        Number2: "",
                                        Zhang_WorkingHour2: "",
                                        Zhang_Pay2: "",
                                        Total_Staff2: "",
                                        Overtime_Total2: "",
                                        Pay_Total2: "",
                                        Daily_Pay2: "",
                                    });
                                }
                            };
                        };
                    } else {
                        let newArray = jsonVal.concat();
                        for (let i in newArray) {
                            let thisDepartment = "";
                            for (let j in app.tableList) {
                                if (app.tableList[j].Department == newArray[i].Department) {
                                    app.tableList[j].Number = newArray[i].Number;
                                    app.tableList[j].Zhang_WorkingHour = newArray[i].Zhang_WorkingHour;
                                    app.tableList[j].Zhang_Pay = newArray[i].Zhang_Pay;
                                    app.tableList[j].Total_Staff = newArray[i].Total_Staff;
                                    app.tableList[j].Overtime_Total = newArray[i].Overtime_Total;
                                    app.tableList[j].Pay_Total = newArray[i].Pay_Total;
                                    app.tableList[j].Daily_Pay = newArray[i].Daily_Pay;
                                    //newArray.splice(i, 1);
                                    thisDepartment = newArray[i].Department;
                                };
                            };
                            if (thisDepartment == newArray[i].Department) {
                                delete newArray[i];
                            };
                        };
                        for (let i in newArray) {
                            app.tableList.push({
                                Department: newArray[i].Department,
                                Number: newArray[i].Number,
                                Zhang_WorkingHour: newArray[i].Zhang_WorkingHour,
                                Zhang_Pay: newArray[i].Zhang_Pay,
                                Total_Staff: newArray[i].Total_Staff,
                                Overtime_Total: newArray[i].Overtime_Total,
                                Pay_Total: newArray[i].Pay_Total,
                                Daily_Pay: newArray[i].Daily_Pay,
                                Number2: "",
                                Zhang_WorkingHour2: "",
                                Zhang_Pay2: "",
                                Total_Staff2: "",
                                Overtime_Total2: "",
                                Pay_Total2: "",
                                Daily_Pay2: "",
                            });
                        };
                    };
                };
            },
            rightDataCount: function (jsonVal) {//右表赋值
                if (jsonVal != "") {//判断是否有值
                    app.rightVal = jsonVal;
                    app.rightIsEmpty = jsonVal.length;
                    if (app.leftIsEmpty == 0) {//左边是否为空
                        if (app.tableList.length >= jsonVal.length) {//表长度大于等于新数据
                            app.tableList.length = jsonVal.length;
                            for (let i in jsonVal) {
                                app.tableList[i].Department = jsonVal[i].Department;
                                app.tableList[i].Number2 = jsonVal[i].Number;
                                app.tableList[i].Zhang_WorkingHour2 = jsonVal[i].Zhang_WorkingHour;
                                app.tableList[i].Zhang_Pay2 = jsonVal[i].Zhang_Pay;
                                app.tableList[i].Total_Staff2 = jsonVal[i].Total_Staff;
                                app.tableList[i].Overtime_Total2 = jsonVal[i].Overtime_Total;
                                app.tableList[i].Pay_Total2 = jsonVal[i].Pay_Total;
                                app.tableList[i].Daily_Pay2 = jsonVal[i].Daily_Pay;
                            };
                        } else {//表长度小于新数据
                            let tableLength = app.tableList.length;
                            for (let i in jsonVal) {
                                if (i < tableLength) {
                                    app.tableList[i].Department = jsonVal[i].Department;
                                    app.tableList[i].Number2 = jsonVal[i].Number;
                                    app.tableList[i].Zhang_WorkingHour2 = jsonVal[i].Zhang_WorkingHour;
                                    app.tableList[i].Zhang_Pay2 = jsonVal[i].Zhang_Pay;
                                    app.tableList[i].Total_Staff2 = jsonVal[i].Total_Staff;
                                    app.tableList[i].Overtime_Total2 = jsonVal[i].Overtime_Total;
                                    app.tableList[i].Pay_Total2 = jsonVal[i].Pay_Total;
                                    app.tableList[i].Daily_Pay2 = jsonVal[i].Daily_Pay;
                                } else {
                                    app.tableList.push({
                                        Department: jsonVal[i].Department,
                                        Number: "",
                                        Zhang_WorkingHour: "",
                                        Zhang_Pay: "",
                                        Total_Staff: "",
                                        Overtime_Total: "",
                                        Pay_Total: "",
                                        Daily_Pay: "",
                                        Number2: jsonVal[i].Number,
                                        Zhang_WorkingHour2: jsonVal[i].Zhang_WorkingHour,
                                        Zhang_Pay2: jsonVal[i].Zhang_Pay,
                                        Total_Staff2: jsonVal[i].Total_Staff,
                                        Overtime_Total2: jsonVal[i].Overtime_Total,
                                        Pay_Total2: jsonVal[i].Pay_Total,
                                        Daily_Pay2: jsonVal[i].Daily_Pay,
                                    });
                                }
                            };
                        };
                    } else {
                        let newArray = jsonVal.concat();
                        for (let i in newArray) {
                            let thisDepartment = "";
                            for (let j in app.tableList) {
                                if (app.tableList[j].Department == newArray[i].Department) {
                                    app.tableList[j].Number2 = newArray[i].Number;
                                    app.tableList[j].Zhang_WorkingHour2 = newArray[i].Zhang_WorkingHour;
                                    app.tableList[j].Zhang_Pay2 = newArray[i].Zhang_Pay;
                                    app.tableList[j].Total_Staff2 = newArray[i].Total_Staff;
                                    app.tableList[j].Overtime_Total2 = newArray[i].Overtime_Total;
                                    app.tableList[j].Pay_Total2 = newArray[i].Pay_Total;
                                    app.tableList[j].Daily_Pay2 = newArray[i].Daily_Pay;
                                    //newArray.splice(i, 1);
                                    thisDepartment = newArray[i].Department;
                                };
                            };
                            if (thisDepartment == newArray[i].Department) {
                                delete newArray[i];
                            };
                        };
                        for (let i in newArray) {
                            app.tableList.push({
                                Department: newArray[i].Department,
                                Number: "",
                                Zhang_WorkingHour: "",
                                Zhang_Pay: "",
                                Total_Staff: "",
                                Overtime_Total: "",
                                Pay_Total: "",
                                Daily_Pay: "",
                                Number2: newArray[i].Number,
                                Zhang_WorkingHour2: newArray[i].Zhang_WorkingHour,
                                Zhang_Pay2: newArray[i].Zhang_Pay,
                                Total_Staff2: newArray[i].Total_Staff,
                                Overtime_Total2: newArray[i].Overtime_Total,
                                Pay_Total2: newArray[i].Pay_Total,
                                Daily_Pay2: newArray[i].Daily_Pay,
                            });
                        };
                    };
                };
            },
            emptyData: function (v) {//清空表
                for (let i in app.tableList) {
                    app.tableList[i].Department = "";
                    app.tableList[i].Number = "";
                    app.tableList[i].Zhang_WorkingHour = "";
                    app.tableList[i].Zhang_Pay = "";
                    app.tableList[i].Total_Staff = "";
                    app.tableList[i].Overtime_Total = "";
                    app.tableList[i].Pay_Total = "";
                    app.tableList[i].Daily_Pay = "";
                    app.tableList[i].Number2 = "";
                    app.tableList[i].Zhang_WorkingHour2 = "";
                    app.tableList[i].Zhang_Pay2 = "";
                    app.tableList[i].Total_Staff2 = "";
                    app.tableList[i].Overtime_Total2 = "";
                    app.tableList[i].Pay_Total2 = "";
                    app.tableList[i].Daily_Pay2 = "";
                };
                if (v == 'left') {//设置左表为空，若右表有值，则重新更新右表
                    app.leftVal = [];
                    if (app.rightIsEmpty != 0) {
                        app.tableList.length = app.rightVal.length;
                        for (let i in app.rightVal) {
                            app.tableList[i].Department = app.rightVal[i].Department;
                            app.tableList[i].Number2 = app.rightVal[i].Number;
                            app.tableList[i].Zhang_WorkingHour2 = app.rightVal[i].Zhang_WorkingHour;
                            app.tableList[i].Zhang_Pay2 = app.rightVal[i].Zhang_Pay;
                            app.tableList[i].Total_Staff2 = app.rightVal[i].Total_Staff;
                            app.tableList[i].Overtime_Total2 = app.rightVal[i].Overtime_Total;
                            app.tableList[i].Pay_Total2 = app.rightVal[i].Pay_Total;
                            app.tableList[i].Daily_Pay2 = app.rightVal[i].Daily_Pay;
                        };
                    };
                    app.leftIsEmpty = 0;
                } else if (v == 'right') {//设置右表为空，若左表有值，则重新更新左表
                    app.rightVal = [];
                    if (app.leftIsEmpty != 0) {
                        app.tableList.length = app.leftVal.length;
                        for (let i in app.leftVal) {
                            app.tableList[i].Department = app.leftVal[i].Department;
                            app.tableList[i].Number = app.leftVal[i].Number;
                            app.tableList[i].Zhang_WorkingHour = app.leftVal[i].Zhang_WorkingHour;
                            app.tableList[i].Zhang_Pay = app.leftVal[i].Zhang_Pay;
                            app.tableList[i].Total_Staff = app.leftVal[i].Total_Staff;
                            app.tableList[i].Overtime_Total = app.leftVal[i].Overtime_Total;
                            app.tableList[i].Pay_Total = app.leftVal[i].Pay_Total;
                            app.tableList[i].Daily_Pay = app.leftVal[i].Daily_Pay;
                        };

                    };
                    app.rightIsEmpty = 0;
                };
            },
            getDefualtInfo: function () {
                axios.post('/Personnel_of_Contrast/DefaualInfo').then(res=> {
                    var defualtTimeStrRigth = res.data.countdown_Second.Time
                    var firstStep = defualtTimeStrRigth.split(",");
                    var secondStep = [];
                    for (let i = 0; i < firstStep.length; i++) {
                        secondStep.push(firstStep[i].split(':'))
                    }
                    this.leftYear = secondStep[0][1]
                    this.leftMonth = secondStep[1][1]
                    this.leftWeek = secondStep[2][1]

                    var defualtTimeStrLeft = res.data.last.Time;
                    var firstSteps = defualtTimeStrLeft.split(",");
                    var secondSteps = [];
                    for (let i = 0; i < firstSteps.length; i++) {
                        secondSteps.push(firstSteps[i].split(':'))
                    }
                    this.rigthYear = secondSteps[0][1]
                    this.rigthMonth = secondSteps[1][1]
                    this.rigthWeek = secondSteps[2][1]
                }).catch(eer=>{
                    alert("获取最新数据失败！")
                })
            }
        },
        watch: {
            //监听左右年月周
            leftYear: function () {
                this.$options.methods.gotoPost(this.leftYear, this.leftMonth, this.leftWeek, 'left');
            },
            leftMonth: function () {
                this.$options.methods.gotoPost(this.leftYear, this.leftMonth, this.leftWeek, 'left');
            },
            leftWeek: function () {
                this.$options.methods.gotoPost(this.leftYear, this.leftMonth, this.leftWeek, 'left');
            },
            rigthYear: function () {
                this.$options.methods.gotoPost(this.rigthYear, this.rigthMonth, this.rigthWeek, 'right');
            },
            rigthMonth: function () {
                this.$options.methods.gotoPost(this.rigthYear, this.rigthMonth, this.rigthWeek, 'right');
            },
            rigthWeek: function () {
               // console.log(66666666666666)      
                this.$options.methods.gotoPost(this.rigthYear, this.rigthMonth, this.rigthWeek, 'right');
            },
            //rightIsEmpty() {
            //    console.log(123456)
            //    if (this.rightIsEmpty == 0) {
            //        console.log(123456)
            //        this.rigthWeek-1
            //        this.$options.methods.gotoPost(this.rigthYear, this.rigthMonth, this.rigthWeek, 'right');
            //    }
            //}
        },
        computed: {
            //左表总计，根据是否有值来返回值
            numberleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Number == "" ? 0 : this.tableList[i].Number;
                    };
                    return total;
                }
            },
            Zhang_WorkingHourleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Zhang_WorkingHour == "" ? 0 : this.tableList[i].Zhang_WorkingHour;
                    };
                    return total;
                }
            },
            Zhang_Payleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Zhang_Pay == "" ? 0 : this.tableList[i].Zhang_Pay;
                    };
                    return parseFloat(total).toFixed(1);
                }
            },
            Total_Staffleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Total_Staff == "" ? 0 : this.tableList[i].Total_Staff;
                    };
                    return parseFloat(total).toFixed(1);
                }
            },
            Overtime_Totalleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Overtime_Total == "" ? 0 : this.tableList[i].Overtime_Total;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
            Pay_Totalleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Pay_Total == "" ? 0 : this.tableList[i].Pay_Total;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
            Daily_Payleft() {
                if (this.leftIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Daily_Pay == "" ? 0 : this.tableList[i].Daily_Pay;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
            //右表总计
            numberR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Number2 == "" ? 0 : this.tableList[i].Number2;
                    };
                    return total;
                }
            },
            Zhang_WorkingHourR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Zhang_WorkingHour2 == "" ? 0 : this.tableList[i].Zhang_WorkingHour2;
                    };
                    return total;
                }
            },
            Zhang_PayR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Zhang_Pay2 == "" ? 0 : this.tableList[i].Zhang_Pay2;
                    };
                    return parseFloat(total).toFixed(1);
                }
            },
            Total_StaffR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Total_Staff2 == "" ? 0 : this.tableList[i].Total_Staff2;
                    };
                    return parseFloat(total).toFixed(1);
                }
            },
            Overtime_TotalR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Overtime_Total2 == "" ? 0 : this.tableList[i].Overtime_Total2;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
            Pay_TotalR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Pay_Total2 == "" ? 0 : this.tableList[i].Pay_Total2;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
            Daily_PayR() {
                if (this.rightIsEmpty == 0) {
                    return;
                } else {
                    let total = 0;
                    for (let i in this.tableList) {
                        total += this.tableList[i].Daily_Pay2 == "" ? 0 : this.tableList[i].Daily_Pay2;
                    };
                    return parseFloat(total).toFixed(2);
                }
            },
        }
    });
    function computedWeek(y, m, d) {                //返回当前日期在本月的第几周
        let one = y + "-" + m + "-" + "1";
        let onetime = new Date(one);
        let firstweekdaycount = 7 - onetime.getDay();
        if (d - firstweekdaycount <= 0) {
            return 1;
        } else {
            let cc = Math.ceil((d - firstweekdaycount) / 7) + 1;
            return cc;
        };
    };
</script>