
@{
    ViewBag.Title = "SPC_OutStockComifirm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<link href="~/Content/styleFile/packaging/stockStyle.css" rel="stylesheet" />
<style>
    .nuostyle .el-input__inner {
        border: 1px solid #f06363;
    }
</style>

<div id="app">
    <div class="text-center">
        <h3>备品配件出库确认</h3>
    </div>
    <div class="inputframe">
        <span>班组：</span>
        <group-select></group-select>
    </div>
    <div class="inputframe">
        <span>订单号：</span>
        <select-input v-model.trim="selectVal"
                      v-bind:disabled="barcodeList.length>0"
                      :options="selectOptions"
                      :isfocus="true"
                      :ismultiple="false"
                      size="medium">
        </select-input>
    </div>
    <div class="inputframe">
        <span>条码号：</span>
        <el-input placeholder="输入条码后回车"
                  v-model.trim="barcode"
                  ref="inputRef"
                  style="text-align:right;display:inline-block;"
                  v-on:keyup.enter.native="barScan($event)"
                  size="medium"
                  autofocus
                  clearable>
        </el-input>
    </div>

    <div class="inputframe" v-show="barcodeselect==true">
        <span>物料号：</span>
        <el-input placeholder="输入物料条码后回车"
                  v-model.trim="Material"
                  ref="inputRef"
                  style="text-align:right;display:inline-block;"
                  v-on:keyup.enter.native="barScan($event)"
                  size="medium"
                  autofocus
                  clearable>
        </el-input>
    </div>

    <div class="inputframe">
        <el-switch v-model="barcodeselect"
                   active-text="物料条码"
                   :disabled="barcodeList.length!=0"
                   inactive-text="外箱条码">
        </el-switch>
    </div>
    <div class="inputframe">
        <span>物流方式：</span>
        <select-input v-model.trim="logistics"
                      :options="logisticsOptions"
                      :isfocus="true"
                      :ismultiple="false"
                      size="medium">
        </select-input>
    </div>
    <div class="inputframe" v-show="logistics!=''">
        <span>物流号：</span>
        <el-input placeholder="请输入物流号"
                  v-model.trim="logisticsNum"
                  style="text-align:right;display:inline-block;"
                  size="medium"
                  clearable>
        </el-input>
    </div>
    <div class="inputframe">
        <el-switch v-model="embezzleShow"
                   active-text="挪用给客户订单直接出库"
                   inactive-text="">
        </el-switch>
        <div class="inputframe" v-show="embezzleShow">
            <span>出库订单：</span>
            <select-input v-model.trim="toOrderNum" :options="selectOptions" :isfocus="true" :ismultiple="false" size="medium" :class="nuomsg==''?'':'nuostyle'"></select-input>
            <span v-show="toOrderNum.length>10" class="zhushi" style="color:#f06363">{{nuomsg}}</span>
        </div>
        <div class="inputframe" v-show="embezzleShow">
            <span>批次：</span>
            <el-input placeholder="请输入批次"
                      v-model.trim="Batch"
                      style="text-align:right;display:inline-block;"
                      size="medium"
                      clearable>
            </el-input>
        </div>
        <div class="inputframe" v-show="embezzleShow">
            <span>屏序：</span>
            <el-input placeholder="请输入屏序"
                      v-model.trim="screenNum"
                      style="text-align:right;display:inline-block;"
                      size="medium"
                      clearable>
            </el-input>
        </div>
        <br />
        <el-switch v-model="printShow"
                   v-show="embezzleShow"
                   active-text="打印"
                   inactive-text="">
        </el-switch>
        <el-divider direction="vertical" v-if="embezzleShow"></el-divider>
        <el-switch v-model="imgShow"
                   v-show="embezzleShow"
                   active-text="使用logo"
                   inactive-text="">
        </el-switch>
        <el-button @@click="confirmCheck" size="mini" round @*v-bind:disabled="isok"*@>确认</el-button>
    </div>
    <div class="inputframe" v-show="printShow">
        <span>选打印机：</span>
        <el-select v-model="printSelect" clearable placeholder="选择打印机" size="medium">
            <el-option v-for="item in printOptions"
                       :key="item.value"
                       :label="item.label"
                       :value="item.value">
            </el-option>
        </el-select>
    </div>
    <div class="inputframe">
        <el-table :data="barcodeList"
                  max-height="280"
                  border>
            <el-table-column prop="barcode"
                             label="条码清单"
                             width="160">
            </el-table-column>
            <el-table-column prop="warehouseNum"
                             label="库位号">
            </el-table-column>
            <el-table-column label=""
                             width="40">
                <template slot-scope="scope">
                    <el-button @@click.native.prevent="deleteRow(scope.$index,scope.row ,barcodeList)"
                               type="text"
                               size="mini"
                               style="margin:0;padding:0;width:100%;">
                        <i class="el-icon-error"></i>
                    </el-button>
                </template>
            </el-table-column>
        </el-table>
        <span v-if="barcodeList.length!=0">条码数量：{{barcodeList.length}}</span>
    </div>
</div>
@RenderPage("~/Views/Shared/_SelectInput.cshtml")
@RenderPage("~/Views/Users/_groupSelect.cshtml")
<script>
    var app = new Vue({
        el: '#app',
        data: {
            selectVal: '',
            barcodeList: [],
            selectOptions: [],
            barcode: '',//条码号
            Material:'',//物料号
            barcodeselect: false,//外箱或物料条码
            logistics: '',//物流
            logisticsOptions: [{ value: "陆运" }, { value: "海运" }, { value: "空运" }],
            logisticsNum: '',//物料号
            embezzleShow: false,
            printShow: false,
            imgShow: true,
            printSelect: '',//打印机
            printOptions: printIpAddress,
            toOrderNum: '',//挪用到的订单号
            nuomsg: '',
            Batch: '',//批次
            screenNum:'',//屏序
        },
        created: function () {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.selectOptions = res.data;
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
        },
        mounted: function () {
            let localOrder = localStorage.getItem('Order');
            if (localOrder != null) {
                this.selectVal = localOrder;

            };
        },
        methods: {
            selectHandle: function (val) {
                if (val != "") {
                    localStorage.setItem('Order', val);
                    this.$refs.inputRef.focus();
                    this.isnuo();
                };
            },
            //扫码
            barScan: function (event) {
                this.loading = true;
                let thisdata = event.target.value, listcheck = this.barcodeList;                
                if (thisdata != "") {
                    if (this.barcodeselect == false) {
                        //检查重复
                        for (let i in listcheck) {
                            if (listcheck[i].barcode == thisdata) {
                                this.$message({
                                    showClose: true,
                                    message: '已有重复条码！',
                                    type: 'warning'
                                });
                                this.loading = false;
                                return;
                            };
                        };
                        if (this.selectVal != '') {
                            axios.post('/Packagings/SPC_Checkbarcode', {
                                ordernum: this.selectVal,
                                outsidebarcode: thisdata,
                                isInside: this.barcodeselect,
                                material: null
                            }).then(res => {
                                if (res.data.message == "") {
                                    listcheck.push(res.data);
                                    this.loading = false;
                                } else {
                                    this.$message({
                                        showClose: true,
                                        message: res.data.message,
                                        type: 'warning'
                                    });
                                    this.loading = false;
                                };
                            }).catch(err => {
                                console.warn("post失败");
                                this.loading = false;
                            });
                        } else {
                            this.$message({
                                showClose: true,
                                type: 'warning',
                                message: "请选择订单号！"
                            });
                        }
                    } else {
                        if (this.selectVal != '' && this.barcode != '' && this.Material != '') {
                            axios.post('/Packagings/SPC_Checkbarcode', {
                                ordernum: this.selectVal,
                                outsidebarcode: this.barcode,
                                isInside: this.barcodeselect,
                                 material: this.Material
                            }).then(res => {
                                console.log(res.data)
                                if (res.data.message == "") {
                                    listcheck.push(res.data);
                                    this.loading = false;
                                } else {
                                    this.$message({
                                        showClose: true,
                                        message: res.data.message,
                                        type: 'warning'
                                    });
                                    this.loading = false;
                                };
                            }).catch(err => {
                                console.warn("post失败");
                                this.loading = false;
                            });
                        } else {
                            this.$message({
                                showClose: true,
                                type: 'warning',
                                message: "请输入订单号、条码号、物料号！"
                            });
                        }   
                    }                                                                     
                } else {
                    this.$message({
                        showClose: true,
                        type: 'warning',
                        message: "请输入条码！"
                    });
                    this.loading = false;
                };
                this.barcode = "";
            },
            //确认
            confirmCheck: function () {
                if ($("#banzuGroup").val() == "") {
                    this.$message.warning("请选择班组");
                    this.loading = false;
                    return;
                };
                let thisList = this.barcodeList, postList = [];
                for (let i in thisList) {
                    postList.push(thisList[i].barcode)
                };
              
                axios.post('/Packagings/WarehouseOut', {
                    barcode: postList,
                    warehousordernum: this.toOrderNum,
                    isInside: this.isWei,
                    isDelete: this.nuoShow,
                    WarehouseOutDocuments: this.wuliuNum,
                    Transportation: this.wuliu,
                    screenNum: this.screenNum,
                    batchNum: this.batchNum,
                    isLogo: this.imgShow,
                    Department1: $("#banzuDepartment").val(),
                    Group: $("#banzuGroup").val()
                }).then(respond => {
                    this.message = respond.data.mes;
                    let postList = respond.data.newOutherBarocode;
                    if (postList.length > 0 && this.printShow) {
                        this.loading = true;
                        let imgNum = 0;
                        for (let i in postList) {
                            axios.post('/Packagings/OutsideBoxLablePrintAgain', {
                                outsidebarcode: postList[i],
                                pagecount: this.pageCount,
                                concentration: this.nongDu,
                                ip: this.printSelect,//ip地址
                                port: 9101,//端口
                            }).then(res => {
                                if (res.data == '打印成功！') {
                                    this.$message({
                                        showClose: true,
                                        message: res.data,
                                        type: 'success'
                                    });
                                } else {
                                    this.$message({
                                        showClose: true,
                                        message: res.data,
                                        type: 'error'
                                    });
                                };
                                imgNum++;
                                if (imgNum == postList.length) {
                                    this.$message({
                                        showClose: true,
                                        message: '出库完成！',
                                        type: 'success'
                                    });
                                    this.loading = false;
                                };
                            }).catch(err => {
                                this.$message({
                                    showClose: true,
                                    message: '打印出错！',
                                    type: 'error'
                                });
                                imgNum++;
                                if (imgNum == postList.length) {
                                    this.loading = false;
                                };
                            });
                        };
                    } else {
                        this.$message({
                            showClose: true,
                            message: '出库完成！',
                            type: 'success'
                        });
                    };
                    this.centerDialogVisible = true;
                }).catch(err => {
                    console.warn("post失败")
                });
            },
            //删除行
            deleteRow: function (index, row, data) {
                data.splice(index, 1);
            },
        }
    })

</script>
