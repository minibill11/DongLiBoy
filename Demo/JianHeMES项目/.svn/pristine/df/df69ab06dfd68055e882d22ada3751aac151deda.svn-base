@{
    ViewBag.Title = "SMT锡膏看板";
}
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<link href="~/Content/styleFile/solder/solderStyle.css?v=" +Math.random() rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    .select-container {
        text-align: center;
        margin: 15px auto;
    }

    .el-input {
        width: 165px;
    }
</style>
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            <div v-show="screenSize>=768">
                <h2 class="text-center">@ViewBag.Title</h2>
                <a href="/SMT_Sulderpaster/board"><el-button size="small">看板</el-button></a>
                <a href="/SMT_Sulderpaster/AddWarehouse_Material"><el-button size="small">录入物料信息</el-button></a>
                <a href="/SMT_Sulderpaster/AddWareHouseBaseInfo"><el-button size="small">锡膏入库</el-button></a>
                <a href="/SMT_Sulderpaster/AddWarehouseFreezer"><el-button size="small">锡膏入冰柜</el-button></a>
                <a href="/SMT_Sulderpaster/outWarehouseFreezer"><el-button size="small">锡膏出库</el-button></a>
                <a href="/SMT_Sulderpaster/AddSMTFreezer"><el-button size="small">入SMT冰柜</el-button></a>
                <a href="/SMT_Sulderpaster/Rewarming"><el-button size="small">回温</el-button></a>
                <a href="/SMT_Sulderpaster/RewarmRecord"><el-button size="small">回温记录</el-button></a>
                <a href="/SMT_Sulderpaster/Stir"><el-button size="small">搅拌</el-button></a>
                <a href="/SMT_Sulderpaster/Use"><el-button size="small">使用</el-button></a>
                <a href="/SMT_Sulderpaster/recovery"><el-button size="small">回收</el-button></a>
            </div>
            <div v-show="screenSize<768">
                <h3>@ViewBag.Title</h3>
                <el-dropdown placement="bottom">
                    <el-button size="medium ">
                        更多菜单<i class="el-icon-arrow-down el-icon--right"></i>
                    </el-button>
                    <el-dropdown-menu slot="dropdown">
                        <a href="/SMT_Sulderpaster/board"><el-dropdown-item>看板</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/AddWarehouse_Material"><el-dropdown-item>录入物料信息</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/AddWareHouseBaseInfo"><el-dropdown-item>锡膏入库</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/AddWarehouseFreezer"><el-dropdown-item>锡膏入冰柜</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/outWarehouseFreezer"><el-dropdown-item>锡膏出库</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/AddSMTFreezer"><el-dropdown-item>入SMT冰柜</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/Rewarming"><el-dropdown-item>回温</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/RewarmRecord"><el-dropdown-item>回温记录</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/Stir"><el-dropdown-item>搅拌</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/Use"><el-dropdown-item>使用</el-dropdown-item></a>
                        <a href="/SMT_Sulderpaster/recovery"><el-dropdown-item>回收</el-dropdown-item></a>
                    </el-dropdown-menu>
                </el-dropdown>
            </div>
        </el-header>
        <el-main v-loading="loading">
            <el-row>
            </el-row>
        </el-main>
    </el-container>
    <div class="select-container">
        <el-select size="small" v-model="barnum" clearable placeholder="请选择条码">
            <el-option v-for="item in barnumdata"
                       v-bind:key="item.value"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="times" clearable placeholder="请选择批次">
            <el-option v-for="item in timesdata"
                       v-bind:key="item.value"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="supplier" clearable placeholder="请选择供应商">
            <el-option v-for="item in supplierdata"
                       v-bind:key="item.value"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="types" clearable placeholder="请选择物料型号">
            <el-option v-for="item in typesdata"
                       v-bind:key="item.value"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-select size="small" v-model="order" clearable placeholder="请选择订单号">
            <el-option v-for="item in orderData"
                       v-bind:key="item.value"
                       v-bind:label="item.value"
                       v-bind:value="item.value">
            </el-option>
        </el-select>
        <el-button type="primary" size="small" v-on:click="getInfos">查找</el-button>
    </div>
    <el-table v-bind:data="tableDatas"
              v-bind:span-method="objectSpanMethod"
              style="width: 100%">
        <el-table-column prop="barcode"
                         label="条码号"
                         width="123">
        </el-table-column>
        <el-table-column prop="freezetime"
                         label="入SMT时间"
                         width="165">
        </el-table-column>
        <el-table-column prop="warmtime"
                         label="开始回温时间"
                         width="165">
        </el-table-column>
        <el-table-column prop="stirtime"
                         label="开始搅拌时间"
                         width="165">
        </el-table-column>
        <el-table-column label="使用记录">
            <el-table-column prop="ordernum"
                             label="订单号"
                             width="125">
            </el-table-column>
            <el-table-column prop="linnum"
                             label="产线"
                             width="60">
            </el-table-column>
            <el-table-column prop="employtime"
                             label="时间段"
                             width="220">
            </el-table-column>
        </el-table-column>
        <el-table-column prop="recycletime"
                         label="回收时间"
                         width="150">
        </el-table-column>
    </el-table>
</div>

<script>

    // 获取按照当前表格数据而得到的合并信息
    function getSpan(arrs) {
        //
        let contactDot = 0;
        arrs.forEach((item, index) => {
            if (index === 0) {
                app.spanArr.push(1)
            } else {
                if (item.barcode.trim() === arrs[index - 1].barcode.trim()) {
                    app.spanArr[contactDot] += 1;
                    app.spanArr.push(0)
                } else {
                    contactDot = index
                    app.spanArr.push(1)
                }
            }
        })
    }
    var app = new Vue({
        el: "#app",
        data: {
            loading: false,
            screenSize: document.body.clientWidth,
            tableDatas:[],
            barnum: null,
            barnumdata:[],
            times: null,
            timesdata:[],
            supplier: null,
            supplierdata:[],
            types: null,
            typesdata:[],
            order:null,
            orderData:[],
            spanArr:[]
        },
        created: function () {
            window.onresize = function () {
                app.screenSize = document.body.clientWidth;
            };
        },
        mounted: function () {
            this.getdefultinfos();

            this.getbarnums();
            this.gettimesdata();
            this.getsupplier();
            this.gettypes();
            this.getorder();
        },
        methods: {
            // 获取条码号
            getbarnums(){
                axios.get("/SMT_Sulderpaster/GetBoardBarcodeList").then(res=>{
                    console.log(res.data)
                    console.log("获取条码号")
                    this.barnumdata = res.data
                }).catch(err=>{
                    this.$message({
                        message: '获取条码号失败！',
                        type:'warning'
                    })
                })
            },
            // 获取批次
            gettimesdata(){
                axios.get("/SMT_Sulderpaster/GetBoardBatchList").then(res=>{
                    console.log(res.data)
                    console.log("获取批次")
                    this.timesdata = res.data
                }).catch(err=>{
                    this.$message({
                        message: '获取批次失败！',
                        type:'warning'
                    })
                })
            },
            // 获取供应商
            getsupplier(){
                axios.get("/SMT_Sulderpaster/GetBoardSupplierList").then(res=>{
                    console.log(res.data)
                    console.log("获取供应商")
                    this.supplierdata = res.data
                }).catch(err=>{
                    this.$message({
                        message: '获取供应商失败！',
                        type:'warning'
                    })
                })
            },
            // 获取物料型号
            gettypes(){
                axios.get("/SMT_Sulderpaster/GetBoardReceivingNumList").then(res=>{
                    console.log(res.data)
                    console.log("获取物料型号")
                    this.typesdata = res.data
                }).catch(err=>{
                    this.$message({
                        message: '获取物料型号失败！',
                        type:'warning'
                    })
                })
            },
            // 获取订单号
            getorder(){
                axios.get("/SMT_Sulderpaster/GetBoardOrdernumList").then(res=>{
                    console.log(res.data)
                    console.log("获取订单号")
                    this.orderData = res.data
                }).catch(err=>{
                    this.$message({
                        message: '获取订单号失败！',
                        type:'warning'
                    })
                })
            },
            getInfos() {
                if(this.barnum != null ||this.times != null ||this.supplier != null ||this.types != null ||this.order != null){
                    axios.post("/SMT_Sulderpaster/Boadr",{barcode:this.barnum,bitch:this.times,ReceivingNum:this.types,Supplier:this.supplier,ordernum:this.order}).then(res=>{
                        console.log(res.data)
                        let arrs = []   // 获取每行完整数据
                        for (let item in res.data) {
                            for (let items in res.data[item]) {
                                arrs.push(res.data[item][items])
                            }
                        }
                        arrs.forEach(item=> {
                           // item.freezetime = GMTToStr(item.freezetime);
                            //item.stirtime = GMTToStr(item.stirtime);
                            //item.warmtime = GMTToStr(item.warmtime);
                            //item.recycletime = GMTToStr(item.recycletime);
                            //item.freezetime = GMTToStr(item.freezetime)
                        })
                        this.tableDatas = arrs;

                    }).catch(err=>{
                        this.$message({
                            message: '连接服务器失败！',
                            type:'warning'
                        })
                    })
                }else{
                    this.$message({
                        message: '请选择查找信息！',
                        type:'warning'
                    })

                }
            },
            getdefultinfos() {
                axios.post("/SMT_Sulderpaster/Boadr").then(res=> {
                    console.log(res.data)
                    let arrs = []   // 获取每行完整数据
                    for (let item in res.data) {
                        for (let items in res.data[item]) {
                            arrs.push(res.data[item][items])
                        }
                    }
                    arrs.forEach(item=> {
                       // item.freezetime = GMTToStr(item.freezetime);
                        //item.stirtime = GMTToStr(item.stirtime);
                        //item.warmtime = GMTToStr(item.warmtime);
                        //item.recycletime = GMTToStr(item.recycletime);
                        //item.freezetime = GMTToStr(item.freezetime)
                    })
                    this.tableDatas = arrs;
                }).catch(err=> {

                })
            },
            objectSpanMethod({row,column,rowIndex,columnIndex}) {
                //console.log(this.spanArr)
                if (columnIndex === 0) {
                    if (app.spanArr[rowIndex]) { // [3,0,0,2,0,3,0,0]
                        return {
                            rowspan: app.spanArr[rowIndex],
                            colspan: 1
                        }
                    } else {
                        return {
                            rowspan: 0,
                            colspan: 0
                        }
                    }
                }
            },
        },
        watch: {
            tableDatas(){

                if(this.tableDatas.length>0){
                    this.spanArr = [];
                    getSpan(this.tableDatas)
                }
            }
        },
    });

   function GMTToStr(time) {
       if (time == '--') {
           return time
       } else {
           let date = new Date(time)
           //console.log(date);
           let Str = date.getFullYear() + '-' +
               (date.getMonth() + 1) + '-' +
               date.getDate() + ' ' +
               date.getHours() + ':' +
               date.getMinutes() + ':' +
               date.getSeconds()
           return Str
       }
    }
</script>