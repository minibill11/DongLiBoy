@model JianHeMES.Models.FinalQC

@{
    ViewBag.Title = "FinalQC_F";
}
<style>
    #AbnormalTable .table > tbody > tr:hover {
        background-color: rgba(219, 70, 70, 0.15);
    }

    #AbnormalTable .table > tbody > tr > th, #AbnormalTable .table > tbody > tr > td {
        padding: 5px;
        line-height: 1.5;
    }

    #AbnormalTable .table {
        margin-bottom: 5px;
    }

    #AbnormalTable .panel-title {
        text-align: center;
    }

    #AbnormalTable label {
        font-weight: normal;
    }

    .abnormalFrame {
        width: 300px;
        height: 200px;
        border: 1px solid #000000;
        overflow: auto;
    }

    .abnormalCount {
        display: inline;
        margin: 5px;
        padding: 3px;
        width: 33px;
        height: 20px;
    }
</style>
<h2 class="hidden-xs">@ViewBag.Title</h2>
<h4 class="text-center visible-xs">完成FQC</h4>

<div id="app" class="form-horizontal">
    <div class="form-group" style="border-top:1px solid #808080;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.FQCPrincipal)
            @Html.HiddenFor(model => model.Department1)
            @Html.HiddenFor(model => model.Group)
            <div class="col-md-4">
                <hr class="hidden-xs" />
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BarCodesNum, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BarCodesNum, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.BarCodesNum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">挪用条码</label>
                    <div class="col-md-8">
                        <input readonly="readonly" type="text" value="@ViewBag.nuoBarcode" class="form-control text-box single-line">
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FQCCheckBT, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FQCCheckBT, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.FQCCheckBT, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4" for="Normal">正常</label>
                    <div class="col-md-8">
                        <input class="check-box" data-val="true" data-val-required="正常 字段是必需的。" id="Normal" @*name="Normal"*@ type="checkbox" value="true">
                    </div>
                </div>

                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.RepetitionFQCCheck, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RepetitionFQCCheck, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RepetitionFQCCheck, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.RepetitionFQCCheckCause, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RepetitionFQCCheckCause, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RepetitionFQCCheckCause, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Remark, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group DescriptionDetial" style="display:none">
                    <div class="form-group hidden-xs">
                        @Html.LabelFor(model => model.FinalQC_FQCCheckAbnormal, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FinalQC_FQCCheckAbnormal, new { htmlAttributes = new { @class = "form-control", @style = "display:none" } })
                            <div class="abnormalFrame">
                                <ol>
                                    <li v-for="abnormal in abnormalarea">
                                        {{abnormal}}
                                    </li>
                                </ol>
                            </div>
                            @Html.ValidationMessageFor(model => model.FinalQC_FQCCheckAbnormal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group visible-xs">
                        @Html.LabelFor(model => model.FinalQC_FQCCheckAbnormal, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div>
                                <ol>
                                    <li v-for="abnormal in abnormalarea">
                                        {{abnormal}}
                                    </li>
                                </ol>
                            </div>
                            @Html.ValidationMessageFor(model => model.FinalQC_FQCCheckAbnormal, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" id="okFQC" value="完成FQC" class="btn btn-default" />
                    </div>
                </div>
                <div class="hidden-xs">
                    @Html.ActionLink("返回", "FinalQC_B")
                </div>
            </div>
        }
        <div id="AbnormalTable" class="col-md-offset-1 col-md-7 DescriptionDetial" style="display:none">
            <br class="hidden-xs" /><br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h6 class="panel-title">异常列表</h6>
                </div>
                <div class="panel-body">
                    <div class="col-md-6">
                        <div class="visible-xs visible-xs-inline"><button class="btn btn-default addAbnormal">添加异常信息</button></div><hr class="visible-xs" />
                        <table class="table abnormalX">
                            <tr>
                                <td>
                                    <label for="1">撞灯（</label><input id="1" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="1">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="2">瞎灯（</label><input id="2" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="2">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="3">常亮灯（</label><input id="3" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="3">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="4">灯暗（</label><input id="4" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="4">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="5">灯闪（</label><input id="5" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="5">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="6">高亮（</label><input id="6" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="6">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="7">扫描同亮（</label><input id="7" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="7">）颗</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="8">瞎条（</label><input id="8" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="8">）条</label>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <table class="table abnormalX">
                            <tr>
                                <td>
                                    <label for="9">常亮条（</label><input id="9" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="9">）条</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="10">暗条（</label><input id="10" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="10">）条</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="11">扫描同亮（</label><input id="11" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="11">）条</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="12">瞎块（</label><input id="12" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="12">）IC为单位</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="13">瞎块（</label><input id="13" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="13">）模块</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="14">常亮块（</label><input id="14" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="14">）块</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="15">不亮（</label><input id="15" class="form-control abnormalCount" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /><label for="15">）箱</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="16">PPM（</label><input id="16" class="form-control abnormalCount" style="width:50px;" /><label for="16">）</label>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <label for="17">其他异常（</label><input id="17" class="form-control abnormalCount" style="width:100px;height:30px" /><label for="17">）</label>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="hidden-xs"><button class="form-control btn btn-default addAbnormal">添加异常信息</button></div>
                </div>
            </div>
            <div class="visible-xs">
                @Html.ActionLink("返回", "FinalQC_B")
            </div>
        </div>
    </div>
    @*//防位移*@
    <div class="form-group"><div class="col-md-12"></div></div>
</div>

<script type="text/javascript">
    var app = new Vue({
        el: "#app",
        data: {
            abnormalareab: ["撞灯（", "瞎灯（", "常亮灯（", "灯暗（", "灯闪（", "高亮（", "扫描同亮（", "瞎条（", "常亮条（", "暗条（", "扫描同亮（", "瞎块（", "瞎块（", "常亮块（", "不亮（", "PPM（", "其他异常（"],
            abnormalareaf: ["）颗", "）颗", "）颗", "）颗", "）颗", "）颗", "）颗", "）条", "）条", "）条", "）条", "）IC为单位", "）模块", "）块", "）箱", "）", "）"],
            abnormalarea: [],
            oldabnormal: ''
        },
        methods: {
        },
        watch: {
            abnormalarea: function (val) {
                $('#FinalQC_FQCCheckAbnormal').val(val)
            }
        },
        mounted: function () {
            $(".addAbnormal").click(function (e) {
                e.preventDefault();
                app.abnormalarea = [];
                $(".abnormalX tr td input").each(function (index, val) {
                    if ($(this).val() != "" && $(this).val() != 0) {
                        app.abnormalarea.push(app.abnormalareab[index] + $(this).val() + app.abnormalareaf[index])
                    }
                });
                if (app.abnormalarea == "") {
                    $("#okFQC").attr("disabled", true);
                } else {
                    $("#okFQC").removeAttr("disabled")
                }
            });
            $("#Normal").prop("checked", true);
            $("#FinalQC_FQCCheckAbnormal").val("正常");
            $("#Normal").click(function () {
                $(".DescriptionDetial").toggle();
                if ($(this).prop("checked") == true) {
                    $("#FinalQC_FQCCheckAbnormal").val("正常")
                    $("#okFQC").removeAttr("disabled")
                    app.abnormalarea = [];
                } else {
                    $("#FinalQC_FQCCheckAbnormal").val("");
                    $("#okFQC").attr("disabled", true);
                }
            });
        }
    });
</script>