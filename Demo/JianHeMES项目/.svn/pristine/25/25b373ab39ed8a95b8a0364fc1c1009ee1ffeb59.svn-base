
@{
    ViewBag.Title = "钣金生产数据录入";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<script src="~/Scripts/axios.min.js"></script>

<style>
    .inputbox {
        margin: 2px;
    }
</style>

<div id="app">
    <div class="text-center">
        <h3>生产数据录入</h3>
        <div class="query">
            <label>班&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;组:</label>
            <group-select style="width: 190px;"></group-select>
        </div>
        <div class="inputbox">
            <label>订&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;单&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;号:</label>
            <el-select v-model="ordernum"
                       clearable
                       allow-create filterable
                       placeholder="请选择订单号">
                <el-option v-for="item in ordernumOptions"
                           :key="item.value"
                           :value="item.value">
                </el-option>
            </el-select>
        </div>
        <div class="inputbox">
            <label>生&nbsp;&nbsp;产&nbsp;&nbsp;类&nbsp;&nbsp;型:</label>
            <el-select v-model="productionType"
                       clearable
                       allow-create filterable
                       placeholder="请选择生产类型">
                <el-option v-for="item in productionTypeOptions"
                           :key="item.value"
                           :value="item.value">
                </el-option>
            </el-select>
        </div>
        <div class="inputbox">
            <label>工&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;段:</label>
            <el-select v-model="section"
                       clearable
                       allow-create filterable
                       placeholder="请选择工段">
                <el-option v-for="item in sectionOptions"
                           :key="item.value"
                           :value="item.value">
                </el-option>
            </el-select>
        </div>
        <div class="inputbox">
            <label>订单正常数量:</label>
            <el-input v-model="normalQuantity" placeholder="请输入正常数量" style="width:191px" clearable>
            </el-input>
        </div>
        <div class="inputbox" v-if="section!='入库'">
            <label>订单异常数量:</label>
            <el-input v-model="abnormaQuantity" placeholder="请输入异常数量" style="width:191px" clearable>
            </el-input>
        </div>
        <div class="inputbox" v-if="section=='图纸编程'">
            <label>生产开始时间:</label>
            <el-date-picker v-model="startTime"
                            type="datetime"
                            placeholder="选择生产开始时间"
                            style="width:195px">
            </el-date-picker>
        </div>
        <div>
            <el-button v-on:click="saveProducionInfo" size="mini" type="primary">保存</el-button>
        </div>
    </div>
</div>
@RenderPage("~/Views/Users/_groupSelect.cshtml")
<script>
    var app = new Vue({
        el: '#app',
        data: {
            ordernum: '',
            ordernumOptions: [],
            section: '',
            sectionOptions: [{ value: '图纸编程' }, { value: '数冲冲压' }, { value: '敲料去毛刺沉孔倒角' }, { value: '折弯压铆' }, { value: '焊接打磨' }, { value: '外协喷涂' }, { value: '装配丝印' }, { value: '入库' }],
            startTime: '',//生产开始时间
            normalQuantity: '',//正常数
            abnormaQuantity: '',//异常数
            productionType: '',
            productionTypeOptions: [{ value: '散件' }, { value: '箱体' }],//生产类型
        },
        mounted() {
            axios.post('/Packagings/GetOrderList').then(res => {
                this.ordernumOptions = res.data;
                console.log(res.data)
            }).catch(err => {
                console.warn("获取选择列表失败")
            });
        },
        methods: {
            saveProducionInfo() {
                if ($("#banzuGroup").val() == "") {
                    this.$message.warning("请选择班组");
                    return;
                };
                if (this.section == '图纸编程') {
                    if (this.ordernum != '' && this.section != '' && this.startTime != '' && this.normalQuantity != '' && this.abnormaQuantity != '' && this.productionType != '') {
                        this.save()
                    } else {
                        this.$message({
                            message: "请填写完整在保存",
                            type: 'warning',
                            duration: 6000,
                        });
                    }
                }
                else if (this.section == '入库') {
                    if (this.ordernum != '' && this.section != '' && this.normalQuantity != '' && this.productionType != '') {
                        this.save()
                    } else {
                        this.$message({
                            message: "请填写完整在保存",
                            type: 'warning',
                            duration: 6000,
                        });
                    }
                } else {
                    if (this.ordernum != '' && this.section != '' && this.normalQuantity != '' && this.abnormaQuantity != '' && this.productionType != '') {
                        this.save()
                    } else {
                        this.$message({
                            message: "请填写完整在保存",
                            type: 'warning',
                            duration: 6000,
                        });
                    }
                }

            },
            save() {
                axios.post('/MetalPlate/CreatProductionInfo', {
                    ordernum: this.ordernum,//订单号
                    section: this.section,//工段
                    productionType: this.productionType,//生产类型
                    productionStartTime: this.productionStartTime == '' ? null : this.productionStartTime,//生产开始时间
                    normalQuantity: this.normalQuantity,//正常数
                    abnormaQuantity: this.abnormaQuantity == '' ? 0 : this.abnormaQuantity,//异常数
                    Department: $("#banzuDepartment").val(),
                    Group: $("#banzuGroup").val(),
                }).then(res => {
                    console.log(res.data)
                    if (res.data == "保存成功！") {
                        this.$message({
                            message: res.data,
                            type: 'success',
                            duration: 6000,
                        });
                        this.quantity = this.section = this.productionType = this.productionStartTime = this.normalQuantity = this.abnormaQuantity = '';
                    } else {
                        this.$message({
                            message: res.data,
                            type: 'warning',
                            duration: 8000,
                        });
                    }
                }).catch(err => {
                    console.warn("获取选择列表失败")
                })
            }
        },
        watch: {
            productionType() {
                if (this.ordernum != '' && this.productionType != '') {
                    axios.post('/MetalPlate/CheckBasicInfo', {
                        ordernum: this.ordernum,
                        productionType: this.productionType,
                    }).then(res => {
                        if (res.data == "此订单未创建基本信息记录，用户需先创建基本信息记录！") {
                            this.$message({
                                message: res.data,
                                type: 'warning',
                                duration: 8000,
                            });
                        }
                        }).catch(err => {
                            console.warn("获取选择列表失败")
                        })
                }
            }
        }

    })
</script>
