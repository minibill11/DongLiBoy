@model JianHeMES.Models.EquipmentBasicInfo

@{
    ViewBag.Title = "批量添加设备信息";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>BatchInputEquipment</h2>*@
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/axios.min.js"></script>
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<style>
     .container{
        padding:0;
    }
    .color2{
        color:red;
        font-size:16px;
    }
    .has-gutter tr th .cell,.el-table__row td .cell{
        text-align:center;
    }
    .el-table__header tr,
    .el-table__header th {
        font-size:13px;
        padding: 0;
        height: 30px;
    }

    .el-table__body tr,
    .el-table__body td {
        padding: 0;
        font-size:12px;
        height: 30px;
    }
    textarea{
        height:30px;
        width:15%;
    }
    .inputtext{
        margin-top:25px;
        display:inline-flex;
        width:100%;
    }
   h4{
       width:75%;
       font-size:20px;
       text-align:center;
   }
   .bottomInfo{
       display:flex;
       justify-content:space-between;
   }
   .pone{
       align-self:flex-end;
       font-size:14px;
   }

</style>
<div id="app">
    <div class="inputtext">
        <textarea v-model="inputInfo" placeholder="表格粘贴处..."></textarea>
        <h4>批量添加设备信息</h4>
    </div>


    <el-table v-bind:data="tableData" style="width: 100%" max-height="690" border stripe>
        <el-table-column prop="SerialNumber" label="序号" width="52">
        </el-table-column>
        <el-table-column prop="EquipmentNumber" label="设备编号" width="85">
        </el-table-column>
        <el-table-column prop="AssetNumber" label="资产编号" width="78">
        </el-table-column>
        <el-table-column prop="EquipmentName" label="设备名称" width="78">
        </el-table-column>
        <el-table-column prop="Brand" label="品牌" width="82">
        </el-table-column>
        <el-table-column prop="ModelSpecification" label="型号/规格" width="82">
        </el-table-column>
        <el-table-column prop="ManufacturingNumber" label="出厂编号" width="91">
        </el-table-column>
        <el-table-column prop="Quantity" label="数量" width="51">
        </el-table-column>
        <el-table-column prop="ActionDate" label="启用时间" width="83">
        </el-table-column>
        <el-table-column prop="DepreciableLife" label="折旧年限（月）" width="86">
        </el-table-column>
        <el-table-column prop="UserDepartment" label="使用部门" width="93">
        </el-table-column>
        <el-table-column prop="StoragePlace" label="存放地点" width="75">
        </el-table-column>
        <el-table-column prop="Status" label="使用状态" width="80">
        </el-table-column>
        <el-table-column prop="Remark" label="备注" width="100">
        </el-table-column>
        <el-table-column label="操作" width="53">
            <template slot-scope="scope">
                <el-button v-on:click.native.prevent="deleteRow(scope.$index, tableData)"
                           type="text"
                           size="small">
                    移除
                </el-button>
            </template>
        </el-table-column>
    </el-table>
    <div class="bottomInfo" v-if="flag">
        <p class="pone">本次共提交<span style="color:red;font-size:18px;">{{count}}</span>条数据！<span v-if="flags">存在重复数据，请移除其中一项并点击上传！</span></p>
        <p>
            <el-button v-on:click="postdata" type="primary" size="mini">上传<i class="el-icon-upload el-icon--right"></i></el-button>
            <el-button v-on:click="delated" type="primary" size="mini">清空<i class="el-icon-delete el-icon--right"></i></el-button>
        </p>
    </div>
    <div>
        <el-button type="primary" size="mini" plain><span>@Html.ActionLink("返回", "Index")</span></el-button>
    </div>
</div>






<script>

    let vm = new Vue({
        el: "#app",
        data: {
            inputInfo: null,
            flag: false,
            flags: false,
            count: null,
            tableData:[]
        },
        methods: {
            postdata() {
                if (this.tableData.length >= 1) {
                    axios.post("/Equipment/BatchInputEquipment", { inputList: this.tableData }).then(res=> {
                        console.log(res.data)
                        if ('repeat' in res.data) {
                            this.$message({
                                message: res.data.repeat,
                                type: "warning"
                            })
                        } else if ('success' in res.data) {
                            this.$message({
                                message: res.data.success,
                                type: "success"
                            });
                            this.delated();
                        } else if ('fail' in res.data) {
                            this.$message({
                                message: res.data.fail,
                                type: "warning"
                            })
                        }
                    }).catch(err=> {
                            this.$message({
                                message: "连接服务器失败！",
                                type: "warning"
                            })
                    })

                    
                } else {
                    this.$message({
                        message: "请导入数据再上传!",
                        type:"warning"
                    })
                }
            },
            delated() {
                this.inputInfo = null;
                this.tableData = [];
                this.count = null
            },
            deleteRow(index) {
                this.tableData.splice(index, 1);
                this.count--;
            }
        },
        watch: {
            inputInfo(val) {
                //console.log(this.inputInfo)
                if (this.inputInfo == null) { this.flag = false } else { this.flag = true }
                var valOfPaste = val.split("\n");
                valOfPaste.pop();
                var initDatas = []
                valOfPaste.forEach((item, i) => {
                    var items = item.split("\t");
                    initDatas.push(items)
                });
                initDatas.forEach(item=> {
                    let obj = {
                        SerialNumber: item[0], EquipmentNumber: item[1], AssetNumber: item[2], EquipmentName: item[3], Brand: item[4], ModelSpecification: item[5],
                        ManufacturingNumber: item[6], Quantity: item[7], ActionDate: item[8], DepreciableLife: item[9], UserDepartment: item[10],
                        StoragePlace: item[11], Status: item[12], Remark: item[13]
                    };
                    this.tableData.push(obj);
                })
                this.count = this.tableData.length;
                //console.log(initDatas)
            }
        }
    })

</script>