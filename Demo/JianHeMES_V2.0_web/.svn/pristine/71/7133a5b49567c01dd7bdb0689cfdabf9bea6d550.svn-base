//<!--------格式化日期--------->
//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21 18:54:56
const formatTime = function (v) {
  let date = new Date(v);
  let month = (date.getMonth() + 1).toString().padStart(2, 0);
  return date.getFullYear() + "-" + month + "-" + (date.getDate().toString().padStart(2, 0)) + " " + date.getHours().toString().padStart(2, 0) + ":" + date.getMinutes().toString().padStart(2, 0) + ":" + date.getSeconds().toString().padStart(2, 0);
}

//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21 18:54
const formatMinutes = function (v) {
  let date = new Date(v);
  let month = (date.getMonth() + 1).toString().padStart(2, 0);
  return date.getFullYear() + "-" + month + "-" + (date.getDate().toString().padStart(2, 0)) + " " + date.getHours().toString().padStart(2, 0) + ":" + date.getMinutes().toString().padStart(2, 0);
}

//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21
const formatDate = function (v) {
  let date = new Date(v);
  let month = (date.getMonth() + 1).toString().padStart(2, 0);
  return date.getFullYear() + "-" + month + "-" + date.getDate().toString().padStart(2, 0);
}
//2020-05-21T10:54:56.955+08:00 ——> 2020-05
const formatMonth = function (v) {
  let date = new Date(v);
  let month = (date.getMonth() + 1).toString().padStart(2, 0);
  return date.getFullYear() + "-" + month;
}


//<!--------格式化金额--------->
//15862354695852——>15,862,354,695,852
const formatMoney = (number, decimals = 0, decPoint = '.', thousandsSep = ',') => {
  number = (number + '').replace(/[^0-9+-Ee.]/g, '')
  let n = !isFinite(+number) ? 0 : +number
  let prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)
  let sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep
  let dec = (typeof decPoint === 'undefined') ? '.' : decPoint
  let s = ''
  let toFixedFix = function (n, prec) {
    let k = Math.pow(10, prec)
    return '' + Math.ceil(n * k) / k
  }
  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')
  let re = /(-?\d+)(\d{3})/
  while (re.test(s[0])) {
    s[0] = s[0].replace(re, '$1' + sep + '$2')
  }
  if ((s[1] || '').length < prec) {
    s[1] = s[1] || ''
    s[1] += new Array(prec - s[1].length + 1).join('0')
  }
  return s.join(dec)
}

export {
  //格式化日期
  formatTime,//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21 18:54:56
  formatMinutes,//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21 18:54
  formatDate,//2020-05-21T10:54:56.955+08:00 ——> 2020-05-21
  formatMonth,//2020-05-21T10:54:56.955+08:00 ——> 2020-05
  //格式化金额
  formatMoney,
}

// "部门"        Department 
// "班组"        Group 
// "设备使用部门  UserDepartment
// "设备编号"     EquipmentNumber
// "设备名称"     EquipmentName
// "故障时间"     FaultTime
// "要求完成时间"  RequirementsTime
// "紧急状态"      Emergency
// "故障简述"      FauDescription
// "报修人员"      RepairName
// "报修时间"       RepairDate
// "部门审核"       DeparAssessor
// "审核时间"       DeparAssessedDate
// "中心总监批准"   CenterApprove
// "批准时间"       CenterApprovedDate
// "技术部意见"     TecDepar_opinion
// "ME工程师"       MEName
// "ME工程师填写时间"MEDate
// "部门审核"        TecDeparAssessor
// "审核时间"        TecDeparAssessedDate
// "中心总监批准"     CeApprove 
// "批准时间"         CeApprovedDate
// "是否需要联建采购意见"Needto
// "联建采购意见"     Purchasing_opinion
// "意见人员"        OpinionName
// "意见人填写日期间" OpinionDate
// "审核人"          OpinAssessor
// "审核时间"        OpinAssessedDate
// "批准人"          OpinApprove 
// "批准时间"         OpinApprovedDate
// //维修后确认（维修需要部门）
// "维修时间"         MaintenanceDate
// "维修人（厂家）     MainName 
// "维修后效果确认（维修需要部门）AfterMain
// "报修问题是否已解决" RepairProblem
// "确认人"            ConfirmName
// "确认时间"           ConfirmDate
// //维修后确认（技术部）
// "维修后效果确认（技术部）TcAfterMin 
// "报修问题是否已解决"TcRepairProblem
// "确认人"           TcConfirmName 
// "确认时间"          TcConfirmDate
