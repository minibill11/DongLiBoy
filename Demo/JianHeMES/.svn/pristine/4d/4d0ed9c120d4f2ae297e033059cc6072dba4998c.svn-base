@model IEnumerable<JianHeMES.Models.Personnel_Roster>

@{
    ViewBag.Title = "查询首页";
}
<link href="~/Scripts/Bootstraps/bootstrap-select.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-select.js"></script>
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<link href="~/Scripts/Bootstraps/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    .table>tbody>tr>td{
        padding:0px;
        display:inline-block;
        float:left;
        margin:0px;
        height:29px;
    }
    .table>tbody>tr>td span{
        width:100%;
        height100%;
        display:inline-block;
        padding:4px 4px;
    }
     .table>tbody>tr>td input{
padding:0px;
margin:0px;
display:inline-block;
height:28px;
text-align:center;
color:purple;
     }
      .table>tbody>tr>td select{
          width:100%;
          height:28px;
      }
    .table>tbody>tr>td:nth-child(1) input{
        
        display:inline-block;
        width:50px;
    }
    .table>tbody>tr>td:nth-child(2) input{
        display:inline-block;
        width:60px;
    }
     .table>tbody>tr>td:nth-child(3) input{
        display:inline-block;
        width:50px;
    }
    .table>tbody>tr>td:nth-child(4) input{
        display:inline-block;
       
        width:120px;
    }
    .table>tbody>tr>td:nth-child(5) input{
        display:inline-block;
        width:50px;
    }
    .table>tbody>tr>td:nth-child(6) input{
        display:inline-block;
        width:90px;
    }
    .table>tbody>tr>td:nth-child(7) input{
        display:inline-block;
        width:140px;
    }
    .table>tbody>tr>td:nth-child(8) input{
        display:inline-block;
        width:140px;
    }
    .table>tbody>tr>td:nth-child(9) input{
        display:inline-block;
        width:90px;
    }
    .table>tbody>tr>td:nth-child(10) input{
        display:inline-block;
        width:70px;
    }
    .table>tbody>tr>td:nth-child(11) input{
        display:inline-block;
        width:70px;
    }
    .table>tbody>tr>td:nth-child(12) input{
        display:inline-block;
        width:70px;
    }
    .formfootere{
        display:flex;
        justify-content:space-between;
    }
    .forpisotions>label{
        display:inline-block;
        width:28%;
        text-align:right;
    }
    .forSexCheckbox{
         display:inline-block;
            width:65%;
             margin-left:20px;
    }
    .forSexCheckbox>input{
        display:inline-block;
        width:15px;
    }
    .forpisotions>input{
        display:inline-block;
        width:65%;
        margin-left:20px;
    }
    .forpisotions>select{
        display:inline-block;
        width:65%;
        margin-left:20px;
        height:32px;
    }
    .el-collapse-item__content{
        padding-bottom:0;
    }
    .el-collapse-item__header{
        height:30px;
    }
    .ttops{
        display:inline-flex;
        justify-content:space-between;
        width:12%;
    }
    .tbottom{
        display:inline-flex;
        justify-content:space-between;
        width:15%;
    }
    .tbottom:first-child{
        display:none;
    }
    .selectpicker {
        border: 1px solid #ccc;
    }
    .table {
        margin: 0;
    }
        .table > tbody > tr > td, .table > tbody > tr > th {
            text-align: center;
            display:inline-block;
            float:left;
            padding: 0px;
        }

            .table > tbody > tr > td:nth-child(1), .table > tbody > tr > th:nth-child(1) {
                width: 50px;
            }

            .table > tbody > tr > td:nth-child(2), .table > tbody > tr > th:nth-child(2) {
                width: 60px;
            }

            .table > tbody > tr > td:nth-child(3), .table > tbody > tr > th:nth-child(3) {
                width: 50px;
            }

            .table > tbody > tr > td:nth-child(4), .table > tbody > tr > th:nth-child(4) {
                width: 120px;
            }

            .table > tbody > tr > td:nth-child(5), .table > tbody > tr > th:nth-child(5) {
                width: 50px;
            }

            .table > tbody > tr > td:nth-child(6), .table > tbody > tr > th:nth-child(6) {
                width: 90px;
            }

            .table > tbody > tr > td:nth-child(7), .table > tbody > tr > th:nth-child(7) {
                width: 140px;
            }

            .table > tbody > tr > td:nth-child(8), .table > tbody > tr > th:nth-child(8) {
                width: 140px;
            }

            .table > tbody > tr > td:nth-child(9), .table > tbody > tr > th:nth-child(9) {
                width: 90px;
            }

            .table > tbody > tr > td:nth-child(10), .table > tbody > tr > th:nth-child(10) {
                width: 70px;
            }

            .table > tbody > tr > td:nth-child(11), .table > tbody > tr > th:nth-child(11) {
                width: 70px;
            }

            .table > tbody > tr > td:nth-child(12), .table > tbody > tr > th:nth-child(12) {
                width: 70px;
            }

            .table > tbody > tr > td:nth-child(13), .table > tbody > tr > th:nth-child(13) {
                width: 123px;
            }

    .bootstrap-select > .btn, .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 150px;
    }
</style>
<h3 class="text-center" style="margin-bottom:3px;margin-top:5px;">查询首页</h3>
<div id="app">
    <span>
        @Html.ActionLink("新增一个员工", "Create")
    </span>
    <span>
        @Html.ActionLink("批量添加员工", "Batch_InputStaff")
    </span>
    @using (Html.BeginForm("OutputExcel", "Personnel_Roster", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <input v-model="jobNum" type="text" class="hidden" style="display:inline;width:150px;" name="jobNum" />
        <input v-model="name" type="text" class="hidden" style="display:inline;width:150px;" name="name" />
        <input v-model="department" type="text" class="hidden" style="display:inline;width:150px;" name="department" />
        <input v-model="status" type="text" class="hidden" style="display:inline;width:150px;" name="status" />
        <input type="submit" id="excelBtn" class="btn btn-success pull-right" value="导出花名册记录到Excel表" />
    }

    @using (Html.BeginForm("Index", "Personnel_Roster", FormMethod.Post, new { id = "searchForm", @class = "text-center" }))
    {
        @Html.AntiForgeryToken()
        <div>
            <span>工号：</span><input v-model="jobNum" type="text" class="form-control" style="display:inline;width:150px;" name="jobNum" />
            <span>&nbsp;&nbsp;&nbsp;姓名：</span><input v-model="name" type="text" class="form-control" style="display:inline;width:150px;" name="name" />
            <span>&nbsp;&nbsp;&nbsp;部门:</span>@Html.DropDownList("department", (List<SelectListItem>)ViewBag.departmentList, "全部", new { @class = "selectpicker", data_live_search = "true", data_style = "form-control" })
            <span>&nbsp;&nbsp;&nbsp;员工状态:</span>@Html.DropDownList("status", (List<SelectListItem>)ViewBag.status, "全部", new { @class = "selectpicker", data_live_search = "true", data_style = "form-control" })
            <input type="submit" class="btn btn-default" value="查找" />
        </div>
    }
    <textarea id="infos" style="display:none;">@ViewBag.statistics</textarea>
    <el-collapse accordion>
        <el-collapse-item v-bind:title="'总统计 ---------------' + topTotals + '人'" name="1">
            <div class="ttops" v-for="item in totalTop">{{item.name}} : {{item.val}}</div>
        </el-collapse-item>
    </el-collapse>
    <el-collapse v-model="activeName" accordion>
        <el-collapse-item v-bind:title="item.depatment +' ------------------在职总人数 : '+ item.val[0].values" v-for="(item,index) in totalBottom" v-bind:name="index">
            <div class="tbottom" v-for="item in item.val">{{item.names}} : {{item.values}}</div>
        </el-collapse-item>
    </el-collapse>
    <div style="width:1123px; height:35px;">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.JobNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Sex)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateOfBirth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Education)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DP_Group)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HireDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Department)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.levelType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OnPostMonth)
                </th>
                <th>操作</th>
            </tr>
        </table>
    </div>

    <div style="width:1140px;height:300px;overflow:auto;">
        <table class="table">
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @if (item.Sex == false)
                        {
                            <span>女</span>
                        }
                        else if (item.Sex == true)
                        {
                            <span>男</span>
                        }
                        @*@Html.DisplayFor(modelItem => item.Sex)*@
                    </td>
                    <td>
                        <span>@item.DateOfBirth.ToString().Split(' ')[0]</span>
                        @*@Html.DisplayFor(modelItem => item.DateOfBirth)*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Education)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DP_Group)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HireDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.levelType)
                    </td>
                    <td>
                        @{
                            if (item.OnPostMonth == 0)
                            {
                                <span></span>
                            }
                            else
                            {
                                @*<span>@item.OnPostMonth.ToString().Split('.')[0]</span>*@
                                @Html.DisplayFor(modelItem => item.OnPostMonth)
                            }
                        }
                    </td>
                    <td>
                        @{var UserRoles = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Role; }
                        @if (((JianHeMES.Models.Users)Session["User"]) != null)
                        {
                            if (UserRoles == "系统管理员" || ((JianHeMES.Models.Users)Session["User"]).UserName == "魏顺平" || ((JianHeMES.Models.Users)Session["User"]).UserName == "刘露露")
                            {
                                <span>
                                    <button onclick="changeInfo(@item.Id,this)" class="btn btn-primary test" style="margin:0px;padding:2px;">修改 </button>
                                    <button onclick="postSingleInfo(@item.Id,this)" class="btn btn-primary test2" style="margin:0px;padding:2px;display:none;">保存</button>
                                    <button v-on:click="getEditInfo(@item.Id)" class="btn btn-primary" data-toggle="modal" data-target="#myModal" style="margin:0px;padding:2px;">详细</button>
                                </span>
                            }
                        }
                    </td>
                </tr>
            }
        </table>
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="margin-top:50px;">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            &times;
                        </button>
                        <h4 class="modal-title" id="myModalLabel">
                            员工详细信息
                        </h4>
                    </div>
                    <div class="modal-body">
                        <form class="form"  method="post" id="registSubmit">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <input class="hidden" value="modalData.Id" />
                            <div class="form-group forpisotions">
                                <label for="exampleInputName1">工号</label>
                                <input type="text" class="form-control" id="exampleInputName1" v-bind:value="modalData.JobNum" name="JobNum" readonly />
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail2">中文名</label>
                                <input type="text" class="form-control" id="exampleInputEmail2" v-bind:value="modalData.Name" name="Name" readonly />
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail3">性别</label>
                                <input type="text" class="form-control" id="exampleInputEmail2" v-bind:value="modalData.Sex==true?'男':'女'" name="Sex" readonly />
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail4">出生日期</label>
                                <input type="text" class="form-control" id="exampleInputEmail4" v-bind:value="timeFormatsss(modalData.DateOfBirth)" name="DateOfBirth" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail5">学历</label>
                                <input type="text" class="form-control" id="exampleInputEmail5" v-bind:value="modalData.Education" name="Education" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail6">组名</label>
                                <input type="text" class="form-control" id="exampleInputEmail6" v-bind:value="modalData.DP_Group" name="DP_Group" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail7">入司时间</label>
                                <input type="text" class="form-control HireDate" id="exampleInputEmail7" v-bind:value="timeFormatss(modalData.HireDate)" name="HireDate" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail8">最后工作日期</label>
                                <input type="text" class="form-control LastDate" id="exampleInputEmail8" v-bind:value="timeFormatss(modalData.LastDate)" name="LastDate" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail9">部门</label>
                                <input type="text" class="form-control" id="exampleInputEmail9" v-bind:value="modalData.Department" name="Department" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail10">员工状态</label>
                                <input type="text" class="form-control" id="exampleInputEmail9" v-bind:value="modalData.Status" name="Status" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail11">级别名称</label>
                                <input type="text" class="form-control" id="exampleInputEmail11" v-bind:value="modalData.levelType" name="levelType" readonly>
                            </div>
                            <div class="form-group forpisotions">
                                <label for="exampleInputEmail2">在岗月数</label>
                                <input type="text" class="form-control OnPostMonth" id="exampleInputEmail12" v-bind:value="modalData.OnPostMonth" name="OnPostMonth" readonly>
                            </div>
                            <div class="formfootere">
                                <button type="button" class="btn btn-default" data-dismiss="modal">
                                    关闭
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    提交更改
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    var app = new Vue({
        el: "#app",
        data: {
            modalData:"",
            totalTop: "",
            topTotals:"123",  //总统计部分的数据
            totalBottom: "",
            activeName: '0',
            activeNames: "1",
            jobNum: "",
            name: "",
            department: "",
            status: ""
        },
        methods: {
            getEditInfo(ids) {
                axios.get("/Personnel_Roster/currentPagrEdit", {
                    params: {
                        id: ids
                    }
                }).then(res => {
                    this.modalData = res.data

                }).catch(err => {
                })
            },
            timeFormatss(val) { //时间格式化
                if(val=='')return '';
                var theDay = new Date(val);
                var theYear = theDay.getFullYear();
                //padStart是String的方法；所以需要将时间转换为字符串
                var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
                var theWeek = theDay.getDate().toString().padStart(2, "0");
                var theHour = theDay.getHours().toString().padStart(2, "0");
                var theMinue = theDay.getMinutes().toString().padStart(2, "0");
                var theSecond = theDay.getSeconds().toString().padStart(2, "0");
                return theYear + "-" + theMonth + "-" + theWeek + " " + theHour + ":" + theMinue + ":" + theSecond;
            },    //时间格式化--含时分秒
            timeFormatsss(val){

                var theDay = new Date(val);
                var theYear = theDay.getFullYear();
                var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
                var theWeek = theDay.getDate().toString().padStart(2, "0");
                var theHour = theDay.getHours().toString().padStart(2, "0");
                var theMinue = theDay.getMinutes().toString().padStart(2, "0");
                var theSecond = theDay.getSeconds().toString().padStart(2, "0");
                return theYear + "-" + theMonth + "-" + theWeek ;
            }
        }
    });
    var datas = $("#infos").val();
    var targetData = JSON.parse(datas);
    var ttop = []; //获取总统计部分的数据
    var tbottom = []; //获取部门的详细信息
    for (var keys in targetData) {
        if (keys === '总统计') {
            for (keyss in targetData[keys]) {
                ttops = { name: keyss, val: targetData[keys][keyss] };
                ttop.push(ttops);
            }
        } else {
            var tar = { depatment: keys, val: handeldata(targetData[keys])};

            tbottom.push(tar)
        }
    };
    function handeldata(value) {
        var newArr = [];
        for (var keys in value) {
            var tt = { names: keys, values: value[keys] };
            newArr.push(tt);
        };
        return newArr;
    }
    app.totalTop = ttop;
    var ful=0 ;
    for (let i = 0; i < ttop.length; i++) {
        ful += ttop[i].val;
        //console.log(ful)
    }
    //console.log(ful)
    app.topTotals = ful;
    app.totalBottom = tbottom;
    //console.log(targetData)
    app.department = $("#department").val();
    app.status = $("#status").val();
    $("#department").on("change", function(){
        app.department = $(this).val();
    });
    $("#status").on("change", function () {
        app.status = $(this).val();
    });



    //在当行修改数据的方法
    function changeInfo(id,item){

        axios.get("/Personnel_Roster/currentPagrEdit", {
            params: {
                id: id
            }
        }).then(res => {
           // console.log(res.data);
            infos = res.data
            //console.log(infos.levelType)
            $(item).hide();
            $(item).next().show();
            var allTd = $(item).parent().parent().prevAll();
            $(allTd[0]).html("<input type='text' readonly class='months' value='" + infos.OnPostMonth + "' />");  //在岗月数
            $(allTd[1]).html("<input type='text'value='" + infos.levelType + "' />");
            $(allTd[2]).html("<input type='text'value='" + infos.Status + "' />");
            $(allTd[3]).html("<input type='text'value='" + infos.Department + "' />");
            $(allTd[4]).html("<input type='text' class='timeOne' value='" + timeFormat((infos.LastDate==null?'':infos.LastDate)) + "' />");
            $(allTd[5]).html("<input type='text' class='timeTwo' value='" + timeFormat((infos.HireDate==null?'':infos.HireDate)) + "' />");
            $(allTd[6]).html("<input type='text'value='" + infos.DP_Group + "' />");
            $(allTd[7]).html("<input type='text'value='" + infos.Education + "' />");
            $(allTd[8]).html("<input type='text' class='timeThree' value='" + timeFormats(infos.DateOfBirth) + "' />");
            //$(allTd[9]).html("<input type='text'value='" + (infos.Sex==false?'女':'男') + "' />");
            $(allTd[9]).html("<select><option>" +(infos.Sex==false?'女':'男') + "</option><option>男</option><option>女</option></select>")
            $(allTd[10]).html("<input type='text'value='" + infos.Name + "' />");
            $(allTd[11]).html("<input type='text'value='" + infos.JobNum + "' />")   //工号

            $(".timeOne").datetimepicker({
                language: 'zh-CN',
                format: 'yyyy-mm-dd hh:ii:ss',
                autoclose: true,
                todayBtn: true,
            }).on('changeDate', function (e) {
                fun();
            });
            $(".timeThree").datetimepicker({
                language: 'zh-CN',
                format: 'yyyy-mm-dd',
                autoclose: true,
                todayBtn: true,
                minView: "month",
            });
            $(".timeTwo").datetimepicker({
                language: 'zh-CN',
                format: 'yyyy-mm-dd hh:ii:ss',
                autoclose: true,
                todayBtn: true,
            }).on('changeDate', function (e) {
                fun();
            });
        }).catch(err => {
        });
    }    //封装 修改方法



    function timeFormat(val) { //时间格式化
        if(val=='')return '';
        var theDay = new Date(val);
        var theYear = theDay.getFullYear();
        //padStart是String的方法；所以需要将时间转换为字符串
        var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
        var theWeek = theDay.getDate().toString().padStart(2, "0");
        var theHour = theDay.getHours().toString().padStart(2, "0");
        var theMinue = theDay.getMinutes().toString().padStart(2, "0");
        var theSecond = theDay.getSeconds().toString().padStart(2, "0");
        return theYear + "-" + theMonth + "-" + theWeek + " " + theHour + ":" + theMinue + ":" + theSecond;
    }    //时间格式化--含时分秒
    function timeFormats(val){

        var theDay = new Date(val);
        var theYear = theDay.getFullYear();
        var theMonth = (theDay.getMonth() + 1).toString().padStart(2, "0");
        var theWeek = theDay.getDate().toString().padStart(2, "0");
        var theHour = theDay.getHours().toString().padStart(2, "0");
        var theMinue = theDay.getMinutes().toString().padStart(2, "0");
        var theSecond = theDay.getSeconds().toString().padStart(2, "0");
        return theYear + "-" + theMonth + "-" + theWeek ;
    }   //时间格式化--不含时分秒

    function postSingleInfo(id,item){
        var allTd = $(item).parent().parent().prevAll().children();
        var postData = [];
        for(let i=0;i<allTd.length;i++){
            postData.push(allTd[i].value)
        }
        axios.post("/Personnel_Roster/updateDate",{Id:id,
            JobNum:postData[11],
            Name:postData[10],Sex:postData[9]==='男'?true:false,DateOfBirth:postData[8],
            Education:postData[7],DP_Group:postData[6],HireDate:postData[5],LastDate:postData[4],
            Department:postData[3],Status:postData[2],levelType:postData[1],OnPostMonth:postData[0]}).then(res =>{
                if(res.data == "ok"){
                    app.$message({
                        message: "保存成功！",
                        type: 'success',
                        center: true
                    });
                    var trPrevs = $(item).parent().parent().prevAll();
                    $(trPrevs[0]).html("<span>"+ postData[0] +"</span>");
                    $(trPrevs[1]).html("<span>"+ postData[1] +"</span>");
                    $(trPrevs[2]).html("<span>"+ postData[2] +"</span>");
                    $(trPrevs[3]).html("<span>"+ postData[3] +"</span>");
                    $(trPrevs[4]).html("<span style='width:104%'>"+ postData[4] +"</span>");
                    $(trPrevs[5]).html("<span style='width:104%'>"+ postData[5] +"</span>");
                    $(trPrevs[6]).html("<span>"+ postData[6] +"</span>");
                    $(trPrevs[7]).html("<span>"+ postData[7] +"</span>");
                    $(trPrevs[8]).html("<span>"+ postData[8] +"</span>");
                    $(trPrevs[9]).html("<span>"+ postData[9] +"</span>");
                    $(trPrevs[10]).html("<span>"+ postData[10] +"</span>");
                    $(trPrevs[11]).html("<span>"+ postData[11] +"</span>");
                    $(item).hide();
                    $(item).prev().show();
                    console.log(trPrevs)
            }
        }).catch(err =>{
            if(err.data == "false"){
                app.$message({
                    message: "保存失败！",
                    type: 'danger',
                    center: true
                });
                changeInfo(id,item)
            }
        })

    }  //封装保存方法



    function fun() {
        let timelast = $(".timeOne").val();
        let timestart = $(".timeTwo").val();
        if (timelast != '' && timestart != '') {
            axios.post("/Commonality/TwoDTforMonth_sub", {
                date2: timelast,
                date1: timestart,
            }).then(res=> {
                $(".months").val(res.data);
            }).catch(err=> {
            });
        };
    };
    function func(event) {
        event.preventDefault();
    }




    $('#registSubmit').on('submit', function () {
        event.preventDefault() //阻止form表单默认提交
        registPost();

    })

    function registPost() {
        $.ajax({
            type: "post",
            url: "/Personnel_Roster/updateDate",
            data: {
            },
        }).success(function (message) {
        }).fail(function (err) {
        });
    }
</script>
