@model IEnumerable<JianHeMES.Models.Personnel_Turnoverrate>
@{
    ViewBag.Title = "月流失率查看页面";
}
<script src="~/Scripts/echarts.js"></script>
<script src="~/Scripts/vue-resource.min.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    [v-cloak] {
        display: none;
    }


    .table > tbody > tr > th {
        background-color: #f0da35;
    }

    .table > tbody > tr > th, .footTr {
        height: 25px;
    }

    .table-bordered > tbody > tr > th, .table-bordered > tbody > tr > td {
        border: 1px solid #555;
        text-align: center;
        vertical-align: middle;
        padding: 0px;
    }

    .table > tbody > tr > td:hover, .table > tbody > tr > th :hover {
        background-color: #f0da35;
    }

    .DepartmentStyle {
        cursor: pointer;
    }

    hr {
        margin: 5px;
    }

    .table {
        margin-bottom: 0;
    }
    /*@@media screen and (min-width:1200px){
        .container{
            width:1300px;
        }
    }*/

    .firworks {
        width: 3px;
        height: 3px;
        position: absolute;
    }

    .colorFont {
        position: absolute;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .eggF {
        position: relative;
        z-index: 2;
    }

    .egg {
        position: absolute;
        width: 50px;
        height: 50px;
        right: -8px;
        top: 8px;
        z-index: 1;
        cursor: pointer;
        transition: right 2s,top 2s;
    }

        .egg:hover {
            right: -30px;
            top: 0px;
        }
</style>
<h4 class="text-center">月流失率查看</h4>
@*<p>@Html.ActionLink("月流失率输入页面", "TurnoverrateInput")</p>*@
<hr />
<div id="app" class="form-group text-center">
    <div class="row">
        <div class="col-md-5">
            <div style="margin-bottom:5px;">
                <select v-model="year">
                    <option></option>
                    <option>2018</option>
                    <option>2019</option>
                    <option>2020</option>
                    <option>2021</option>
                    <option>2022</option>
                    <option>2023</option>
                </select>
                年
                <select v-model="month">
                    <option></option>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                    <option>7</option>
                    <option>8</option>
                    <option>9</option>
                    <option>10</option>
                    <option>11</option>
                    <option>12</option>
                </select>
                月流失率
            </div>
            <div class="eggF">
                <table class="table table-bordered">
                    <colgroup>
                        <col width="110" />
                        <col width="70" />
                        <col width="70" />
                        <col width="70" />
                        <col width="70" />
                        <col width="80" />
                        @*<col width="50" />*@
                    </colgroup>
                    <tr>
                        <th>部门</th>
                        <th>月初人数</th>
                        <th>月末人数</th>
                        <th>平均人数</th>
                        <th>离职人数</th>
                        <th>流失率</th>
                        @*<th>操作</th>*@
                    </tr>
                    <tr v-for="(item,index) in turnoverrateList" v-cloak>
                        <td v-on:click="getDepartmentYearMsg(item.department)" class="DepartmentStyle">{{item.department}}</td>
                        <td>{{item.begin_day_of_month}}</td>
                        <td>{{item.end_day_of_month}}</td>
                        <td>{{item.average}}</td>
                        <td>{{item.leave_sum}}</td>
                        <td>{{item.turnoverrate.toFixed(2)}}%</td>
                        @*[Display(Name = "平均数值")]
                            public decimal Average_Value { get; set; }*@
                        @*<td><a v-bind:href="'/Personnel_Turnoverrate/Edit/' + item.Id" target="_blank">编辑</a></td>*@
                    </tr>
                    <tr class="footTr">
                        <td v-if="turnoverrateList==''" colspan="6">{{emptyMessage}}</td>
                        <td v-else colspan="5">平均数值</td>
                        <td v-if="turnoverrateList!=''" style="font-weight:bold;">{{monthAverageVal.toFixed(2)}}%</td>
                    </tr>
                </table>
            </div>
            <img class="egg hidden" src="http://img.51miz.com/Element/00/80/19/79/d6e88810_E801979_f3bba887.png!/quality/90/unsharp/true/compress/true/format/png/fh/630" />
            <img class="egg hidden" src="http://img.51miz.com/Element/00/28/83/58/aa8a8b32_E288358_732484eh.png!/quality/90/unsharp/true/compress/true/format/png/fh/630" />
            <img class="egg hidden" src="http://img.51miz.com/Element/00/90/16/12/d60b4b8b_E901612_c42e807d.png!/quality/90/unsharp/true/compress/true/format/png/fh/630" />
            <img class="egg hidden" src="http://img.51miz.com/Element/01/01/36/53/7d9e50c5_E1013653_b56d1b2b.jpg!/quality/90/unsharp/true/compress/true/format/jpg/fh/630" />
            <img class="egg hidden" src="http://img.51miz.com/Element/00/99/98/18/d0ad43b1_E999818_2d39a0e3.jpg!/quality/90/unsharp/true/compress/true/format/jpg/fh/630" />
            <img class="egg hidden" src="http://img.51miz.com/Element/00/80/19/79/d6e88810_E801979_f3bba887.png!/quality/90/unsharp/true/compress/true/format/png/fh/630" />
        </div>
        <div class="col-md-7">
            <div id="lineMain" style="width: 700px;height:350px;"></div>
        </div>
    </div>
    <div class="row">
        <hr />
        <div id="barMain" style="width: 100%;height:300px;"></div>
    </div>
    <div v-show="departmentList!=''" class="row">
        <table class="table table-bordered">
            <colgroup>
                <col width="100" />
                <col width="100" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="80" />
                <col width="100" />
            </colgroup>
            <tr>
                <th colspan="2">月份</th>
                <th>1</th>
                <th>2</th>
                <th>3</th>
                <th>4</th>
                <th>5</th>
                <th>6</th>
                <th>7</th>
                <th>8</th>
                <th>9</th>
                <th>10</th>
                <th>11</th>
                <th>12</th>
                <th rowspan="5">平均数值</th>
            </tr>
            <tr v-for="(item,index) in departmentList">
                <td v-if="index==0" rowspan="5">{{yearDepartment}}</td>
                <td v-if="index==0">月初人数</td>
                <td v-if="index==1">月末人数</td>
                <td v-if="index==2">平均人数</td>
                <td v-if="index==3">离职人数</td>
                <td v-if="index==4">流失率</td>
                <td v-if="index<4" v-for="i in item">{{i}}</td>
                <td v-if="index==4" v-for="i in item">{{i}}<span v-if="typeof(i)!='undefined'">%</span></td>
                <td v-if="index==4" style="font-weight:bold;">{{yearAverageVal}}%</td>
            </tr>
        </table>
    </div>
    @*loding*@
    <div class="spinnerModel" v-show="loading">
        <div class="bounce1"></div>
        <div class="bounce2"></div>
        <div class="bounce3"></div>
    </div>
</div>
@{
    var Description = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Description;
}
<script>
    var app = new Vue({
        el: "#app",
        data: {
            year: "",
            month: "",
            turnoverrateList: [],
            lineArray: [],
            barArray: [],
            departmentList: [],
            monthAverageVal: "",
            yearDepartment: "部门",
            yearAverageVal: "",
            emptyMessage: "请选择年/月查询数据",
            loading: false
        },
        created: function () {
            let nowDate = new Date();
            this.year = nowDate.getFullYear();
            this.month = nowDate.getMonth() + 1;
        },
        mounted: function () {
            //this.$options.methods.getTurnoverrateYearlyLineChartData();
            if ('@Description' == "文员." || '@Description' == "系统管理员.") {
                let randomNum = Math.floor(Math.random() * 10);
                let imgNum = 10;
                $(".egg").each(function (index, val) {
                    if (index == randomNum) {
                        //$(val).removeClass("hidden");
                        imgNum = index;
                        $(val).click(function () {
                            $(val).addClass("hidden");
                            app.$options.methods.bodyFireworks();
                        });
                    };
                });
                if (randomNum < 6) {
                    this.$options.methods.randomFireworks(imgNum);
                };
            };
        },
        methods: {
            postTime: function (y, m) {
                axios.post('/Personnel_Turnoverrate/Turnoverrate', {
                    Year: y,
                    Month: m
                }).then(function (response) {
                    //console.log(response);
                    if (response.data == "没有记录！") {
                        app.turnoverrateList = [];
                        app.emptyMessage = y + "年" + m + "月没有记录或尚未输入数据！";
                        return false;
                    };
                    let targetdata = response.data;
                    let arr = [];
                    for (let i in targetdata) {
                        if (i == "month_average") {
                            app.monthAverageVal = targetdata[i];
                        } else {
                            arr.push(targetdata[i]);
                        };
                    };
                    if (arr.length > 0) {
                        app.turnoverrateList = arr;
                    };
                }).catch(function (error) {
                    console.log(error);
                    alert("查询月流失率失败！")
                });

                //app.$http.post("/Personnel_Turnoverrate/Turnoverrate", {
                //    Year: y,
                //    Month: m,
                //}, { emulateJSON: true }).then(function (res) {
                //    //console.log(res)
                //    if (res.bodyText == "没有记录！") {
                //        app.turnoverrateList = [];
                //        app.emptyMessage = y + "年" + m + "月没有记录或尚未输入数据！";
                //        return false;
                //    };
                //    let targetdata = res.body;
                //    let arr = [];
                //    for (let i in targetdata) {
                //        if (i == "month_average") {
                //            app.monthAverageVal = targetdata[i];
                //        } else {
                //            arr.push(targetdata[i]);
                //        };
                //    };
                //    if (arr.length > 0) {
                //        app.turnoverrateList = arr;
                //    };
                //}, function (err) {
                //    alert("查询月流失率失败！")
                //});
            },
            getDepartmentYearMsg: function (departmentVal) {
                app.$http.post("/Personnel_Turnoverrate/TurnoverrateYearly",
                    {
                        department: departmentVal,
                        year: app.year,
                    }, { emulateJSON: true }).then(function (res) {
                        if (res.bodyText == "没有记录！") {
                            alert("该部门没有数据！")
                            return false;
                        };
                        let dataJson = res.body;
                        let dataArray = [[], [], [], [], []];
                        app.departmentList = [];
                        //console.log(dataJson);
                        dataArray.forEach(function (value, index, array) {
                            value.length = 12;
                        });
                        for (let i in dataJson) {
                            if (i != "avgturnoverrate") {
                                dataArray[0][i - 1] = dataJson[i].begin_day_of_month;
                                dataArray[1][i - 1] = dataJson[i].end_day_of_month;
                                dataArray[2][i - 1] = dataJson[i].average;
                                dataArray[3][i - 1] = dataJson[i].leave_sum;
                                dataArray[4][i - 1] = dataJson[i].turnoverrate.toFixed(2);
                            }
                        };
                        app.yearDepartment = departmentVal;
                        app.departmentList = dataArray;
                        app.yearAverageVal = dataJson.avgturnoverrate.toFixed(2);

                    }, function (res) {
                        alert("查询部门年流失率失败！")
                    });
            },
            getTurnoverrateYearlyLineChartData: function () {
                //发送 post 请求
                app.$http.post('/Personnel_Turnoverrate/TurnoverrateYearlyLineChartData', { year: app.year }, { emulateJSON: true }).then(function (res) {
                    //console.log(res)
                    //清空图表
                    app.lineArray = [];
                    if (app.barArray != "") {
                        let bar = app.barArray;
                        for (let i in bar) {
                            bar[i].data = [];
                        };
                    };
                    LineChart.setOption({
                        title: { subtext: '请选择年份' },
                        series: [{ data: app.lineArray }]
                    });
                    BarChart.setOption({
                        title: { subtext: '请选择年份' },
                        series: app.barArray
                    });
                    app.barArray = [];
                    if (res.bodyText == "没有记录！") {
                        return false;
                    };
                    //处理数据
                    let dataJson = res.body;
                    app.lineArray = dataJson.line.split(",");
                    let barval = dataJson.columnar;
                    for (let i in barval) {
                        app.barArray.push({
                            name: barval[i].name,
                            type: "bar",
                            data: barval[i].data.split(",")
                        });
                    };
                    //折线图渲染
                    LineChart.setOption({
                        title: { subtext: app.year + '年记录' },
                        series: [{ data: app.lineArray }]
                    });
                    //柱状图渲染
                    BarChart.setOption({
                        title: { subtext: app.year + '年记录' },
                        series: app.barArray
                    });
                }, function (res) {
                    console.log(res.status);
                    alert("折线图数据获取失败！")
                });
            },
            bodyFireworks: function () {
                if (parseInt(Math.random() * 2) == 0) {
                    if (parseInt(Math.random() * 2) == 0) {
                        document.onclick = function (e) {
                            let evt = e || window.event;	//兼容性处理
                            for (let i = 0; i < 30; i++) {		//随机的数量
                                let div = document.createElement("div");
                                let b = new app.$options.methods.Fireworks(div, evt.pageX, evt.pageY);
                                b.move();
                            }
                        };
                    } else {
                        document.onclick = function (e) {
                            let evt = e || window.event;	//兼容性处理
                            let div = document.createElement("div");
                            let b = new app.$options.methods.colorFont(div, evt.pageX, evt.pageY);
                            b.move();
                        };
                    }
                } else {
                    document.onclick = function (e) {
                        let evt = e || window.event;	//兼容性处理
                        let div = document.createElement("div");
                        let b = new app.$options.methods.colorFont(div, evt.pageX, evt.pageY);
                        b.move();
                    };
                }
            },
            Fireworks: function (Div, x, y) {
                Div.style.backgroundColor = app.$options.methods.randomColor();   //添加背景色
                Div.className = "firworks";					//添加一个class
                document.body.appendChild(Div);
                Div.style.left = x + "px";						//把鼠标点击坐标给div
                Div.style.top = y + "px";
                let speedX = (parseInt(Math.random() * 2) == 0 ? 1 : -1) * parseInt(Math.random() * 16 + 1);  //三目运算符随机移动方向，概率50%,为1时往正方向移动，负1时往反方向移动第二个随机数随机速度快慢
                let speedY = (parseInt(Math.random() * 2) == 0 ? 1 : -1) * parseInt(Math.random() * 20 + 1);
                this.move = function () {
                    let i = 3;
                    let timeOut = setInterval(function () {
                        i++;
                        Div.style.left = Div.offsetLeft + speedX + "px";
                        Div.style.top = Div.offsetTop + speedY + i + "px";   //当i+speedY>0时,朝下运动。
                        if (Div.offsetLeft - x > 200 || Div.offsetLeft - x < -200 || Div.offsetTop - y > 350 || Div.offsetTop - y < -150 || Div.offsetLeft + Div.offsetWidth > window.innerWidth || Div.offsetLeft < 2 || Div.offsetTop + Div.offsetHeight > window.innerHeight || Div.offsetTop < 2) {
                            Div.remove();		//移动出可视区域记得删除div和清除定时器
                            clearInterval(timeOut);
                        }
                    }, 30);
                }
            },
            colorFont: function (Div, x, y) {
                Div.style.color = app.$options.methods.randomColor();   //添加颜色
                Div.className = "colorFont";					//添加一个class
                Div.innerHTML = app.$options.methods.randomppp();
                document.body.appendChild(Div);
                Div.style.left = (x - Div.offsetWidth / 2) + "px";						//把鼠标点击坐标给div
                Div.style.top = y + "px";
                let speedX = (parseInt(Math.random() * 2) == 0 ? 1 : -1) * parseInt(Math.random() * 2);  //三目运算符随机移动方向，概率50%,为1时往正方向移动，负1时往反方向移动第二个随机数随机速度快慢
                let speedY = parseInt(Math.random() * 2 + 1);
                this.move = function () {
                    let timeOut = setInterval(function () {
                        Div.style.left = Div.offsetLeft + speedX + "px";
                        Div.style.top = Div.offsetTop - speedY + "px";
                        Div.style.opacity = getComputedStyle(Div, false)["opacity"] - 0.01;
                        if (Div.offsetTop - y < -80 || Div.offsetLeft + Div.offsetWidth > window.innerWidth || Div.offsetLeft < 2 || Div.offsetTop + Div.offsetHeight > window.innerHeight || Div.offsetTop < 2) {
                            Div.remove();		//移动出可视区域记得删除div和清除定时器
                            clearInterval(timeOut);
                        }
                    }, 30);
                };
            },
            randomColor: function () {
                let color = "rgb("
                let r = parseInt(Math.random() * 256);
                let g = parseInt(Math.random() * 256);
                let b = parseInt(Math.random() * 256);
                color = color + r + "," + g + "," + b + ")";
                return color;
            },
            randomFireworks: function (img) {
                let delayed1 = Math.random() * 10000;
                let delayed2 = Math.random() * 10000;
                //console.log(`${delayed1}:${delayed2}`);
                setTimeout(() => {
                    $(".egg").each(function (i, v) {
                        if (i == img) {
                            $(v).removeClass("hidden");
                        };
                    });
                }, delayed1 + delayed2);//delayed1 + delayed2
            },
            randomppp: function () {
                let num = Math.floor(Math.random() * 10);
                let pval;
                switch (num) {
                    case 0: pval = "小可爱"; break;
                    case 1: pval = "你真漂亮"; break;
                    case 2: pval = "吼哟"; break;
                    case 3: pval = "你如阳光般活泼，如月光般温婉"; break;
                    case 4: pval = "你的微笑最美丽 "; break;
                    case 5: pval = "你这个小机灵"; break;
                    case 6: pval = "调皮"; break;
                    case 7: pval = "呆萌"; break;
                    case 8: pval = "\ ( > < ) / 哇～出现了 "; break;
                    case 9: pval = "(*>﹏<*)′ ~~"; break;
                    default: pval = "~"; break;
                }
                return pval
            }
        },
        watch: {
            year: function () {
                this.departmentList = [];
                if (this.year != "" && this.month != "") {
                    this.$options.methods.postTime(this.year, this.month);
                } else {
                    this.turnoverrateList = [];
                    this.emptyMessage = "请选择年/月查询数据"
                };
                //折线图根据年查询
                if (this.year != "") {
                    this.$options.methods.getTurnoverrateYearlyLineChartData();
                } else {
                    this.lineArray = [];
                    LineChart.setOption({
                        title: { subtext: '请选择年份' },
                        series: [{ data: this.lineArray }]
                    });
                    //柱状图
                    if (this.barArray != "") {
                        let bar = this.barArray;
                        for (let i in bar) {
                            bar[i].data = [];
                        };
                    };
                    BarChart.setOption({
                        title: { subtext: '请选择年份' },
                        series: this.barArray
                    });
                    this.barArray = [];
                };
            },
            month: function () {
                if (this.year != "" && this.month != "") {
                    this.$options.methods.postTime(this.year, this.month);
                } else {
                    this.turnoverrateList = [];
                    this.departmentList = [];
                    this.emptyMessage = "请选择年/月查询数据"
                };
            },
        }
    });
    //vue ajax
    Vue.http.interceptors.push((request, next) => {
        app.loading = true;
        next((response) => {
            //console.log(response)
            app.loading = false;
            return response
        });
    });
    //axios
    // 添加请求拦截器
    axios.interceptors.request.use(function (config) {
        app.loading = true;
        return config;
    }, function (error) {
        return Promise.reject(error);
    });

    // 添加响应拦截器
    axios.interceptors.response.use(function (response) {
        app.loading = false;
        return response;
    }, function (error) {
        app.loading = false;
        return Promise.reject(error);
    });

    //echart折线图配置
    var LineChart = echarts.init(document.getElementById('lineMain'));
    //LineChart.showLoading();
    //LineChart.hideLoading();
    var lineOption = {
        title: {
            left: 'center',
            text: '月流失率变化',
        },
        tooltip: {
            trigger: 'axis',
        },
        xAxis: {
            type: 'category',
            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
        },
        yAxis: {
            type: 'value',
            axisLabel: {
                formatter: '{value} %'
            }
        },
        toolbox: {
            feature: {
                magicType: { type: ['line', 'bar'] },
                //restore: {},
                saveAsImage: {}
            },
            right: 60,
            top: 30,
        },
        series: [{
            name: "平均流失率(%)",
            type: 'line',
            toolbox: {
                show: true,
                feature: {
                    dataZoom: {
                        yAxisIndex: 'none'
                    },
                    dataView: { readOnly: false },
                    magicType: { type: ['line', 'bar'] },
                    restore: {},
                    saveAsImage: {}
                }
            },
            itemStyle: {
                normal: {
                    label: {
                        show: true, //开启显示
                        position: 'top', //在上方显示
                        textStyle: { //数值样式
                            color: 'black',
                            fontSize: 12
                        },
                        formatter: "{c}%"
                    }
                }
            },
            //markLine: {
            //    data: [
            //        { type: 'average', name: '平均值' },
            //        [{
            //            symbol: 'none',
            //            x: '90%',
            //            yAxis: 'max'
            //        }, {
            //            symbol: 'circle',
            //            label: {
            //                normal: {
            //                    position: 'start',
            //                    formatter: '最大值'
            //                }
            //            },
            //            type: 'max',
            //            name: '最高点'
            //        }]
            //    ]
            //}
        }]
    };
    LineChart.setOption(lineOption);

    //echart柱状图配置
    var BarChart = echarts.init(document.getElementById('barMain'));
    var barOption = {
        title: {
            left: 'center',
            text: '月流失率数据',
        },
        tooltip: {
            trigger: 'axis',
            //formatter: function (params, ticket, callback) {
            //    return params;
            //},
        },
        xAxis: {
            type: 'category',
            data: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月']
        },
        yAxis: {
            type: 'value',
            axisLabel: {
                formatter: '{value} %'
            }
        },
        toolbox: {
            feature: {
                magicType: { type: ['bar', 'line'] },
                //restore: {},
                saveAsImage: {}
            },
            right: 60,
            top: 30,
        },
        //label: {
        //    show: true, //开启显示
        //    position: 'top', //在上方显示
        //    textStyle: { //数值样式
        //        color: 'black',
        //        fontSize: 12
        //    },
        //    formatter: "{c}%",
        //},
    };
    BarChart.setOption(barOption);
</script>