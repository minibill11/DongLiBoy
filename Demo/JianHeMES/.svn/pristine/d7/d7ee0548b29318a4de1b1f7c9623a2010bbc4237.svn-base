@model IEnumerable<JianHeMES.Models.Personnel_Roster>
<link href="~/Scripts/Bootstraps/Element-ui.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/Element-ui.js"></script>
<script src="~/Scripts/axios.min.js"></script>
@{
    ViewBag.Title = "批量添加员工";
}
<style>
    .color2{
        color:red;
        font-size:16px;
    }
    .has-gutter tr th .cell,.el-table__row td .cell{
        text-align:center;
    }
    .el-table__header tr,
    .el-table__header th {
        font-size:13px;
        padding: 0;
        height: 30px;
    }

    .el-table__body tr,
    .el-table__body td {
        padding: 0;
        font-size:12px;
        height: 30px;
    }
    textarea{
        height:30px;
        width:15%;
    }
    .inputtext{
        margin-top:25px;
        display:inline-flex;
        width:100%;
    }
   h4{
       width:75%;
       font-size:20px;
       text-align:center;
   }
   .bottomInfo{
       display:flex;
       justify-content:space-between;
   }
   .pone{
       align-self:flex-end;
       font-size:14px;
   }
</style>



<div class="container" id="app">
    <div class="inputtext">
        <textarea v-model ="inputInfo" placeholder="表格粘贴处..."></textarea>
        <h4>批量添加员工</h4>
    </div>
    <el-table v-bind:data="postInfo" style="width: 100%" max-height="690" border stripe>
        <el-table-column prop="JobNum" label="工号" width="62">
        </el-table-column>
        <el-table-column prop="Name" label="中文名" width="63">
        </el-table-column>
        <el-table-column prop="Sex" label="性别" width="52">
        </el-table-column>
        <el-table-column prop="DateOfBirth" label="出生日期" width="78">
        </el-table-column>
        <el-table-column prop="Age" label="年龄" width="52">
        </el-table-column>
        <el-table-column prop="Education" label="学历" width="62">
        </el-table-column>
        <el-table-column prop="Department" label="部门名称" width="88">
        </el-table-column>
        <el-table-column prop="Position" label="职位名称" width="81">
        </el-table-column>
        <el-table-column prop="HireDate" label="入司时间" width="83">
        </el-table-column>

        <el-table-column prop="gongling" label="公司工龄" width="56">
        </el-table-column>

        <el-table-column prop="LastDate" label="最后工作日" width="83">
        </el-table-column>
        <el-table-column prop="Departments" label="一级部门" width="75">
        </el-table-column>
        <el-table-column prop="Status" label="员工状态" width="70">
        </el-table-column>
        <el-table-column prop="levelType" label="级别名称" width="70">
        </el-table-column>
        <el-table-column prop="OnPostMonth" label="在岗月数" width="50">
        </el-table-column>s
        <el-table-column prop="fenbu" label="工龄分布" width="60">
        </el-table-column>
        <el-table-column label="操作" width="53">
            <template slot-scope="scope">
                <el-button v-on:click.native.prevent="deleteRow(scope.$index, postInfo)"
                           type="text"
                           size="small">
                    移除
                </el-button>
            </template>
        </el-table-column>
    </el-table>
    <div class="bottomInfo" v-if="flag">
        <p class="pone">本次共提交<span style="color:red;font-size:18px;">{{count}}</span>条数据！<span v-if="flags">存在重复数据，请移除其中一项并点击上传！</span></p>
        <p><el-button  v-on:click="checkDatas" type="primary" size="mini">上传<i class="el-icon-upload el-icon--right"></i></el-button>
            <el-button v-on:click="delated" type="primary" size="mini">清空<i class="el-icon-delete el-icon--right"></i></el-button>
        </p>
    </div>
</div>


<script>

    var vm = new Vue({
        el: "#app",
        data: {
            inputInfo: '',
            postInfo: '',    //渲染的数据
            postInfos: '',  //上传的数据
            count: "",
            flag:false,
            flags:false
        },
        methods: {
            delated() {
                this.inputInfo = '';
                this.postInfo = '';
                this.postInfos = '';
                //this.flag = false;
            },
            deleteRow(index, rows) {
                $(rows).removeClass("color2");
                rows.splice(index, 1);
                this.count--;
            },
            postDatas() {
                if(this.postInfo.length !=''){
                     axios.post('/Personnel_Roster/Batch_InputStaff', { inputList: this.postInfos }).then(res => {
                    this.$message({
                    message: res.data,
                    type: 'success',
                    center: true
                    });
                    this.inputInfo = '';
                    this.postInfo = '';
                    this.postInfos = '';
                }).catch(res=>{
                    this.$message.error({
                        message: res.data,
                    center:true
                });
                })
                } else {
                    this.$message.error({
                        message: '请输入数据！'
                    });
                }
            },
            checkDatas() {
                var row = $('table tbody tr');
                var rows2 = [];
                for (var i = 0; i < row.length; i++) {
                    rows2.push(row[i])
                };
                var aa = [];
                for (var i = 0; i < rows2.length; i++) {
                    var one = rows2[i].children[0].children[0];
                    var one2 = rows2[i].children[1].children[0];
                    var cc = 0;
                    //console.log(one.value);
                    for (var j = 0; j < rows2.length; j++) {
                        var two = rows2[j].children[0].children[0];
                        var two2 = rows2[j].children[1].children[0];
                        if (one.innerText == two.innerText && one2.innerText == two2.innerText) {
                            cc++;
                            aa.push(cc);
                        }
                    };
                    if (cc > 1) {
                        $(one).addClass("color2");
                        $(one2).addClass("color2");
                    } else {
                        $(one).removeClass("color2");
                        $(one2).removeClass("color2");
                    }
                };
                var max = Math.max.apply(null, aa);
                if (max > 1) {
                    console.log(aa);
                    this.flags = true;
                    return false;
                } else if (max <= 1) {
                    this.flags = false;
                    this.postDatas();
                }
            }
        },
        watch: {
            inputInfo(val) {   //粘贴功能
                if (this.inputInfo == '') { this.flag = false } else { this.flag = true }
                var valOfPaste = val.split("\n");
                valOfPaste.pop();
                var initDatas = []
                valOfPaste.forEach((item, i) => {
                    var items = item.split("\t");
                    initDatas.push(items)
                })
                var datas =[] ;
                for (let i = 0; i < initDatas.length; i++) {
                    var JobNum = initDatas[i][0];     //工号
                    var Name = initDatas[i][1];        //姓名
                    var Sex = initDatas[i][2]     //性别
                    var DateOfBirth = initDatas[i][3];     //出生日期
                    var Age = initDatas[i][4];             //年龄
                    var Education = initDatas[i][5];  //学历
                    var Department = initDatas[i][6];  //部门
                    var Position = initDatas[i][7];  //职位名称
                    var HireDate = initDatas[i][8] ? initDatas[i][8] + '上午08:30' : initDatas[i][8];    //入司时间
                    //var DP_Group = initDatas[i][9];     //组名
                    var gongling = initDatas[i][9];    //公司工龄
                    var LastDate = initDatas[i][10] ? initDatas[i][10] + '下午18:00' : initDatas[i][10];     //最后工作日期
                    var Departments = initDatas[i][11];  //一级部门
                    var Status = initDatas[i][12];  //员工状态
                    var levelType = initDatas[i][13];      //级别名称
                    var OnPostMonth = initDatas[i][14] == '' ? '0.00' : initDatas[i][14];    //在岗月数
                    var fenbu = initDatas[i][15];      //工龄分布
                    var data = { JobNum, Name, Sex, DateOfBirth, Age, Education, Department, Position, HireDate, gongling, LastDate, Departments, Status, levelType, OnPostMonth, fenbu}
                    datas.push(data)
                }
                this.postInfo = datas;

                


                //一下就为了帮后台处理性别数据
                var datass = [];
                for (let i = 0; i < initDatas.length; i++) {
                    var JobNum = initDatas[i][0];     //工号
                    var Name = initDatas[i][1];        //姓名
                    var Sex = initDatas[i][2] === '男' ? false : true;     //性别
                    var DateOfBirth = initDatas[i][3];     //出生日期
                    var Education = initDatas[i][4];  //学历
                    var DP_Group = initDatas[i][5];     //组名
                    var HireDate = initDatas[i][6];    //入司时间
                    var LastDate = initDatas[i][7];     //最后工作日期
                    var Department = initDatas[i][8];  //部门
                    var Status = initDatas[i][9];  //员工状态
                    var levelType = initDatas[i][10];      //级别名称
                    var OnPostMonth = initDatas[i][11];    //在岗月数
                   // var OnPostMonthss = initDatas[i][12];    //员工工龄分布
                    var data = { JobNum, Name, Sex, DateOfBirth, Education, DP_Group, HireDate, LastDate, Department, Status, levelType, OnPostMonth}
                    datass.push(data)
                    }
                this.postInfos = datass;
                this.count = this.postInfo.length;
            }
        }
    })
</script>
