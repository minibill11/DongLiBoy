@model JianHeMES.Models.OrderMgm
@{
    ViewBag.Title = "创建订单";
}
@*<script src="~/Scripts/jquery-1.11.3.js"></script>*@
<style>
    .table {
        table-layout: fixed;
    }

        .table span {
            color: rgb(51, 122, 183);
        }

    .panel-title {
    }

    .table select, .table input {
        width: 60px;
    }

    .s56789m {
        height: 21px;
        padding: 1px;
        text-align: center;
    }

    .isempty {
        border: 1px solid red;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="app" class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-4">
            <h3>@ViewBag.Title</h3><hr />
            <div class="form-group">
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <input data-val="true" data-val-required="订单号 字段是必需的。" id="OrderNum" name="OrderNum" v-model="autoOrdernum" onkeyup="this.value=this.value.toUpperCase()" class="form-control text-box single-line input-validation-error" aria-describedby="OrderNum-error" aria-invalid="true" type="text">
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label for="BarCode_Prefix" class="control-label col-md-4">条码前缀</label>
                <div class="col-md-8">
                    <input data-val="true" data-val-required="条码前缀 字段是必需的。" v-model="trueOrderNum" id="BarCode_Prefix" name="BarCode_Prefix" readonly="readonly" class="form-control text-box single-line valid" type="text">
                    <span data-valmsg-for="BarCode_Prefix" data-valmsg-replace="true" class="field-validation-valid text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContractDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ContractDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContractDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeliveryDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanInputTime, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PlanInputTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlanInputTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlanCompleteTime, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PlanCompleteTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlanCompleteTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PlatformType, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PlatformType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PlatformType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProcessingRequire, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.ProcessingRequire, new { htmlAttributes = new { @class = "form-control" } })*@
                    <select class="form-control" name="ProcessingRequire">
                        <option value="">请选择</option>
                        <option value="有铅，灯面">有铅，灯面</option>
                        <option value="有铅，IC面">有铅，IC面</option>
                        <option value="无铅，灯面">无铅，灯面</option>
                        <option value="无铅，IC面">无铅，IC面</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.ProcessingRequire, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StandardRequire, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @*@Html.EditorFor(model => model.StandardRequire, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input type="radio" name="StandardRequire" value="军用" /><label class="control-label">军用</label>&nbsp;&nbsp;
                    <input type="radio" name="StandardRequire" value="商用" /><label class="control-label">商用</label>
                    @Html.ValidationMessageFor(model => model.StandardRequire, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CapacityQ, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CapacityQ, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CapacityQ, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.HandSampleScedule, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.HandSampleScedule, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HandSampleScedule, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Boxes, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Boxes, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Boxes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Models, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Models, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Models, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModelsMore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ModelsMore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModelsMore, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Powers, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Powers, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Powers, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PowersMore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PowersMore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PowersMore, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AdapterCard, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AdapterCard, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdapterCard, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AdapterCardMore, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AdapterCardMore, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AdapterCardMore, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.IsRepertory, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.IsRepertory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsRepertory, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BarCodeCreated, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BarCodeCreated, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BarCodeCreated, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BarCodeCreateDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BarCodeCreateDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BarCodeCreateDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BarCodeCreator, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BarCodeCreator, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.BarCodeCreator, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompletedRate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.CompletedRate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.CompletedRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" value="创建" class="btn btn-default" />
                </div>
            </div>
            <div>
                @Html.ActionLink("返回", "Index")
            </div>
        </div>

        <div class="col-md-offset-1 col-md-7">
            <br />
            <br />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h5 class="panel-title" style="text-align:center;">创建条码前缀</h5>
                </div>
                <div class="panel-body">
                    <table class="table">
                        <tr>
                            <td></td>
                            <td>一二码：</td>
                            <td>三码：</td>
                            <td>四码：</td>
                            <td>五六七码：</td>
                            <td>八九码：</td>
                        </tr>
                        <tr>
                            <td>条码选项：</td>
                            <td>
                                <select v-model="s12m" v-bind:class="(s12m=='')?'isempty':''">
                                    <option></option>
                                    <option>18</option>
                                    <option>19</option>
                                    <option>20</option>
                                    <option>21</option>
                                    <option>22</option>
                                </select>
                            </td>
                            <td>
                                <select v-model="s3m" v-bind:class="(s3m=='')?'isempty':''">
                                    <option></option>
                                    <option>A</option>
                                    <option>B</option>
                                    <option>C</option>
                                    <option>D</option>
                                    <option>E</option>
                                </select>
                            </td>
                            <td>
                                <select v-model="s4m" v-bind:class="(s4m=='')?'isempty':''">
                                    <option></option>
                                    <option>A</option>
                                    <option>B</option>
                                    <option>C</option>
                                    <option>D</option>
                                    <option>E</option>
                                    <option>F</option>
                                    <option>J</option>
                                    <option>K</option>
                                    <option>G</option>
                                </select>
                            </td>
                            <td><input v-model="s567m" v-bind:class="(s567m=='')?'isempty':''" class="s56789m" type="text" maxlength="3" onkeyup="value=value.replace(/[^\d]/g,'')" /></td>
                            <td><input v-model="s89m" v-bind:class="(s89m=='')?'isempty':''" class="s56789m" type="text" maxlength="2" onkeyup="value=value.replace(/[^\d]/g,'')" /></td>
                            @*<td>
                                    <select v-model="s89m" v-bind:class="(s89m=='')?'isempty':''">
                                        <option></option>
                                        <option>01</option>
                                        <option>02</option>
                                        <option>03</option>
                                        <option>04</option>
                                        <option>05</option>
                                    </select>
                                </td>*@
                        </tr>
                        <tr><th colspan="6" style="font-size:18px; text-align:center;padding:20px">编码说明-共十五码(XX X X XXX XX X XXXXX)</th></tr>
                        <tr>
                            <th style="text-align:right">一二码：</th>
                            <td colspan="5">
                                数字码，表示订单年份字母码，A表示正常订单、B表示补单；
                                <span> 例如： 17-17年</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">三码：</th>
                            <td colspan="5">
                                字母码，A表示正常订单、B表示补单、表示二次补单D表示三次补单、E表示其他订单；
                                <span> 例如：A-正常订单，B-P1，C-P2，D-P3，E-其它订单</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">四码：</th>
                            <td colspan="5">
                                字母码，表示订单区域；
                                <span> 例如：A-GA系列订单，B-GY系列订单，C-LA系列订单，D-LY系列订单，E-YA系列订单，F-YY系列订单，J-借样订单，K-库存订单，G-其它订单</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">五六七码：</th>
                            <td colspan="5">
                                数字码：表示订单号；
                                <span> 例如：001-001</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">八九码：</th>
                            <td colspan="5">
                                数字码，表示订单批次；
                                <span> 例如：01— -1的工单，02— -2的工单，03— -3的工单，04— -4的工单，05— -5的工单</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">十码：</th>
                            <td colspan="5">
                                字母码，由系统生成，表示预留码，用A表示，后续有需求时再定义；
                                <span> 例如：A表示模组</span>
                            </td>
                        </tr>
                        <tr>
                            <th style="text-align:right">十一到十五：</th>
                            <td colspan="5">
                                数字码，由系统生成，表示流水号；
                                <span> 例如:00001-流水号1，00002-流水号2，00003-流水号3，00004-流水号4</span>
                            </td>
                        </tr>
                        <tr style="font-size:16px;">
                            <th colspan="2">例如:18AA13201A0001</th>
                            <th colspan="4" class="text-danger">表示：2018-GA132-1订单编号0001模组</th>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        @*//防位移*@
        <div class="form-group"><div class="col-md-offset-2 col-md-8"></div></div>
    </div>
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script type="text/javascript">
        var app = new Vue({
            el: '#app',
            data: {
                s12m: "",
                s3m: "",
                s4m: "",
                s567m: "",
                s89m: "",
                ordernum: "",
                trueOrderNum: "",
                autoOrdernum: ""
            },
            watch: {
                ordernum: function (val) {
                    if (val.length == 9) {
                        this.trueOrderNum = val;
                    } else {
                        this.trueOrderNum = "";
                    };
                },
                autoOrdernum: function (val) {
                    var cutVal = val.split("");
                    //console.log(cutVal)
                    this.s12m = (cutVal[2] + cutVal[3]);
                    var s4m = (cutVal[5] + cutVal[6]);
                    switch (s4m) {
                        case "GA": s4m = "A"; break;
                        case "GY": s4m = "B"; break;
                        case "LA": s4m = "C"; break;
                        case "LY": s4m = "D"; break;
                        case "YA": s4m = "E"; break;
                        case "YY": s4m = "F"; break;
                        default: s4m = "";
                    };
                    this.s4m = s4m;
                    if (isNaN(parseInt(cutVal[7])) == false && isNaN(parseInt(cutVal[8])) == false && isNaN(parseInt(cutVal[9])) == false) {
                        this.s567m = (cutVal[7] + cutVal[8] + cutVal[9]);
                    } else {
                        this.s567m = "";
                    };
                    if (val.length <= 12) {
                        this.s89m = ("0" + cutVal[11]);
                    } else if (val.length == 13) {
                        this.s89m = (cutVal[11] + cutVal[12]);
                    } else {
                        this.s89m = "";
                    };
                },
                s12m: function (val) {
                    switch (val) {
                        case "18": this.s12m = "18"; break;
                        case "19": this.s12m = "19"; break;
                        case "20": this.s12m = "20"; break;
                        case "21": this.s12m = "21"; break;
                        case "22": this.s12m = "22"; break;
                        default: this.s12m = "";
                    };
                },
                //s3m: function (val) {
                //},
                s4m: function (val) {
                    if (val == "K") {
                        $("#IsRepertory").prop('checked', true);
                    } else {
                        $("#IsRepertory").prop('checked', false);
                    };
                },
                s567m: function (val) {
                    if (val == val.replace(/[^\d]/g, '')) {
                        app.ordernum = app.s12m + app.s3m + app.s4m + app.s567m + app.s89m;
                    } else {
                        app.s567m = "";
                    };
                },
                s89m: function (val) {
                    if (val == val.replace(/[^\d]/g, '')) {
                        app.ordernum = app.s12m + app.s3m + app.s4m + app.s567m + app.s89m;
                    } else {
                        app.s89m = "";
                    };
                    //switch (val) {
                    //    case "01": this.s89m = "01"; break;
                    //    case "02": this.s89m = "02"; break;
                    //    case "03": this.s89m = "03"; break;
                    //    case "04": this.s89m = "04"; break;
                    //    case "05": this.s89m = "05"; break;
                    //    default: this.s89m = "";
                    //};
                }
            }
        });

        $("select").change(function () {
            app.ordernum = app.s12m + app.s3m + app.s4m + app.s567m + app.s89m;
        });
        $('#IsRepertory').css('cursor', "not-allowed").bind('click', function () {
            return false;
        });
    </script>
}