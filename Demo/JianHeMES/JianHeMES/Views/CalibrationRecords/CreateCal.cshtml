@model JianHeMES.Models.CalibrationRecord

@{
    ViewBag.Title = "开始校正";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>校正记录</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderNum,
            ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @*@Html.DropDownList("OrderNum", (List<SelectListItem>)ViewBag.OrderList)*@
                @*@Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BarCodesNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarCodesNum, new { htmlAttributes = new { @class = "form-control", onkeyup = "this.value=this.value.toUpperCase()" } })
                @Html.ValidationMessageFor(model => model.BarCodesNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleGroupNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleGroupNum, new { htmlAttributes = new { @class = "form-control", onkeyup = "this.value=this.value.toUpperCase()" } })
                @Html.ValidationMessageFor(model => model.ModuleGroupNum, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
        @Html.LabelFor(model => model.BeginCalibration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BeginCalibration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BeginCalibration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FinishCalibration, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FinishCalibration, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FinishCalibration, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Normal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Normal)
                @Html.ValidationMessageFor(model => model.Normal, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AbnormalDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AbnormalDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AbnormalDescription, "", new { @class = "text-danger" })
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CalibrationTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CalibrationTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CalibrationTime, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="开始校正" class="btn btn-default" />  @ViewBag.msg
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>
<script>
    var localOrder = localStorage.getItem('Order');
    if (localOrder != null) {
        $("#OrderNum").val(localOrder);
    }
    $("#OrderNum").change(function (val) {
        localStorage.setItem('Order', val.target.value);
        $("#BarCodesNum").select();
    })
    $("#BarCodesNum").select();
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
