@model JianHeMES.Models.ModuleGroupCalibrationViewModel

@{
    ViewBag.Title = "校正信息查询";
}
@Scripts.Render("~/Scripts/highcharts")
<link href="~/Scripts/Bootstraps/bootstrap-select.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-select.js"></script>
<style>
    .selectpicker {
        border: 1px solid #ccc;
    }

    .dropdown-menu > li > a {
        padding: 3px 10px;
    }

    .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 150px;
    }

    @@media screen and (max-width: 768px) {
        .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
            width: 135px;
        }

        .selectpicker {
            font-size: 13px;
        }
    }
    /*替换版本样式：*/
    .progress {
        cursor: pointer;
        margin-bottom: 0px;
    }

    td, th {
        width: 8%;
    }

    #Legend {
        font-size: 10px;
    }

        #Legend div {
            margin-bottom: 5px;
            height: 15px;
        }

    .modal-body > .container {
        width: auto;
        padding: 0;
    }

    .notdo {
        width: 200px;
        height: 100px;
        overflow: auto;
        padding: 0px 15px;
        border: none;
    }

    .selectpicker {
        border: 1px solid #ccc;
    }

    .dropdown-menu > li > a {
        padding: 3px 10px;
    }

    .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
        width: 150px;
    }

    @@media screen and (max-width: 768px) {
        .bootstrap-select:not([class*="col-"]):not([class*="form-control"]):not(.input-group-btn) {
            width: 135px;
        }

        .selectpicker {
            font-size: 13px;
        }
    }
    /*Cage*/
    .fqc-first {
        height: 35px;
        width: 100%;
        text-align: center;
    }

    .fqc-content-topbutton {
        width: 130px;
        height: 34px;
        /*margin: 15px 100px;*/
        border: none;
        border-radius: 5px;
        box-shadow: 0 2px 3px #888888;
        background-color: #e0e0e0;
        transition: all linear .2s;
    }

        .fqc-content-topbutton:hover {
            background-color: burlywood;
        }

    .fqc-index-content {
        height: 35px;
        margin-top: 8px;
        margin-bottom: 0px;
    }

    .fqc-index-content-inner {
        text-align: left;
        float: left;
        height: 35px;
        width: 250px;
    }

        .fqc-index-content-inner:nth-child(1) {
            width: 240px;
            margin-left: 98px;
        }

        .fqc-index-content-inner:nth-child(2) {
            width: 220px;
        }

        .fqc-index-content-inner:nth-child(3) {
            width: 240px;
            margin-left: 25px;
        }

        .fqc-index-content-inner:nth-child(4) {
            width: 260px;
            margin-left: 0px;
        }

    .btn-group > .btn:first-child {
        border: 1px solid rgba(178, 167, 167, 0.5);
    }

    .fqc-index-content-inner:nth-child(3) > input {
        width: 150px;
    }

    .fqc-index-content-inner:nth-child(4) > input {
        width: 135px;
        height: 34px;
        display: inline-block;
    }

    .fqc-index-content-inner:nth-child(4) > button {
        float: right;
        margin-left: 10px;
        height: 34px;
        border: none;
        background-color: #e0e0e0;
        border-radius: 5px;
        transition: all linear .1s;
    }

        .fqc-index-content-inner:nth-child(4) > button:hover {
            background-color: burlywood;
            color: #fff;
            box-shadow: 0 2px 3px #888888;
        }
    /*中间隐藏部分样式*/
    .fqc-medle-content-left {
        width: 730px;
        height: 100%;
        margin-left: 23px;
        display: inline-block;
    }

    .fqc-medle-content-left-top {
        height: 180px;
        /*border-bottom: 1px solid #808080;*/
    }

    .fqc-medle-content-left-bottom {
        height: 60%;
        width: 155px;
        float: left;
    }

        .fqc-medle-content-left-bottom:nth-child(3) {
            margin-left: 55px;
        }

        .fqc-medle-content-left-bottom:nth-child(4) {
            margin-left: 55px;
        }

    .fqc-medle-content-left-top-inner {
        height: 20px;
        width: 155px;
        float: left;
        margin-left: 0px;
    }

        .fqc-medle-content-left-top-inner:nth-child(9) {
            width: 250px;
        }

    .fqc-medle-content-left-top > span {
        display: block;
        height: 30px;
        font-size: 16px;
    }

    .fqc-medle-content-left-bottom > span {
        height: 13%;
        display: block;
    }

    .fqc-medle-content-left-bottom-inner {
        height: 120px;
        width: 170px;
        text-align: center;
        overflow-y: auto;
    }

        .fqc-medle-content-left-bottom-inner > p {
            font-size: 10px;
            height: 13px;
            width: 150px;
            margin: 1px;
            display: inline-block;
            padding-bottom: 2px;
            border-radius: 8px;
            background-color: none;
            transition: all linear 0.1s;
        }

            .fqc-medle-content-left-bottom-inner > p:hover {
                font-size: 16px;
                height: 20px;
                background-color: burlywood;
            }

    .fqc-medle-content-left-top-inner:nth-child(8) {
        width: 290px;
    }

    .fqc-medle-content-left-top-inner:nth-child(3) {
        width: 200px;
    }

    .fqc-medle-content-left-top-inner:nth-child(7) {
        width: 215px;
    }
    /*RIGHT*/
    .fqc-medle-content-right {
        height: 210px;
        width: 310px;
        float: right;
    }

    .highcharts-title > tspan {
        font-size: 16px;
    }

    tspan {
        font-size: 11px;
    }
    /*输出的表头部分*/
    .fqc-for-tableheader {
        height: 35px;
        margin-top: 5px;
        float: left;
        width: 500px;
    }

    .fqc-for-tableheader-inner {
        font-size: 18px;
    }

    strong {
        color: black;
    }

    .fqc-hidden-content {
        border-bottom: 1px solid #808080;
    }
    /*输出表格样式--无效样式？*/
    .table > tbody > tr {
        font-size: 13px;
        height: 50px;
    }

        .table > tbody > tr > td {
            height: 50px;
        }

    .table > tbody > tr {
        height: 30px;
    }

    tablescroll {
        height: 300px;
        overflow-y: hidden;
    }

    .table-title > tbody > tr > th {
        font-size: 13px;
    }

        .table-title > tbody > tr > th:nth-child(3) {
            text-align: center;
        }

        .table-title > tbody > tr > th:nth-child(4) {
            text-align: center;
        }

        .table-title > tbody > tr > th:nth-child(5) {
            text-align: center;
        }
    /*媒体查询--此为主要媒体查询样式编写区域：bootstrap移动端优先，所以必须移动端为常规样式。pc端为媒体查询样式*/
    @@media (min-width:450px) and (max-width:1500px) {
        strong {
            color: black;
        }

        .fqc-medle-content-left-top-inner {
            margin-left: 0px;
        }

        .fqc-hidden-content {
            height: 350px;
            border-bottom: 1px solid #808080;
        }
    }
    /*媒体查询--此为补充项*/
    @@media (max-width:450px) {
        .fqc-index-content-inner {
            margin-top: 5px;
        }

        .fqc-medle-content-right {
            display: none;
        }

        .fqc-medle-content-left-bottom {
            margin-left: 0px;
        }

        .fqc-for-tableheader-inner {
            font-size: 16px;
        }
    }

    .fqc-index-content-inner > button {
        box-shadow: 0 2px 3px #888888;
        margin-left: 5px;
    }

    .highcharts-background {
        width: 400px;
        height: 300px;
    }

    .fortableposition {
        float: right;
    }
  
    @@media (max-width:400px) {
        .fqc-medle-content-left {
            margin-left: 0px;
        }

        .fqc-medle-content-left-top {
            width: 290px;
            height: 185px;
        }
        /*以上媒体查询公用样式部分*/

        .fqc-index-content-inner:nth-child(1), .fqc-index-content-inner:nth-child(3) {
            margin-left: 0px;
        }

        .fqc-index-content-inner:nth-child(4) {
            margin-left: 18px;
        }
        .table-top{

        }
        .fqc-index-content-inner:nth-child(4){
            margin-left:0px;
        }
    }
</style>
<h3 class="text-center" style="margin-top:10px;">@ViewBag.Title</h3>
<div class="container text-center fqc-first">
    @Html.ActionLink("开始校正工作", "CreateCal", "", new { @class = "btn fqc-content-topbutton " })
</div>

@using (Html.BeginForm("Index", "CalibrationRecords", FormMethod.Post, new { id = "searchForm", @class = "text-center" }))
{
    @Html.AntiForgeryToken()
    <div class="container fqc-index-content">
        <form asp-controller="CalibrationRecords" asp-action="Index" method="post">
            <div class="fqc-index-content-inner">
                <span>订单号：</span>@Html.DropDownList("orderNum", (List<SelectListItem>)ViewBag.OrderList, "全部", new { @class = "selectpicker", data_live_search = "true", data_style = "form-control" })
            </div>
            <div class="fqc-index-content-inner">
                <span>条码号：</span><input type="text" id="barcodeNumber" class="form-control" style="display:inline;width:150px;" name="barcodenum" />
            </div>
            <div class="fqc-index-content-inner">
                <span>模组号：</span><input type="text" class="form-control" style="display:inline;width:150px;" name="moduleGroupNum" />
            </div>

            <div class="fqc-index-content-inner">
                <span>描&nbsp;&nbsp;述：</span>
                <input type="text" class="form-control" style="display:inline;width:150px;" name="Remark" />
                @*<input type="hidden" id="PageIndex" name="PageIndex" value="0" />*@
                <button id="searchcButton">查找</button>
                <input type="submit" id="searchButton" class="btn btn-default hidden tex" value="查找" />
            </div>
        </form>
    </div>

}

<div id="query" class="container fqc-hidden-content" style="@ViewBag.Display">
    <div class="fqc-medle-content-left">
        <div id="theTop" class="fqc-medle-content-left-top">
            <span style="height:25px;">订单 <strong class="testcolor">@ViewBag.orderNum</strong>模组校正基本情况</span>
            <div class="fqc-medle-content-left-top-inner">
                <p>订单的模组总量：<strong>@ViewBag.Quantity</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>经过校正数量：<strong>@ViewBag.RecordCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>正常数量：<strong>@ViewBag.NormalCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>异常数量：<strong>@ViewBag.AbnormalCount</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>完成率：<strong><span>{{FinishRate}}</span>%</strong> </p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>校正总时长: <strong>@ViewBag.TotalTime</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>平均校正时长: <strong>@ViewBag.AvgTimeSpan</strong></p>
            </div>
            <div class="fqc-medle-content-left-top-inner">
                <p>查询时间： <strong><span>{{message}}</span> </strong></p>
            </div>
        </div>
    </div>
    <div id="container2" class="fqc-medle-content-right"></div>
</div>

<div class="container fqc-for-tableheader" style="@ViewBag.Display">
    <p class="fqc-for-tableheader-inner">订单 @ViewBag.orderNum 详细校正记录：</p>
</div>
<div class="table-top">
    <table class="table-title" style="width:1155px;height:30px;">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].OrderNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].BarCodesNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].ModuleGroupNum)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].BeginCalibration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].FinishCalibration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].RepetitionCalibration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].RepetitionCalibrationCause)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].CalibrationTimeSpan)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].Normal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].AbnormalDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AllCalibrationRecord[0].Operator)
            </th>
            <th></th>
        </tr>
    </table>
</div>
<div style="overflow:auto;height:380px;width:1140px;">
    <table class="table">

        @if (Model != null)
        {
            foreach (var item in Model.AllCalibrationRecord)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BarCodesNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ModuleGroupNum)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BeginCalibration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FinishCalibration)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.RepetitionCalibration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RepetitionCalibrationCause)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CalibrationTimeSpan)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Normal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AbnormalDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Operator)
                    </td>
                    <td>
                        @{
                            var UserName = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).UserName;
                            var UserRole = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Role;
                            var UserDepartment = Session["User"] == null ? string.Empty : ((JianHeMES.Models.Users)Session["User"]).Department;
                        }
                        @if ((UserDepartment == "装配1部" && UserName == "段勇") || UserRole == "系统管理员")
                        {
                            @Html.ActionLink("编辑", "Edit", new { id = item.ID })
                        }
                        @*|*@
                        @Html.ActionLink("详细", "Details", new { id = item.ID }) @*|*@
                        @*@Html.ActionLink("删除", "Delete", new { id=item.ID })*@
                    </td>
                </tr>
                                }

                            }
    </table>
</div>
@*-----------------------分页功能----------------------------------------------------------------------------------------*@
@*<div class="text-center">
        <div id="pagebar">
            @for (var i = 0; i < ViewBag.PageCount; i++)
            {
                if (i == ViewBag.PageIndex)
                {
                    <span style="font-size:25px" class="currentpagenumber">  @(i + 1)  </span>
                }
                else
                {
                    <a class="pagenumber" style="font-size:20px" href="javascript:;">  @(i + 1)  </a>
                }
            }
        </div>
    </div>*@
<script type="text/javascript">
    var query = new Vue({
        el: '#query',    //与div中的id名对应
        data: {
            message: new Date().toLocaleString(),  //输出查询时间
            floatmessage: '订单号'+'@ViewBag.orderNum',
            Quantity:@ViewBag.Quantity,
            NormalCount:@ViewBag.NormalCount,
        },
        computed:{
            FinishRate: function (){
                return (this.NormalCount/this.Quantity*100).toFixed(1)
            }
        }
    });

    Highcharts.chart('container2', {
        chart: {
            type: 'pie',
            options3d: {
                enabled: true,
                alpha: 30,
                beta: 0
            }
        },
        title: {
            text: '订单 @ViewBag.orderNum 基本情况'
        },
        tooltip: {
            pointFormat: '<b>{point.percentage:.1f}%</b>'//'{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                allowPointSelect: true,
                cursor: 'pointer',
                depth: 35,
                dataLabels: {
                    enabled: true,
                    formatter:function(){           // '{point.name}'
                        if(this.percentage >0 )
                        { return this.point.name;}
                        else if (this.percentage >=100 )
                        { return '已全部完成';}
                    }
                }
            }
        },
        series: [{
            type: 'pie',
            name: '',
            data: [
                ['已完成 @ViewBag.NormalCount 块',@ViewBag.NormalCount],
                ['未完成 @ViewBag.NeverFinish 块',@ViewBag.NeverFinish]
            ]
        }]
    });
</script>
@section scripts {
    <script>
        function submitForm(pagenumber) {
            pagenumber = parseInt(pagenumber, 10);
            $('#PageIndex').val(pagenumber - 1);
            $('#searchForm').submit();
        }

        $(function () {
            $('.selectpicker').selectpicker();
            $('#searchButton').click(function () {
                submitForm($('#pagebar .currentpagenumber').text());
            });

            $('#pagebar .pagenumber').click(function () {
                submitForm($(this).text());
            });

        });
        $("#searchcButton").click(function(event){
            event.preventDefault();
            if($("#orderNum").val()!="" || $("#barcodeNumber").val()!=""){
                $("#searchButton").click();
            }
        })
    </script>
}