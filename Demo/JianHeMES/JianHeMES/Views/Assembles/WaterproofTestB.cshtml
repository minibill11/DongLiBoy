@model JianHeMES.Models.Assemble

@{
    ViewBag.Title = "防水测试开始";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>防水测试开始</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.WaterproofTestFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.WaterproofTestTimeSpan, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.WaterproofAbnormal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.WaterproofMaintaince, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.WaterproofTestFinish, new { @class = "control-label col-md-2" })

        @Html.HiddenFor(model => model.AssembleAdapterCardBT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleAdapterCardPrincipal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleAdapterCardFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleAdapterTime, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleAdapterFinish, new { @class = "control-label col-md-2" })

        @Html.HiddenFor(model => model.ViewCheckBT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleViewCheckPrincipal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ViewCheckFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ViewCheckTime, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ViewCheckAbnormal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ViewCheckFinish, new { @class = "control-label col-md-2" })

        @Html.HiddenFor(model => model.ElectricityCheckBT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssembleElectricityCheckPrincipal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ElectricityCheckFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ElectricityCheckTime, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ElectricityCheckAbnormal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.ElectricityCheckFinish, new { @class = "control-label col-md-2" })

        @Html.HiddenFor(model => model.PQCCheckBT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.AssemblePQCPrincipal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckTime, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckAbnormal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckFinish, new { @class = "control-label col-md-2" })



        <div class="form-group">
            @Html.LabelFor(model => model.BoxBarCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BoxBarCode, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.BoxBarCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remark, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="开始防水测试" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "AssembleIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
