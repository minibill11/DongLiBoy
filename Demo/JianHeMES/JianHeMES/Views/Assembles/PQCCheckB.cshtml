@model JianHeMES.Models.Assemble

@{
    ViewBag.Title = "PQC检查开始";
}
<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="hidden-xs">检查开始</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.BarCode_Prefix)

        @Html.HiddenFor(model => model.PQCCheckFT, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckTime, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckAbnormal, new { @class = "control-label col-md-2" })
        @Html.HiddenFor(model => model.PQCCheckFinish, new { @class = "control-label col-md-2" })



        <div class="form-group">
            @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderNum,
            ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @*@Html.DropDownList("OrderNum", (List<SelectListItem>)ViewBag.OrderList, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BoxBarCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BoxBarCode, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", onkeyup = "this.value=this.value.toUpperCase()" } })
                @Html.ValidationMessageFor(model => model.BoxBarCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remark, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="开始PQC检查工作" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "AssembleIndex")
</div>
<script>
    var localOrder = localStorage.getItem('Order');
    if (localOrder != null) {
        $("#OrderNum").val(localOrder);
    }
    $("#OrderNum").change(function (val) {
        localStorage.setItem('Order', val.target.value);
        $("#BoxBarCode").select();
    })
    $("#BoxBarCode").select();
    //$("#BarCodesNum").keyup(function (val) {
    //    console.log(val.target.value)
    //})
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
