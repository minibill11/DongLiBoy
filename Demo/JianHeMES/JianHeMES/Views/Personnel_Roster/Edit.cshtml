@model JianHeMES.Models.Personnel_Roster

@{
    ViewBag.Title = "修改员工信息";
}
<link href="~/Scripts/Bootstraps/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.js"></script>
<script src="~/Scripts/Bootstraps/bootstrap-datetimepicker.zh-CN.js"></script>
<script src="~/Scripts/axios.min.js"></script>
<style>
    input[type="date"].form-control {
        line-height: normal;
    }
</style>
@*<h4>修改员工信息</h4>*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>修改员工信息</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.JobNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JobNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JobNum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                女：@Html.RadioButtonFor(model => model.Sex, false)
                男：@Html.RadioButtonFor(model => model.Sex, true)
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control form_datetime2", style = "display:inline-block"  } })*@
                <input class="form-control form_datetime2 text-box single-line" data-val="true" data-val-date="字段 出生日期 必须是日期。"
                       id="DateOfBirth" name="DateOfBirth" style="display:inline-block" type="datetime" value="@Model.DateOfBirth.ToString().Split(' ')[0]">
                <span class="text-center" style="font-size:11px;color:#888;font-weight:300;">(点击选择日期)</span>
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DP_Group, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DP_Group, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DP_Group, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control form_datetime", style = "display:inline-block" } })
                <span class="text-center" style="font-size:11px;color:#888;font-weight:300;">(点击选择时间)</span>
                @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastDate, new { htmlAttributes = new { @class = "form-control form_datetime3", style = "display:inline-block" } })
                <span class="text-center" style="font-size:11px;color:#888;font-weight:300;">(点击选择时间)</span>
                @Html.ValidationMessageFor(model => model.LastDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, ViewBag.statusV as IEnumerable<SelectListItem>, new { @class = "form-control selectpicker", data_live_search = "true", data_style = "form-control" })
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.levelType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.levelType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.levelType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OnPostMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.OnPostMonth, new { htmlAttributes = new { @class = "form-control",readonly="readonly" } })*@
                <input class="form-control text-box single-line" data-val="true" data-val-number="字段 在岗月数 必须是一个数字。" data-val-required="在岗月数 字段是必需的。" readonly="readonly" id="OnPostMonth" name="OnPostMonth" type="text">
                @Html.ValidationMessageFor(model => model.OnPostMonth, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="保存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回查询页", "Index")
</div>
<script type="text/javascript">
    $(".form_datetime").datetimepicker({
        language: 'zh-CN',
        format: 'yyyy-mm-dd hh:ii:ss',
        autoclose: true,
        todayBtn: true,
    }).on('changeDate', function (e) {
        fun();
    });
    $(".form_datetime2").datetimepicker({
        language: 'zh-CN',
        format: 'yyyy-mm-dd',
        autoclose: true,
        todayBtn: true,
        minView: "month",
    });
    $(".form_datetime3").datetimepicker({
        language: 'zh-CN',
        format: 'yyyy-mm-dd hh:ii:ss',
        autoclose: true,
        todayBtn: true,
    }).on('changeDate', function (e) {
        fun();
    });
    $(function () {
        fun()
    });
    function fun() {
        let timelast = $("#LastDate").val();
        let timestart = $("#HireDate").val();
        if (timelast != '' && timestart != '') {
            axios.post("/Commonality/TwoDTforMonth_sub", {
                date2: timelast,
                date1: timestart,
            }).then(res=> {
                console.log(res)
                $("#OnPostMonth").val(res.data);
            }).catch(err=> {
                console.log(err);
            });
        };
    };
</script>  