@model JianHeMES.Models.Appearance

@{
    ViewBag.Title = "外观包装工作";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>外观包装工作</h2>
<style>
    #BarCodesNum {
        display: inline-block;
    }

    .RepertoryStyle {
        color: #555;
        padding: 6px 12px 6px 12px;
    }
</style>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@ViewBag.Title</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div id="isorder" class="form-group">
            @Html.LabelFor(model => model.OrderNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OrderNum,
            ViewBag.OrderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @*@Html.DropDownList("OrderNum", (List<SelectListItem>)ViewBag.OrderList, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.OrderNum, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ModuleGroupNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModuleGroupNum, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus",@readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.ModuleGroupNum, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.BarCodesNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BarCodesNum, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus", onkeyup = "this.value=this.value.toUpperCase()" } })
                <span class="RepertoryStyle">是否为库存：<input id="IsRepertory" type="checkbox" onclick="javascript: document.getElementById('hiddenIsRepertory').value = this.checked;"></span>
                <input id="hiddenIsRepertory" name="IsRepertory" type="hidden" value="false">
                @Html.ValidationMessageFor(model => model.BarCodesNum, "", new { @class = "text-danger" })
            </div>
        </div>
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.OQCCheckBT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OQCCheckBT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OQCCheckBT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OQCPrincipal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OQCPrincipal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OQCPrincipal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OQCCheckFT, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OQCCheckFT, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OQCCheckFT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OQCCheckTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OQCCheckTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OQCCheckTime, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.OQCCheckTimeSpan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OQCCheckTimeSpan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OQCCheckTimeSpan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Appearance_OQCCheckAbnormal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Appearance_OQCCheckAbnormal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Appearance_OQCCheckAbnormal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RepairCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RepairCondition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RepairCondition, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OQCCheckFinish, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                        @Html.EditorFor(model => model.OQCCheckFinish)
                        @Html.ValidationMessageFor(model => model.OQCCheckFinish, "", new { @class = "text-danger" })

                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="开始外观包装" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("返回", "Index")
</div>
<script src="~/Scripts/jquery-1.11.3.js"></script>
<script>
    $(function () {
        if (localStorage.getItem('isRepertory') == "true") {
            $("#IsRepertory").attr("checked", true);
            $("#isorder").hide();
            $("#hiddenIsRepertory").val(true);
            $("#OrderNum").removeAttr("name");
        };
        $("#IsRepertory").change(function () {
            console.log("1")
            localStorage.setItem('isRepertory', $(this).is(':checked'));
            if ($(this).is(':checked') == true) {
                $("#isorder").hide();
                $("#OrderNum").removeAttr("name");
            } else {
                $("#isorder").show();
                $("#OrderNum").attr("name", "OrderNum");
            }
        });

        var localOrder = localStorage.getItem('Order');
        if (localOrder != null) {
            $("#OrderNum").val(localOrder);
        }
        $("#OrderNum").change(function (val) {
            localStorage.setItem('Order', val.target.value);
            $("#BarCodesNum").select();
        })
        $("#BarCodesNum").select();
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
