
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<style>
    html, body, .container, .SMTLine {
        height: 98%;
    }

    body {
        background-color: #dff0d8;
        color: #555;
    }

    .SMTLineTitle {
        width: 100%;
        height: 18%;
        margin-bottom: 0 !important;
    }

        .SMTLineTitle > div {
            position: relative;
            float: left;
            width: 33.3%;
            height: 100%;
        }

    .Line, .Line > span {
        font-size: 50px;
        margin: 30px 0 0 0;
        text-align: center;
        color: #289c12;
        z-index: -2;
        overflow: hidden;
        white-space: nowrap;
    }

    .lineInfo {
        position: absolute;
        right: 0px;
        bottom: 1px;
        height: 80px;
        width: 200px;
        z-index: -1;
    }

    .SMTContent {
        position: relative;
        border-top: 2px solid #808080;
        width: 100%;
        height: 82%;
        margin-bottom: 0 !important;
    }

    .leftContent {
        position: absolute;
        left: 0;
        border-right: 2px solid #808080;
        width: 39%;
        height: 100%;
        padding: 50px 20px;
    }

        .leftContent div {
            margin-bottom: 30px;
            height: 34px;
        }

    .rightContent {
        position: absolute;
        right: 0;
        width: 60%;
        height: 100%;
        padding: 10px 100px;
    }

        .rightContent > div {
            margin: 5px 0;
            height: 70px;
            font-size: 15px;
        }

    #lineSelect {
        border: 1px solid #808080;
        -moz-appearance: none;
        -webkit-appearance: none;
        text-align: center;
        padding-right: 11px;
    }

    #selectLine li {
        list-style: none;
        display: block;
        float: left;
        width: 110px;
        height: 110px;
        padding-top: 33px;
        background-color: #53c8ff;
        margin: 20px;
        vertical-align: middle;
        text-align: center;
        font-size: 30px;
        cursor: pointer;
        border-radius: 50%;
        box-shadow: #021203 5px 5px 20px 5px inset;
    }

    .planOrder ul {
        list-style: none;
        padding-left: 0;
    }

    .planOrderName div {
        font-weight: bold;
    }

    .colorG {
        color: #289c12;
    }

    .colorR {
        color: #334BFF;
    }

    .colorY {
        color: #1368BC;
    }

    .colorB {
        color: #F33;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SMT</title>
</head>
<body>
    <div id="app" class="container">
        @{
            var UserLineNum = Session["User"] == null ? 0 : ((JianHeMES.Models.Users)Session["User"]).LineNum;
            if (UserLineNum > 14 && UserLineNum < 1)
            {
                UserLineNum = 0;
            }
        }
        <div v-if="lineSelect==0">
            <br /><br />
            <h1 class="text-center">请选择产线</h1>
            <hr />
            <ul id="selectLine">
                <li value="1">1</li>
                <li value="2">2</li>
                <li value="3">3</li>
                <li value="4">4</li>
                <li value="5">5</li>
                <li value="6">6</li>
                <li value="7">7</li>
                <li value="8">8</li>
                <li value="9">9</li>
                <li value="10">10</li>
                <li value="11">11</li>
                <li value="12">12</li>
                <li value="13">13</li>
                <li value="14">14</li>
            </ul>
        </div>
        <div v-else class="SMTLine">
            <div class="SMTLineTitle row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <p class="Line">
                        SMT-
                        <select id="lineSelect" v-model="lineSelect">
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                            <option value="6">6</option>
                            <option value="7">7</option>
                            <option value="8">8</option>
                            <option value="9">9</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                            <option value="13">13</option>
                            <option value="14">14</option>
                        </select>
                        线
                    </p>
                </div>
                <div class="col-md-3">
                    <div class="lineInfo colorR" v-for="(item,index) in LineDataList" v-if="lineSelect==(index+1)">
                        <p>班组：{{item.Team}}</p>
                        <p>组长：{{item.GroupLeader}}</p>
                    </div>
                </div>
            </div>
            <div class="row SMTContent">
                <div class="col-md-5 leftContent">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="control-label col-md-3" for="orderNum">订单号</label>
                            <div class="col-md-9">
                                <input id="orderNum" class="form-control text-box single-line" placeholder="请扫描订单号" v-focus v-on:keyup.enter="orderEnder" type="text">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3 colorB" for="isNormal">正常/异常</label>
                            <div class="col-md-9">
                                <input id="isNormal"  class="form-control text-box single-line" placeholder="请扫描正/异常" v-on:keyup.enter="enter" type="text">
                                <br />
                                <div id="ruturnMessage"></div>
                            </div>
                        </div>
                        <br /><br />
                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-9">
                                <button class="btn btn-default" v-on:click="lineDetail">完成输入</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-7 rightContent">
                    <div v-for="(item,index) in LineDataList" v-if="lineSelect==(index+1)">
                        <h2 class="text-center">产线<span>{{lineSelect}}</span>统计：</h2>
                        <h3 class="colorY">正在生产订单：<span>{{item.LineDoingOrder}}</span></h3>
                        <h3>正在生产订单累计数量：{{item.LineTotalQuantity}}个</h3>
                        <h3>今天生产数量汇总：{{item.LineTodayFinishOrderQuantity}}个</h3>
                        <h3 class="colorB">产线状态：<span>{{item.LineStatus}}</span></h3>
                        <br />
                        <table class="table table-bordered colorR">
                            <colgroup>
                                <col style="width:34%" />
                                <col style="width:15%" />
                                <col style="width:15%" />
                                <col style="width:18%" />
                                <col style="width:18%" />
                            </colgroup>
                            <tr>
                                <th>今天生产订单</th>
                                <th>合格品</th>
                                <th>不良品</th>
                                <th>不良率</th>
                                <th>完成率</th>
                            </tr>
                            <tr v-for="(i,index) in (item.LineTodayFinishOrder.split(','))">
                                <td>{{item.LineTodayFinishOrder.split(",")[index]}}</td>
                                <td>{{item.LineTodayFinishOrderNormal.split(",")[index]}}</td>
                                <td>{{item.LineTodayFinishOrderAbnormal.split(",")[index]}}</td>
                                <td>{{item.OrderAbnormalRate[index]}}</td>
                                <td>{{item.OrderTotalFinishRate[index]}}</td>
                            </tr>
                        </table>
                        <br />
                        <div class="row planOrderName colorG">
                            <div class="col-md-4">今天计划生产订单：</div>
                            <div class="planOrder col-md-8">
                                <ul v-for="i in item.LinePlanOrder.split(',')">
                                    <li>{{i}}</li>
                                </ul>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        Vue.directive('focus', {
            inserted: function (el) {
                el.focus()
            }
        });
        var app = new Vue({
            el: "#app",
            data: {
                LineDataList: [],
                lineSelect: "@UserLineNum",
            },
            methods: {
                lineDetail: function () {
                    var orderNum = $("#orderNum").val();
                    var isNormal = $("#isNormal").val();
                    if (orderNum != "" && isNormal != "") {
                        if (isNormal == "true" || isNormal == "false") {
                            $.ajax({
                                type: 'post',
                                url: "/SMT/SMT_Operator/",
                                data: {
                                    LineNum: app.lineSelect,
                                    OrderNum: orderNum,
                                    Result: isNormal
                                },
                                success: function (data) {
                                    console.log(data);
                                    $("#ruturnMessage").append($("<span style=\"color:red\">" + data + "</span>"));
                                    setTimeout(function () {
                                        $("#ruturnMessage").children().remove();
                                    }, 3000);
                                    $("#isNormal").focus().val("");
                                },
                                error: function (XMLHttpRequest, textStatus, errorThrown) {
                                    alert("POST失败")
                                }
                            });
                        } else {
                            $("#ruturnMessage").append($("<span style=\"color:red\">正常/异常 内容不正确</span>"));
                            setTimeout(function () {
                                $("#ruturnMessage").children().remove();
                            }, 3000);
                        };
                    } else {
                        $("#ruturnMessage").append($("<span style=\"color:red\">输入内容不能为空</span>"));
                        setTimeout(function () {
                            $("#ruturnMessage").children().remove();
                        }, 3000);
                    };
                },
                orderEnder: function () {
                    $("#isNormal").focus();
                },
                enter: function (el) {
                    $(this).focus();
                    this.$options.methods.lineDetail();
                }
            },
            watch: {

            },
            computed: {

            },
            created: function () {

            }
        });
        $("#selectLine li").click(function (val) {
            app.lineSelect = $(this).val();
        });
    </script>

    <script src="~/Scripts/jquery-1.11.3.js"></script>
    <script src="~/Scripts/jquery.signalR-2.3.0.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var mypush = $.connection.SMT;
            mypush.client.sendSMT_Operator = function (SMT_Operator) {
                console.log(SMT_Operator)
                app.LineDataList = [];
                console.log(Object.keys(SMT_Operator).length)
                for (index in SMT_Operator) {
                    var normal = SMT_Operator[index].LineTodayFinishOrderNormal.split(",");
                    var abnormal = SMT_Operator[index].LineTodayFinishOrderAbnormal.split(",");
                    var OrderQuantity = SMT_Operator[index].OrderQuantity.split(",");
                    var OrderAbnormalRateList = [];
                    var OrderTotalFinishRateList = [];
                    for (item in normal) {
                        var normalCount = parseInt(normal[item]) + parseInt(abnormal[item]);
                        OrderAbnormalRateList.push(((abnormal[item] / normalCount) * 100).toFixed(2) + "%");
                        OrderTotalFinishRateList.push(((normalCount / parseInt(OrderQuantity[item])) * 100).toFixed(2) + "%");
                    };
                    app.LineDataList.push({
                        LinePlanOrder: SMT_Operator[index].LinePlanOrder,
                        LineDoingOrder: SMT_Operator[index].LineDoingOrder,
                        LineTodayFinishOrderQuantity: SMT_Operator[index].LineTodayFinishOrderQuantity,
                        LineTotalQuantity: SMT_Operator[index].LineTotalQuantity,
                        Team: SMT_Operator[index].Team,
                        GroupLeader: SMT_Operator[index].GroupLeader,
                        LineStatus: SMT_Operator[index].LineStatus,
                        LineTodayFinishOrder: SMT_Operator[index].LineTodayFinishOrder,
                        LineTodayFinishOrderNormal: SMT_Operator[index].LineTodayFinishOrderNormal,
                        LineTodayFinishOrderAbnormal: SMT_Operator[index].LineTodayFinishOrderAbnormal,

                        //OrderQuantity: SMT_Board[index].OrderQuantity,
                        OrderAbnormalRate: OrderAbnormalRateList,
                        OrderTotalFinishRate: OrderTotalFinishRateList
                    });
                };
            };
            //启动
            $.connection.hub.start();
        });
    </script>
</body>
</html>