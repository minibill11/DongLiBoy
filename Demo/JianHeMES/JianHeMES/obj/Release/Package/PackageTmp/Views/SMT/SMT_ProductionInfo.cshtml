
@{
    ViewBag.Title = "SMT生产信息";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table > tbody > tr > th, .table > tbody > tr > td {
        text-align: center;
        vertical-align: middle;
    }

        .table > tbody > tr > td:nth-child(n+7), .table > tbody > tr > td:nth-child(1) {
            cursor: pointer;
        }

    .table > tbody > tr:nth-child(n+3):hover {
        background-color: rgba(77, 72, 72, 0.15);
    }
</style>
<h2 class="text-center">SMT生产信息</h2>

<br />
<div id="app" class="form-group">
    <table class="table table-bordered">
        <colgroup>
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
        </colgroup>
        <tr class="rowTitle1">
            <th rowspan="2">产线</th>
            <th rowspan="2">正在生产订单</th>
            <th colspan="5">今天生产订单</th>
            <th rowspan="2">累计数量</th>
            <th rowspan="2">今天计划订单</th>
            <th rowspan="2">班组</th>
            <th rowspan="2">组长</th>
            <th rowspan="2">状态</th>
        </tr>
        <tr class="rowTitle2">
            <th>订单</th>
            <th>数量</th>
            <th>良品</th>
            <th>不良品</th>
            <th>不良率</th>
        </tr>

        <tr v-for="(item, index) in marqueeList">
            <td>{{index+1}}</td>
            <td v-on:click="orderDetail(item.OrderNum,item.Id)">{{item.LineDoingOrder}}</td>
            <td >{{item.LineTodayFinishOrder}}</td>
            <td>{{item.LineTodayFinishOrderQuantity}}</td>
            <td>{{item.LineTodayFinishOrderNormal}}</td>
            <td>{{item.LineTodayFinishOrderAbnormal}}</td>
            <td>不良率</td>
            <td>{{item.LineTotalQuantity}}个</td>
            <td>{{item.LinePlanOrder}}</td>
            <td>{{item.Team}}</td>
            <td>{{item.GroupLeader}}</td>
            <td>{{item.LineStatus}}</td>
            @*<td v-on:click="Detail(item.OrderNum,'Assemble')">{{item.Assemble_Finish_Rate}}<span v-show="item.AssembleRecord_Count"><br />({{item.Assemble_Finish}}/{{item.Quantity}})</span> </td>*@
        </tr>
    </table>
</div>
<div id="setForm"></div>

<script>
    var app = new Vue({
        el: "#app",
        data: {
            //animate: false,
            marqueeList: []
        },
        created: function () {
            //setInterval(this.showMarquee, 5000)
        },
        methods: {
            Detail: function (val, station) {
                this.$options.methods.postForm("/ProductionControl/" + station, val);
                //$.ajax({
                //    type: 'post',
                //    url: "/ProductionControl/" + station,
                //    data: {
                //        OrderNum: val
                //    },
                //    success: function (data) {
                //        console.log(data);
                //    },
                //    error: function (XMLHttpRequest, textStatus, errorThrown) {
                //        console.log("POST失败")
                //    }
                //});
            },
            orderDetail: function (val, station) {
                this.$options.methods.postForm("/SMT/SMT_ProductionLineInfo?LineNum=1"/* + station, val*/);
            },
            postForm: function (url, params) {
                var newForm = $("<form action=" + url + " target='_blank' method='post' style='display:none' ><input name='OrderNum' value=" + params + " ></form>");
                $("#setForm").append(newForm);
                newForm.submit();
                newForm.remove();
            }
            //showMarquee: function () {
            //    this.animate = true;
            //    setTimeout(() => {
            //        this.marqueeList.push(this.marqueeList[0]);
            //        this.marqueeList.shift();
            //        this.animate = false;
            //    }, 1000);
            //}
        }
    })
</script>

@section scripts {
    <script src="~/Scripts/jquery-1.11.3.js"></script>
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var mypush = $.connection.SMT;
            mypush.client.sendSMT_ProductionInfo = function (SMT_ProductionInfo) {
                console.log(SMT_ProductionInfo);
                app.marqueeList = [];
                console.log(Object.keys(SMT_ProductionInfo).length)

                for (index in SMT_ProductionInfo) {
                    app.marqueeList.push({
                        LineDoingOrder: SMT_ProductionInfo[index].LineDoingOrder,
                        LineTodayFinishOrder: SMT_ProductionInfo[index].LineTodayFinishOrder,
                        LineTodayFinishOrderQuantity: SMT_ProductionInfo[index].LineTodayFinishOrderQuantity,
                        LineTodayFinishOrderNormal: SMT_ProductionInfo[index].LineTodayFinishOrderNormal,
                        LineTodayFinishOrderAbnormal: SMT_ProductionInfo[index].LineTodayFinishOrderAbnormal,
                        LineTotalQuantity: SMT_ProductionInfo[index].LineTotalQuantity,
                        LinePlanOrder: SMT_ProductionInfo[index].LinePlanOrder,
                        Team: SMT_ProductionInfo[index].Team,
                        GroupLeader: SMT_ProductionInfo[index].GroupLeader,
                        LineStatus: SMT_ProductionInfo[index].LineStatus,
                    });
                    //temporaryJson[key] = SMT_ProductionInfo[key];
                    //app.marqueeList.push(SMT_ProductionInfo[key]);
                    //console.log(key)
                    //console.log(SMT_ProductionInfo[key])
                    //console.log(app.marqueeList)


                }
                //for (index in SMT_ProductionInfo) {
                //    app.marqueeList.push({
                //        Id: SMT[index].Id,
                //        OrderNum: SMT[index].OrderNum,
                //        Quantity: SMT[index].Quantity,
                //        PlatformType: SMT[index].PlatformType,
                //        PlanInputTime: SMT[index].PlanInputTime,
                //        PlanCompleteTime: SMT[index].PlanCompleteTime,
                //        ActualProductionTime: SMT[index].ActualProductionTime,
                //        Assemble_Finish_Rate: SMT[index].Assemble_Finish_Rate,
                //        Assemble_Pass_Rate: SMT[index].Assemble_Pass_Rate,
                //        Burn_in_Finish_Rate: SMT[index].Burn_in_Finish_Rate,
                //        Burn_in_Pass_Rate: SMT[index].Burn_in_Pass_Rate,
                //        Calibration_Finish_Rate: SMT[index].Calibration_Finish_Rate,
                //        Calibration_Pass_Rate: SMT[index].Calibration_Pass_Rate,
                //        Appearances_Finish_Rate: SMT[index].Appearances_Finish_Rate,
                //        Appearances_Pass_Rate: SMT[index].Appearances_Pass_Rate,
                //        Assemble_Finish: SMT[index].Assemble_Finish,
                //        AssembleRecord_Count: SMT[index].AssembleRecord_Count,
                //        Burn_in_Finish: SMT[index].Burn_in_Finish,
                //        Burn_in_Count: SMT[index].Burn_in_Count,
                //        Calibration_Finish: SMT[index].Calibration_Finish,
                //        Calibration_Count: SMT[index].Calibration_Count,
                //        Appearances_Finish: SMT[index].Appearances_Finish,
                //        Appearances_Count: SMT[index].Appearances_Count
                //    });
                //}
            };
            //启动
            $.connection.hub.start();
        });
    </script>
}
