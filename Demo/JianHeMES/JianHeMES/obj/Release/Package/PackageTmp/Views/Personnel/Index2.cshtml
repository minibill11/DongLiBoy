@model IEnumerable<JianHeMES.Models.Personnel_daily>

@{
    ViewBag.Title = "Index2";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index2</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@Html.ActionLink("提交日报信息", "Create")
@using (Html.BeginForm("Index2", "Personnel", FormMethod.Post, new { id = "searchForm", @class = "text-center" }))
{
    @Html.AntiForgeryToken()
    <p>
        <span>部门：@Html.DropDownList("department", (List<SelectListItem>)ViewBag.Department, "全部")  </span>
        <span class="hidden-xs">负责人：@Html.DropDownList("principal", (List<SelectListItem>)ViewBag.Principal, "全部")  </span>
        @*<span>
                查询范围：
                <select name="section">
                    <option value="day">日</option>
                    <option value="week">周</option>
                    <option value="month">月</option>
                    <option value="year">年</option>
                </select>
            </span>*@
        <span>日期：<input type="date" name="date" v-module="SearchDate" /></span>
        <input type="hidden" id="PageIndex" name="PageIndex" value="0" />
        <input type="submit" id="searchButton" value="查找" />
    </p>
    <br />
}


    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Department)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Principal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Aurhorized_personnel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Need_personnel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Employees_personnel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Workers_personnel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Today_on_board_employees)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Today_on_board_workers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Interview)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoy_dimission_employees)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Todoy_dimission_workers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Resigned_that_month)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Resigned_workers_that_month)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reporter)
            </th>
            <th></th>
        </tr>
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Principal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Aurhorized_personnel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Need_personnel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Employees_personnel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Workers_personnel)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Today_on_board_employees)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Today_on_board_workers)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Interview)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Todoy_dimission_employees)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Todoy_dimission_workers)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Resigned_that_month)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Resigned_workers_that_month)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reporter)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        }
    </table>


<style>
    .table > tbody > tr > td, .table > thead > tr > th, .table > tfoot > tr > th {
        text-align: center;
        vertical-align: middle;
        font-size: 13px;
        padding: 5px;
    }

    .table-bordered > thead > tr > th {
        border-bottom-width: 1px;
    }
</style>


<script>
    var tableApp = new Vue({
        el: "#tableApp",
        data: {
        },
        created:{
        },
        method: {

        },
        computed: {
            SearchDate: function () {
                var viewbag = '@ViewBag.date'.split(' ')[0].split("/");
                viewbag[1] = viewbag[1] < 10 ? "0" + viewbag[1] : viewbag[1];
                viewbag[2] = viewbag[2] < 10 ? "0" + viewbag[2] : viewbag[2];
                return viewbag[0]+"-"+viewbag[1]+"-"+viewbag[2];
            }
        }
    })
    $(function () {

    })
</script>