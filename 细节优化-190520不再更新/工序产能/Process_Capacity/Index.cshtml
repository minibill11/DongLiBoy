@{
    ViewBag.Title = "工序产能首页";
}
@*<meta http-equiv="refresh" content="5">每隔5秒刷新*@
<link href="~/Content/styleFile/packaging/index.css" rel="stylesheet" />
<link href="~/Content/styleFile/processCapacity/ProcessCapacity.css?v=" +Math.random() rel="stylesheet" />
<script src="~/Content/styleFile/packaging/index.js"></script>
<style>
    .container, .body-content {
        width: 1300px;
    }
</style>
<div id="app" v-cloak>
    <el-container>
        <el-header class="text-center">
            <h1>@ViewBag.Title</h1>
        </el-header>
        <el-main v-loading="loading">
            <el-row class="text-center">
                <newdata-dialog></newdata-dialog>
                <el-form :inline="true" :model="queryTable" class="demo-form-inline">
                    <el-form-item label="平台">
                        <el-input v-model="queryTable.proplatform" placeholder="平台" clearable size="medium"></el-input>
                    </el-form-item>
                    <el-form-item label="型号">
                        <el-input v-model="queryTable.protype" placeholder="型号" clearable size="medium"></el-input>
                    </el-form-item>
                    <el-form-item>
                        <el-button type="primary" @@click="onQuerySubmit" size="medium">查询</el-button>
                    </el-form-item>
                </el-form>
            </el-row>
            <el-row class="text-center">
                @*主表*@
                @RenderPage("_mainTable.cshtml")
            </el-row>
        </el-main>
    </el-container>
</div>
@*左上角触摸三角，文件上传跳转弹出框，输入框编辑，新建数据对话框*@
@RenderPage("_hoverAnimation.cshtml")
@RenderPage("_uploadPopover.cshtml")
@RenderPage("_inputEdit.cshtml")
@RenderPage("_newDataDialog.cshtml")
<script src="~/Content/styleFile/processCapacity/ProcessCapacity.js?v=" +Math.random()></script>
<script>
    var app = new Vue({
        el: "#app",
        mixins: [mixin],
        data: {
            queryTable: {
                protype: "",
                proplatform: ""
            },
        },
        methods: {
            //总表输入平台显示型号列表
            getPlatformList(v) {
                axios.post('/Process_Capacity/DisplayTypeFromPlatfrom', {
                    platfrom: v,
                }).then(res => {
                    console.log(res.data);
                }).catch(err => {
                    console.warn("型号列表获取失败");
                });
            },
            // 双击击单元格
            singledblClick(row, column, cell, event) {
                //console.log(row);
                //console.log(column);
                //console.log(cell);
                //console.log(event);
            },
        },
        //watch: {
        //    "queryTable.proplatform"(v) {
        //        this.getPlatformList(v);
        //    }
        //}
    });
</script>