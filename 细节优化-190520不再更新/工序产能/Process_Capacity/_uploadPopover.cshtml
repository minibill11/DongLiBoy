@*文件上传弹出框*@
<script type="text/template" id="popover">
    <el-popover trigger="click"
                @*:disabled="false"*@
                v-model="popoverVisible"
                placement="bottom-start">
        <el-upload name="fileup"
                   class="uploadStyle"
                   ref="upload"
                   accept=".xls,.xlsx"
                   :action="'/Process_Capacity/'+address"
                   :on-exceed="handleExceed"
                   :limit="1"
                   @*:multiple="true"*@
                   :file-list="fileList"
                   :auto-upload="false"
                   :before-upload="beforeUpload"
                   :on-change="handleChange"
                   :on-success="handleSuccess"
                   :on-error="handleError"
                   :data="{id:rowdata.id,type:rowdata.Type,PCBNumber:rowdata.PCB,platform:rowdata.Platform,seaction:section}">
            <el-button style="margin-left: 10px;" size="small" type="success" @@click="submitUpload">上传到服务器</el-button>
            <el-button slot="trigger" size="small" type="primary">选取文件</el-button>
            <button @@click="popoverVisible = false" type="button" aria-label="Close" class="el-dialog__headerbtn" style="top:50px;right:15px;font-size:10px"><i class="el-dialog__close el-icon el-icon-close">关闭</i></button>
            <div slot="tip" class="el-upload__tip">excel</div>
        </el-upload>
        <div slot="reference" style="width:36px;margin:0 auto;">
            <el-button size="mini" class="miniBtn" type="primary" plain round>上传</el-button>
        </div>
        @*<slot></slot>*@
    </el-popover>
</script>
@*文件跳转链接*@
<script type="text/template" id="link">
    <div>
        <el-link :href=hrefname type="primary" target="_blank" :underline="false">{{nametext}}</el-link>
        <div v-show="examinanstatu!='审核通过'" class="examinanMessage red">
            {{examinanstatu}}
        </div>
        @*<br /><span>IMG:{{img}}</span>
            <br /><span>PDF:{{pdf}}</span>*@
    </div>
</script>
<script>
    //文件上传弹出框
    Vue.component('popover-upload', {
        template: document.getElementById("popover"),
        props: ['rowdata', 'itemdata', 'section'],
        data: function () {
            return {
                fileList: [],
                popoverVisible: false,
                address: ""
            }
        },
        mounted: function () {
            if (this.section == "SMT") {
                this.address = "Upload_Pick_And_Place";
            } else {
                this.address = "Upload_ProcessBalance";
            };
        },
        methods: {
            //文件超出个数限制时的钩子
            handleExceed(files, fileList) {
                this.$message.warning(`只能选择 1 个文件！`);
            },
            //上传文件之前的钩子
            beforeUpload(file) {
                var suffix = file.name.substring(file.name.lastIndexOf('.') + 1);
                const xlsExtension = suffix === 'xls';
                const xlsxExtension = suffix === 'xlsx';
                // const isLt2M = file.size / 1024 / 1024 < 10;
                if (!xlsExtension && !xlsxExtension) {
                    this.$message({
                        message: '上传文件只能是 xls、xlsx格式!',
                        type: 'warning'
                    });
                };
                return xlsExtension || xlsxExtension;
                // if(!isLt2M) {
                //     this.$message({
                //         message: '上传文件大小不能超过 10MB!',
                //         type: 'warning'
                //     });
                // };
                // return xlsExtension || xlsxExtension && isLt2M;
            },
            //文件状态改变时的钩子
            handleChange(file, fileList) {
                //ready,success,fail
                if (file.status == "ready") {
                    console.log("添加文件:" + file.name);
                } else {
                    this.$refs.upload.clearFiles();
                    this.popoverVisible = false;
                };
            },
            //文件上传成功时的钩子
            handleSuccess(response, file, fileList) {
                //this.imageUrl = URL.createObjectURL(file.raw);
                //console.log(response)
                if (response.result == true) {
                    let row = this.rowdata, item = this.itemdata, rtd = response.content;
                    if (this.section == "SMT") {
                        for (let i in rtd) {
                            row[i] = rtd[i];
                        };
                    } else {
                        if (item == null) {
                            switch (this.section) {
                                case '后焊':
                                    row.AfterWeld = [];
                                    row.AfterWeld.push(rtd)
                                    break;
                                case '打底壳':
                                    row.BottomCas = [];
                                    row.BottomCas.push(rtd)
                                    break;
                                case '锁面罩':
                                    row.LockTheMask = [];
                                    row.LockTheMask.push(rtd)
                                    break;
                                case '模组装配':
                                    row.Module = [];
                                    row.Module.push(rtd)
                                    break;
                                case '包装':
                                    row.Packing = [];
                                    row.Packing.push(rtd)
                                    break;
                                //default:
                            };
                        } else {
                            item.push(rtd);
                        };
                    };
                    this.$message.success("上传成功！");
                } else {
                    this.$message.error(response.content);
                };
            },
            //文件上传失败时的钩子
            handleError(err, file, fileList) {
                this.$message.error("上传失败！");
            },
            //提交
            submitUpload() {
                this.$refs.upload.submit();
            },
        }
    });
    //文件跳转链接
    Vue.component('jump-link', {
        props: ['rowdata', 'section', 'nametext', 'examinanstatu', 'img', 'pdf'],
        template: document.getElementById("link"),
        data: function () {
            return {
                hrefname: "",
            }
        },
        mounted: function () {
            if (this.section == "SMT") {
                this.hrefname = `/Process_Capacity/StandardCapacity?id=${this.rowdata.id}&type=${this.rowdata.Type}&PCBNumber=${this.rowdata.PCB}&platform=${this.rowdata.Platform}`;
            } else {
                this.hrefname = `/Process_Capacity/ProcessBalanceCard?id=${this.rowdata.id}&type=${this.rowdata.Type}&PCBNumber=${this.rowdata.PCB}&platform=${this.rowdata.Platform}&Section=${encodeURI(this.section)}&title=${encodeURI(this.nametext)}`;
            };
        }
    });
</script>