@*Dialog模组需求数量*@
<script type="text/template" id="addNeedNum">
    <div>
        <el-button type="text" icon="el-icon-edit-outline" @@click="newDataVisible = true" size="mini" class="miniBtn" round>录入</el-button>
        @*<slot></slot>*@
        <el-dialog title="模组需求数量"
                   @@open="open(itemid)"
                   @@close="close('ruleForm')"
                   class="needNumDialog"
                   :visible.sync="newDataVisible">
            <el-form label-width="30%"
                     label-position="right"
                     ref="ruleForm"
                     size="mini"
                     :rules="rules"
                     :model="newDataForm">
                <el-form-item label="SMT" prop="SMTModuleNeedNum">
                    <el-input v-model="newDataForm.SMTModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="插件" prop="PluginModuleNeedNum">
                    <el-input v-model="newDataForm.PluginModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="后焊" prop="AfterModuleNeedNum">
                    <el-input v-model="newDataForm.AfterModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="三防" prop="ThreeModuleNeedNum">
                    <el-input v-model="newDataForm.ThreeModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="打底壳" prop="BottnModuleNeedNum">
                    <el-input v-model="newDataForm.BottnModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="装磁吸" prop="MagneticModuleNeedNum">
                    <el-input v-model="newDataForm.MagneticModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="灌胶" prop="GuleModuleNeedNum">
                    <el-input v-model="newDataForm.GuleModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="气密" prop="AirtightModuleNeedNum">
                    <el-input v-model="newDataForm.AirtightModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="锁面罩" prop="LockMasModuleNeedNum">
                    <el-input v-model="newDataForm.LockMasModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="喷墨" prop="InjekModuleNeedNum">
                    <el-input v-model="newDataForm.InjekModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="模块线" prop="ModuleLineNeedNum">
                    <el-input v-model="newDataForm.ModuleLineNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="模组装配" prop="ModuleNeedNum">
                    <el-input v-model="newDataForm.ModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="老化" prop="BuriInModuleNeedNum">
                    <el-input v-model="newDataForm.BuriInModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item label="包装" prop="PackModuleNeedNum">
                    <el-input v-model="newDataForm.PackModuleNeedNum"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button @@click="newDataVisible = false">取 消</el-button>
                    <el-button type="primary" @@click="submitForm('ruleForm')">确 定</el-button>
                </el-form-item>
            </el-form>
        </el-dialog>
    </div>
</script>

<script>
    Vue.component('add-neednum', {
        template: document.getElementById("addNeedNum"),
        props: [/*'rowdata', 'itemdata',*/ 'itemid'],
        data: function () {
            return {
                newDataForm: {
                    SMTModuleNeedNum: "",
                    PluginModuleNeedNum: "",
                    AfterModuleNeedNum: "",
                    ThreeModuleNeedNum: "",
                    BottnModuleNeedNum: "",
                    MagneticModuleNeedNum: "",
                    InjekModuleNeedNum: "",
                    ModuleLineNeedNum: "",
                    GuleModuleNeedNum: "",
                    AirtightModuleNeedNum: "",
                    LockMasModuleNeedNum: "",
                    ModuleNeedNum: "",
                    BuriInModuleNeedNum: "",
                    PackModuleNeedNum: "",
                },
                newDataVisible: false,
                rules: {}
            }
        },
        mounted: function () {
            let checkFloat = (rule, value, callback) => {
                if (value == undefined || value == '') { callback() };
                let reg = /^(0|([0-9]\d*))(\.\d{0,2})?$/g;
                if (reg.test(value)) {
                    callback();
                } else {
                    callback(new Error('请输入正确的数值，数值最多为2位小数'));
                };
            };
            let floatTest = [
                { required: true, message: '数量不能为空', trigger: 'blur' },
                { validator: checkFloat, trigger: 'blur' }
            ];
            this.rules = {
                SMTModuleNeedNum: floatTest,
                PluginModuleNeedNum: floatTest,
                AfterModuleNeedNum: floatTest,
                ThreeModuleNeedNum: floatTest,
                BottnModuleNeedNum: floatTest,
                MagneticModuleNeedNum: floatTest,
                InjekModuleNeedNum: floatTest,
                ModuleLineNeedNum: floatTest,
                GuleModuleNeedNum: floatTest,
                AirtightModuleNeedNum: floatTest,
                LockMasModuleNeedNum: floatTest,
                ModuleNeedNum: floatTest,
                BuriInModuleNeedNum: floatTest,
                PackModuleNeedNum: floatTest,
            };
        },
        methods: {
            //新建总表记录
            addNewData() {
                this.newDataVisible = false;
                app.loading = true;
                axios.post('/Process_Capacity/Add_ModuleNeedNum', {
                    id: this.itemid,
                    smtmodeulneed: this.newDataForm.SMTModuleNeedNum,
                    pluginmodeulneed: this.newDataForm.PluginModuleNeedNum,
                    aftermodeulneed: this.newDataForm.AfterModuleNeedNum,
                    threemodeulneed: this.newDataForm.ThreeModuleNeedNum,
                    bootnmodeulneed: this.newDataForm.BottnModuleNeedNum,
                    magneticmodeulneed: this.newDataForm.MagneticModuleNeedNum,
                    injekmodeulneed: this.newDataForm.InjekModuleNeedNum,
                    moduleLinemoduleneed: this.newDataForm.ModuleLineNeedNum,
                    gluemodeulneed: this.newDataForm.GuleModuleNeedNum,
                    airtightmodeulneed: this.newDataForm.AirtightModuleNeedNum,
                    lockmodeulneed: this.newDataForm.LockMasModuleNeedNum,
                    modeulneed: this.newDataForm.ModuleNeedNum,
                    burnmodeulneed: this.newDataForm.BuriInModuleNeedNum,
                    packmodeulneed: this.newDataForm.PackModuleNeedNum,
                }).then(res => {
                    console.log(res.data)
                    if (res.data.message == true) {
                        this.$message.success('保存成功');
                    } else {
                        this.$message.error('保存失败');
                    };
                    app.loading = false;
                }).catch(err => {
                    this.$message.error('保存失败');
                    app.loading = false;
                });
            },
            //打开模态框
            open(id) {
                axios.post('/Process_Capacity/GetModuleNeed', { id: id }).then(res => {
                    //console.log(res.data)
                    let rtd = res.data;
                    //for (let i in rtd) {
                    //    rtd[i] = rtd[i] == 0 ? "" : rtd[i];
                    //};
                    this.newDataForm = rtd;
                }).catch(err => {
                    console.warn(err);
                });
            },
            //关闭模态框
            close(formName) {
                this.$refs[formName].resetFields();
            },
            //验证值
            submitForm(formName) {
                this.$refs[formName].validate((valid) => {
                    if (valid) {
                        this.addNewData();
                    } else {
                        console.log('error submit!!');
                        return false;
                    };
                });
            }
        }
    });
</script>