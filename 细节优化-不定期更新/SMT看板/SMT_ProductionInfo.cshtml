
@{
    ViewBag.Title = "SMT生产信息";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table > tbody > tr > th, .table > tbody > tr > td {
        text-align: center;
        vertical-align: middle;
    }

        .table > tbody > tr > td:nth-child(-n+2) {
            cursor: pointer;
        }

    .table > tbody > tr:nth-child(n+3):hover {
        background-color: rgba(77, 72, 72, 0.15);
    }

    ul {
        padding: 0;
        margin: 0;
    }

        ul li {
            list-style: none;
            white-space: nowrap;
        }
</style>
<h2 class="text-center">SMT生产信息</h2>

<br />
<div id="app" class="form-group">
    <table class="table table-bordered">
        <colgroup>
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
            <col width="80 ">
        </colgroup>
        <tr class="rowTitle1">
            <th rowspan="2">产线</th>
            <th rowspan="2">正在生产订单</th>
            <th colspan="5">今天生产订单</th>
            <th rowspan="2">累计数量</th>
            <th rowspan="2">今天计划订单</th>
            <th rowspan="2">班组</th>
            <th rowspan="2">组长</th>
            <th rowspan="2">状态</th>
        </tr>
        <tr class="rowTitle2">
            <th>订单</th>
            <th>数量</th>
            <th>良品</th>
            <th>不良品</th>
            <th>不良率</th>
        </tr>
        <tr v-for="(item, index) in lineDataList">
            <td v-on:click="lineDetail('',index+1)">{{index+1}}</td>
            <td v-on:click="lineDetail('',index+1)">{{item.LineDoingOrder}}</td>
            <td>
                <ul>
                    <li v-for="i in item.LineTodayFinishOrder">{{i}}</li>
                </ul>
            </td>
            @*<td>{{item.LineTodayFinishOrderQuantity}}</td>*@
            <td>
                <ul>
                    <li v-for="i in item.OrderQuantity">{{i}}</li>
                </ul>
            </td>
            <td>
                <ul>
                    <li v-for="i in item.LineTodayFinishOrderNormal">{{i}}</li>
                </ul>
            </td>
            <td>
                <ul>
                    <li v-for="i in item.LineTodayFinishOrderAbnormal">{{i}}</li>
                </ul>
            </td>
            <td>
                <ul>
                    <li v-for="i in item.OrderAbnormalRate">{{i}}</li>
                </ul>
            </td>
            <td>{{item.LineTotalQuantity}}个</td>
            <td>
                <ul>
                    <li v-for="i in item.LinePlanOrder">{{i}}</li>
                </ul>
            </td>
            <td>{{item.Team}}</td>
            <td>{{item.GroupLeader}}</td>
            <td>{{item.LineStatus}}</td>
            @*<td v-on:click="Detail(item.OrderNum,'Assemble')">{{item.Assemble_Finish_Rate}}<span v-show="item.AssembleRecord_Count"><br />({{item.Assemble_Finish}}/{{item.Quantity}})</span> </td>*@
        </tr>
    </table>
</div>
<div id="setForm"></div>

<script>
    var app = new Vue({
        el: "#app",
        data: {
            lineDataList: [],
        },
        methods: {
            Detail: function (val, station) {
                this.$options.methods.postForm("/ProductionControl/" + station, val);
                //$.ajax({
                //    type: 'post',
                //    url: "/ProductionControl/" + station,
                //    data: {
                //        OrderNum: val
                //    },
                //    success: function (data) {
                //        console.log(data);
                //    },
                //    error: function (XMLHttpRequest, textStatus, errorThrown) {
                //        console.log("POST失败")
                //    }
                //});
            },
            lineDetail: function (val, station) {
                this.$options.methods.postForm("/SMT/SMT_ProductionLineInfo?LineNum=" + station, val);
            },
            postForm: function (url, params) {
                var newForm = $("<form action=" + url + " target='_blank' method='post' style='display:none' ><input name='OrderNum' value=" + params + " ></form>");
                $("#setForm").append(newForm);
                newForm.submit();
                newForm.remove();
            }
        }
    })
</script>

@section scripts {
    <script src="~/Scripts/jquery-1.11.3.js"></script>
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var mypush = $.connection.SMT;
            mypush.client.sendSMT_ProductionInfo = function (SMT_ProductionInfo) {
                console.log(SMT_ProductionInfo);
                app.lineDataList = [];
                console.log(Object.keys(SMT_ProductionInfo).length)

                for (index in SMT_ProductionInfo) {
                    var normal = SMT_ProductionInfo[index].LineTodayFinishOrderNormal;
                    var abnormal = SMT_ProductionInfo[index].LineTodayFinishOrderAbnormal;
                    var OrderQuantityList = [];
                    var OrderAbnormalRateList = [];
                    for (item in normal) {
                        var normalCount = normal[item] + abnormal[item];
                        OrderQuantityList.push(normalCount);
                        OrderAbnormalRateList.push(((abnormal[item] / normalCount) * 100).toFixed(2) + "%")
                    };
                    app.lineDataList.push({
                        LineDoingOrder: SMT_ProductionInfo[index].LineDoingOrder,
                        LineTodayFinishOrder: SMT_ProductionInfo[index].LineTodayFinishOrder,
                        //LineTodayFinishOrderQuantity: SMT_ProductionInfo[index].LineTodayFinishOrderQuantity,
                        LineTodayFinishOrderNormal: SMT_ProductionInfo[index].LineTodayFinishOrderNormal,
                        LineTodayFinishOrderAbnormal: SMT_ProductionInfo[index].LineTodayFinishOrderAbnormal,
                        LineTotalQuantity: SMT_ProductionInfo[index].LineTotalQuantity,
                        LinePlanOrder: SMT_ProductionInfo[index].LinePlanOrder,
                        Team: SMT_ProductionInfo[index].Team,
                        GroupLeader: SMT_ProductionInfo[index].GroupLeader,
                        LineStatus: SMT_ProductionInfo[index].LineStatus,
                        //OrderQuantity: SMT_ProductionInfo[index].OrderQuantity,

                        OrderQuantity: OrderQuantityList,
                        OrderAbnormalRate: OrderAbnormalRateList
                    });
                }
            };
            //启动
            $.connection.hub.start();
        });
    </script>
}
